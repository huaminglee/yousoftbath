#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4984
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntereekBathBackService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="BathDB")]
	public partial class BathDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertSeat(Seat instance);
    partial void UpdateSeat(Seat instance);
    partial void DeleteSeat(Seat instance);
    partial void InsertCombo(Combo instance);
    partial void UpdateCombo(Combo instance);
    partial void DeleteCombo(Combo instance);
    partial void InsertDepartmentLog(DepartmentLog instance);
    partial void UpdateDepartmentLog(DepartmentLog instance);
    partial void DeleteDepartmentLog(DepartmentLog instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertTechReservation(TechReservation instance);
    partial void UpdateTechReservation(TechReservation instance);
    partial void DeleteTechReservation(TechReservation instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertCatgory(Catgory instance);
    partial void UpdateCatgory(Catgory instance);
    partial void DeleteCatgory(Catgory instance);
    partial void InsertTechIndex(TechIndex instance);
    partial void UpdateTechIndex(TechIndex instance);
    partial void DeleteTechIndex(TechIndex instance);
    partial void InsertTechMsg(TechMsg instance);
    partial void UpdateTechMsg(TechMsg instance);
    partial void DeleteTechMsg(TechMsg instance);
    partial void InsertWaiterItem(WaiterItem instance);
    partial void UpdateWaiterItem(WaiterItem instance);
    partial void DeleteWaiterItem(WaiterItem instance);
    partial void InsertRoomCall(RoomCall instance);
    partial void UpdateRoomCall(RoomCall instance);
    partial void DeleteRoomCall(RoomCall instance);
    partial void InsertRoomWarn(RoomWarn instance);
    partial void UpdateRoomWarn(RoomWarn instance);
    partial void DeleteRoomWarn(RoomWarn instance);
    partial void InsertBarMsg(BarMsg instance);
    partial void UpdateBarMsg(BarMsg instance);
    partial void DeleteBarMsg(BarMsg instance);
    partial void InsertApk(Apk instance);
    partial void UpdateApk(Apk instance);
    partial void DeleteApk(Apk instance);
    partial void InsertClearTable(ClearTable instance);
    partial void UpdateClearTable(ClearTable instance);
    partial void DeleteClearTable(ClearTable instance);
    partial void InsertCardSale(CardSale instance);
    partial void UpdateCardSale(CardSale instance);
    partial void DeleteCardSale(CardSale instance);
    partial void InsertUploadRecords(UploadRecords instance);
    partial void UpdateUploadRecords(UploadRecords instance);
    partial void DeleteUploadRecords(UploadRecords instance);
    partial void InsertOptions(Options instance);
    partial void UpdateOptions(Options instance);
    partial void DeleteOptions(Options instance);
    #endregion
		
		public BathDBDataContext() : 
				base(global::IntereekBathBackService.Properties.Settings.Default.BathDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Account
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menu
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<Seat> Seat
		{
			get
			{
				return this.GetTable<Seat>();
			}
		}
		
		public System.Data.Linq.Table<Combo> Combo
		{
			get
			{
				return this.GetTable<Combo>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentLog> DepartmentLog
		{
			get
			{
				return this.GetTable<DepartmentLog>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Room> Room
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<TechReservation> TechReservation
		{
			get
			{
				return this.GetTable<TechReservation>();
			}
		}
		
		public System.Data.Linq.Table<Job> Job
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<Catgory> Catgory
		{
			get
			{
				return this.GetTable<Catgory>();
			}
		}
		
		public System.Data.Linq.Table<TechIndex> TechIndex
		{
			get
			{
				return this.GetTable<TechIndex>();
			}
		}
		
		public System.Data.Linq.Table<TechMsg> TechMsg
		{
			get
			{
				return this.GetTable<TechMsg>();
			}
		}
		
		public System.Data.Linq.Table<WaiterItem> WaiterItem
		{
			get
			{
				return this.GetTable<WaiterItem>();
			}
		}
		
		public System.Data.Linq.Table<RoomCall> RoomCall
		{
			get
			{
				return this.GetTable<RoomCall>();
			}
		}
		
		public System.Data.Linq.Table<RoomWarn> RoomWarn
		{
			get
			{
				return this.GetTable<RoomWarn>();
			}
		}
		
		public System.Data.Linq.Table<BarMsg> BarMsg
		{
			get
			{
				return this.GetTable<BarMsg>();
			}
		}
		
		public System.Data.Linq.Table<Apk> Apk
		{
			get
			{
				return this.GetTable<Apk>();
			}
		}
		
		public System.Data.Linq.Table<ClearTable> ClearTable
		{
			get
			{
				return this.GetTable<ClearTable>();
			}
		}
		
		public System.Data.Linq.Table<CardSale> CardSale
		{
			get
			{
				return this.GetTable<CardSale>();
			}
		}
		
		public System.Data.Linq.Table<UploadRecords> UploadRecords
		{
			get
			{
				return this.GetTable<UploadRecords>();
			}
		}
		
		public System.Data.Linq.Table<Options> Options
		{
			get
			{
				return this.GetTable<Options>();
			}
		}
	}
	
	[Table(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _text;
		
		private string _systemId;
		
		private string _openTime;
		
		private string _openEmployee;
		
		private System.DateTime _payTime;
		
		private string _payEmployee;
		
		private string _name;
		
		private string _promotionMemberId;
		
		private System.Nullable<double> _promotionAmount;
		
		private string _memberId;
		
		private string _discountEmployee;
		
		private System.Nullable<double> _discount;
		
		private string _serverEmployee;
		
		private System.Nullable<double> _cash;
		
		private System.Nullable<double> _bankUnion;
		
		private System.Nullable<double> _creditCard;
		
		private System.Nullable<double> _coupon;
		
		private System.Nullable<double> _groupBuy;
		
		private System.Nullable<double> _zero;
		
		private System.Nullable<double> _server;
		
		private System.Nullable<double> _deducted;
		
		private System.Nullable<double> _changes;
		
		private System.Nullable<double> _wipeZero;
		
		private string _macAddress;
		
		private string _abandon;
		
		private System.Nullable<int> _departmentId;
		
		private string _systemdId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnopenTimeChanging(string value);
    partial void OnopenTimeChanged();
    partial void OnopenEmployeeChanging(string value);
    partial void OnopenEmployeeChanged();
    partial void OnpayTimeChanging(System.DateTime value);
    partial void OnpayTimeChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpromotionMemberIdChanging(string value);
    partial void OnpromotionMemberIdChanged();
    partial void OnpromotionAmountChanging(System.Nullable<double> value);
    partial void OnpromotionAmountChanged();
    partial void OnmemberIdChanging(string value);
    partial void OnmemberIdChanged();
    partial void OndiscountEmployeeChanging(string value);
    partial void OndiscountEmployeeChanged();
    partial void OndiscountChanging(System.Nullable<double> value);
    partial void OndiscountChanged();
    partial void OnserverEmployeeChanging(string value);
    partial void OnserverEmployeeChanged();
    partial void OncashChanging(System.Nullable<double> value);
    partial void OncashChanged();
    partial void OnbankUnionChanging(System.Nullable<double> value);
    partial void OnbankUnionChanged();
    partial void OncreditCardChanging(System.Nullable<double> value);
    partial void OncreditCardChanged();
    partial void OncouponChanging(System.Nullable<double> value);
    partial void OncouponChanged();
    partial void OngroupBuyChanging(System.Nullable<double> value);
    partial void OngroupBuyChanged();
    partial void OnzeroChanging(System.Nullable<double> value);
    partial void OnzeroChanged();
    partial void OnserverChanging(System.Nullable<double> value);
    partial void OnserverChanged();
    partial void OndeductedChanging(System.Nullable<double> value);
    partial void OndeductedChanged();
    partial void OnchangesChanging(System.Nullable<double> value);
    partial void OnchangesChanged();
    partial void OnwipeZeroChanging(System.Nullable<double> value);
    partial void OnwipeZeroChanged();
    partial void OnmacAddressChanging(string value);
    partial void OnmacAddressChanged();
    partial void OnabandonChanging(string value);
    partial void OnabandonChanged();
    partial void OndepartmentIdChanging(System.Nullable<int> value);
    partial void OndepartmentIdChanged();
    partial void OnsystemdIdChanging(string value);
    partial void OnsystemdIdChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)")]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_openTime", DbType="NVarChar(MAX)")]
		public string openTime
		{
			get
			{
				return this._openTime;
			}
			set
			{
				if ((this._openTime != value))
				{
					this.OnopenTimeChanging(value);
					this.SendPropertyChanging();
					this._openTime = value;
					this.SendPropertyChanged("openTime");
					this.OnopenTimeChanged();
				}
			}
		}
		
		[Column(Storage="_openEmployee", DbType="NVarChar(MAX)")]
		public string openEmployee
		{
			get
			{
				return this._openEmployee;
			}
			set
			{
				if ((this._openEmployee != value))
				{
					this.OnopenEmployeeChanging(value);
					this.SendPropertyChanging();
					this._openEmployee = value;
					this.SendPropertyChanged("openEmployee");
					this.OnopenEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="DateTime NOT NULL")]
		public System.DateTime payTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnpayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("payTime");
					this.OnpayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_promotionMemberId", DbType="NVarChar(MAX)")]
		public string promotionMemberId
		{
			get
			{
				return this._promotionMemberId;
			}
			set
			{
				if ((this._promotionMemberId != value))
				{
					this.OnpromotionMemberIdChanging(value);
					this.SendPropertyChanging();
					this._promotionMemberId = value;
					this.SendPropertyChanged("promotionMemberId");
					this.OnpromotionMemberIdChanged();
				}
			}
		}
		
		[Column(Storage="_promotionAmount", DbType="Float")]
		public System.Nullable<double> promotionAmount
		{
			get
			{
				return this._promotionAmount;
			}
			set
			{
				if ((this._promotionAmount != value))
				{
					this.OnpromotionAmountChanging(value);
					this.SendPropertyChanging();
					this._promotionAmount = value;
					this.SendPropertyChanged("promotionAmount");
					this.OnpromotionAmountChanged();
				}
			}
		}
		
		[Column(Storage="_memberId", DbType="NVarChar(MAX)")]
		public string memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[Column(Storage="_discountEmployee", DbType="NVarChar(MAX)")]
		public string discountEmployee
		{
			get
			{
				return this._discountEmployee;
			}
			set
			{
				if ((this._discountEmployee != value))
				{
					this.OndiscountEmployeeChanging(value);
					this.SendPropertyChanging();
					this._discountEmployee = value;
					this.SendPropertyChanged("discountEmployee");
					this.OndiscountEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_discount", DbType="Float")]
		public System.Nullable<double> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[Column(Storage="_serverEmployee", DbType="NVarChar(MAX)")]
		public string serverEmployee
		{
			get
			{
				return this._serverEmployee;
			}
			set
			{
				if ((this._serverEmployee != value))
				{
					this.OnserverEmployeeChanging(value);
					this.SendPropertyChanging();
					this._serverEmployee = value;
					this.SendPropertyChanged("serverEmployee");
					this.OnserverEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_cash", DbType="Float")]
		public System.Nullable<double> cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[Column(Storage="_bankUnion", DbType="Float")]
		public System.Nullable<double> bankUnion
		{
			get
			{
				return this._bankUnion;
			}
			set
			{
				if ((this._bankUnion != value))
				{
					this.OnbankUnionChanging(value);
					this.SendPropertyChanging();
					this._bankUnion = value;
					this.SendPropertyChanged("bankUnion");
					this.OnbankUnionChanged();
				}
			}
		}
		
		[Column(Storage="_creditCard", DbType="Float")]
		public System.Nullable<double> creditCard
		{
			get
			{
				return this._creditCard;
			}
			set
			{
				if ((this._creditCard != value))
				{
					this.OncreditCardChanging(value);
					this.SendPropertyChanging();
					this._creditCard = value;
					this.SendPropertyChanged("creditCard");
					this.OncreditCardChanged();
				}
			}
		}
		
		[Column(Storage="_coupon", DbType="Float")]
		public System.Nullable<double> coupon
		{
			get
			{
				return this._coupon;
			}
			set
			{
				if ((this._coupon != value))
				{
					this.OncouponChanging(value);
					this.SendPropertyChanging();
					this._coupon = value;
					this.SendPropertyChanged("coupon");
					this.OncouponChanged();
				}
			}
		}
		
		[Column(Storage="_groupBuy", DbType="Float")]
		public System.Nullable<double> groupBuy
		{
			get
			{
				return this._groupBuy;
			}
			set
			{
				if ((this._groupBuy != value))
				{
					this.OngroupBuyChanging(value);
					this.SendPropertyChanging();
					this._groupBuy = value;
					this.SendPropertyChanged("groupBuy");
					this.OngroupBuyChanged();
				}
			}
		}
		
		[Column(Storage="_zero", DbType="Float")]
		public System.Nullable<double> zero
		{
			get
			{
				return this._zero;
			}
			set
			{
				if ((this._zero != value))
				{
					this.OnzeroChanging(value);
					this.SendPropertyChanging();
					this._zero = value;
					this.SendPropertyChanged("zero");
					this.OnzeroChanged();
				}
			}
		}
		
		[Column(Storage="_server", DbType="Float")]
		public System.Nullable<double> server
		{
			get
			{
				return this._server;
			}
			set
			{
				if ((this._server != value))
				{
					this.OnserverChanging(value);
					this.SendPropertyChanging();
					this._server = value;
					this.SendPropertyChanged("server");
					this.OnserverChanged();
				}
			}
		}
		
		[Column(Storage="_deducted", DbType="Float")]
		public System.Nullable<double> deducted
		{
			get
			{
				return this._deducted;
			}
			set
			{
				if ((this._deducted != value))
				{
					this.OndeductedChanging(value);
					this.SendPropertyChanging();
					this._deducted = value;
					this.SendPropertyChanged("deducted");
					this.OndeductedChanged();
				}
			}
		}
		
		[Column(Storage="_changes", DbType="Float")]
		public System.Nullable<double> changes
		{
			get
			{
				return this._changes;
			}
			set
			{
				if ((this._changes != value))
				{
					this.OnchangesChanging(value);
					this.SendPropertyChanging();
					this._changes = value;
					this.SendPropertyChanged("changes");
					this.OnchangesChanged();
				}
			}
		}
		
		[Column(Storage="_wipeZero", DbType="Float")]
		public System.Nullable<double> wipeZero
		{
			get
			{
				return this._wipeZero;
			}
			set
			{
				if ((this._wipeZero != value))
				{
					this.OnwipeZeroChanging(value);
					this.SendPropertyChanging();
					this._wipeZero = value;
					this.SendPropertyChanged("wipeZero");
					this.OnwipeZeroChanged();
				}
			}
		}
		
		[Column(Storage="_macAddress", DbType="NVarChar(MAX)")]
		public string macAddress
		{
			get
			{
				return this._macAddress;
			}
			set
			{
				if ((this._macAddress != value))
				{
					this.OnmacAddressChanging(value);
					this.SendPropertyChanging();
					this._macAddress = value;
					this.SendPropertyChanged("macAddress");
					this.OnmacAddressChanged();
				}
			}
		}
		
		[Column(Storage="_abandon", DbType="NVarChar(MAX)")]
		public string abandon
		{
			get
			{
				return this._abandon;
			}
			set
			{
				if ((this._abandon != value))
				{
					this.OnabandonChanging(value);
					this.SendPropertyChanging();
					this._abandon = value;
					this.SendPropertyChanged("abandon");
					this.OnabandonChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="Int")]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OndepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("departmentId");
					this.OndepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_systemdId", DbType="NVarChar(MAX)")]
		public string systemdId
		{
			get
			{
				return this._systemdId;
			}
			set
			{
				if ((this._systemdId != value))
				{
					this.OnsystemdIdChanging(value);
					this.SendPropertyChanging();
					this._systemdId = value;
					this.SendPropertyChanged("systemdId");
					this.OnsystemdIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _menu;
		
		private string _text;
		
		private string _systemId;
		
		private double _number;
		
		private string _priceType;
		
		private double _money;
		
		private string _technician;
		
		private string _techType;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.DateTime _inputTime;
		
		private string _inputEmployee;
		
		private string _deleteEmployee;
		
		private string _donorEmployee;
		
		private System.Nullable<int> _comboId;
		
		private bool _paid;
		
		private System.Nullable<int> _accountId;
		
		private string _billId;
		
		private System.Nullable<bool> _stopTiming;
		
		private System.Nullable<int> _departmentId;
		
		private string _deleteExplain;
		
		private System.Nullable<System.DateTime> _deleteTime;
		
		private string _roomId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnnumberChanging(double value);
    partial void OnnumberChanged();
    partial void OnpriceTypeChanging(string value);
    partial void OnpriceTypeChanged();
    partial void OnmoneyChanging(double value);
    partial void OnmoneyChanged();
    partial void OntechnicianChanging(string value);
    partial void OntechnicianChanged();
    partial void OntechTypeChanging(string value);
    partial void OntechTypeChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OninputTimeChanging(System.DateTime value);
    partial void OninputTimeChanged();
    partial void OninputEmployeeChanging(string value);
    partial void OninputEmployeeChanged();
    partial void OndeleteEmployeeChanging(string value);
    partial void OndeleteEmployeeChanged();
    partial void OndonorEmployeeChanging(string value);
    partial void OndonorEmployeeChanged();
    partial void OncomboIdChanging(System.Nullable<int> value);
    partial void OncomboIdChanged();
    partial void OnpaidChanging(bool value);
    partial void OnpaidChanged();
    partial void OnaccountIdChanging(System.Nullable<int> value);
    partial void OnaccountIdChanged();
    partial void OnbillIdChanging(string value);
    partial void OnbillIdChanged();
    partial void OnstopTimingChanging(System.Nullable<bool> value);
    partial void OnstopTimingChanged();
    partial void OndepartmentIdChanging(System.Nullable<int> value);
    partial void OndepartmentIdChanged();
    partial void OndeleteExplainChanging(string value);
    partial void OndeleteExplainChanged();
    partial void OndeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndeleteTimeChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    #endregion
		
		public Orders()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_number", DbType="Float NOT NULL")]
		public double number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[Column(Storage="_priceType", DbType="NVarChar(MAX)")]
		public string priceType
		{
			get
			{
				return this._priceType;
			}
			set
			{
				if ((this._priceType != value))
				{
					this.OnpriceTypeChanging(value);
					this.SendPropertyChanging();
					this._priceType = value;
					this.SendPropertyChanged("priceType");
					this.OnpriceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float NOT NULL")]
		public double money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_technician", DbType="NVarChar(MAX)")]
		public string technician
		{
			get
			{
				return this._technician;
			}
			set
			{
				if ((this._technician != value))
				{
					this.OntechnicianChanging(value);
					this.SendPropertyChanging();
					this._technician = value;
					this.SendPropertyChanged("technician");
					this.OntechnicianChanged();
				}
			}
		}
		
		[Column(Storage="_techType", DbType="NVarChar(MAX)")]
		public string techType
		{
			get
			{
				return this._techType;
			}
			set
			{
				if ((this._techType != value))
				{
					this.OntechTypeChanging(value);
					this.SendPropertyChanging();
					this._techType = value;
					this.SendPropertyChanged("techType");
					this.OntechTypeChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_inputTime", DbType="DateTime NOT NULL")]
		public System.DateTime inputTime
		{
			get
			{
				return this._inputTime;
			}
			set
			{
				if ((this._inputTime != value))
				{
					this.OninputTimeChanging(value);
					this.SendPropertyChanging();
					this._inputTime = value;
					this.SendPropertyChanged("inputTime");
					this.OninputTimeChanged();
				}
			}
		}
		
		[Column(Storage="_inputEmployee", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string inputEmployee
		{
			get
			{
				return this._inputEmployee;
			}
			set
			{
				if ((this._inputEmployee != value))
				{
					this.OninputEmployeeChanging(value);
					this.SendPropertyChanging();
					this._inputEmployee = value;
					this.SendPropertyChanged("inputEmployee");
					this.OninputEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_deleteEmployee", DbType="NVarChar(MAX)")]
		public string deleteEmployee
		{
			get
			{
				return this._deleteEmployee;
			}
			set
			{
				if ((this._deleteEmployee != value))
				{
					this.OndeleteEmployeeChanging(value);
					this.SendPropertyChanging();
					this._deleteEmployee = value;
					this.SendPropertyChanged("deleteEmployee");
					this.OndeleteEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_donorEmployee", DbType="NVarChar(MAX)")]
		public string donorEmployee
		{
			get
			{
				return this._donorEmployee;
			}
			set
			{
				if ((this._donorEmployee != value))
				{
					this.OndonorEmployeeChanging(value);
					this.SendPropertyChanging();
					this._donorEmployee = value;
					this.SendPropertyChanged("donorEmployee");
					this.OndonorEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_comboId", DbType="Int")]
		public System.Nullable<int> comboId
		{
			get
			{
				return this._comboId;
			}
			set
			{
				if ((this._comboId != value))
				{
					this.OncomboIdChanging(value);
					this.SendPropertyChanging();
					this._comboId = value;
					this.SendPropertyChanged("comboId");
					this.OncomboIdChanged();
				}
			}
		}
		
		[Column(Storage="_paid", DbType="Bit NOT NULL")]
		public bool paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[Column(Storage="_accountId", DbType="Int")]
		public System.Nullable<int> accountId
		{
			get
			{
				return this._accountId;
			}
			set
			{
				if ((this._accountId != value))
				{
					this.OnaccountIdChanging(value);
					this.SendPropertyChanging();
					this._accountId = value;
					this.SendPropertyChanged("accountId");
					this.OnaccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_billId", DbType="NVarChar(MAX)")]
		public string billId
		{
			get
			{
				return this._billId;
			}
			set
			{
				if ((this._billId != value))
				{
					this.OnbillIdChanging(value);
					this.SendPropertyChanging();
					this._billId = value;
					this.SendPropertyChanged("billId");
					this.OnbillIdChanged();
				}
			}
		}
		
		[Column(Storage="_stopTiming", DbType="Bit")]
		public System.Nullable<bool> stopTiming
		{
			get
			{
				return this._stopTiming;
			}
			set
			{
				if ((this._stopTiming != value))
				{
					this.OnstopTimingChanging(value);
					this.SendPropertyChanging();
					this._stopTiming = value;
					this.SendPropertyChanged("stopTiming");
					this.OnstopTimingChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="Int")]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OndepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("departmentId");
					this.OndepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_deleteExplain", DbType="NVarChar(MAX)")]
		public string deleteExplain
		{
			get
			{
				return this._deleteExplain;
			}
			set
			{
				if ((this._deleteExplain != value))
				{
					this.OndeleteExplainChanging(value);
					this.SendPropertyChanging();
					this._deleteExplain = value;
					this.SendPropertyChanged("deleteExplain");
					this.OndeleteExplainChanged();
				}
			}
		}
		
		[Column(Storage="_deleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleteTime
		{
			get
			{
				return this._deleteTime;
			}
			set
			{
				if ((this._deleteTime != value))
				{
					this.OndeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._deleteTime = value;
					this.SendPropertyChanged("deleteTime");
					this.OndeleteTimeChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _catgoryId;
		
		private string _unit;
		
		private double _price;
		
		private bool _technician;
		
		private string _techRatioType;
		
		private System.Nullable<double> _onRatio;
		
		private System.Nullable<double> _orderRatio;
		
		private System.Nullable<int> _timeLimitHour;
		
		private System.Nullable<int> _timeLimitMiniute;
		
		private bool _addAutomatic;
		
		private string _addType;
		
		private System.Nullable<double> _addMoney;
		
		private string _note;
		
		private string _timeLimitType;
		
		private System.Nullable<bool> _waiter;
		
		private System.Nullable<double> _waiterRatio;
		
		private string _techRatioCat;
		
		private System.Nullable<int> _waiterRatioType;
		
		private string _ResourceExpense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncatgoryIdChanging(int value);
    partial void OncatgoryIdChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OntechnicianChanging(bool value);
    partial void OntechnicianChanged();
    partial void OntechRatioTypeChanging(string value);
    partial void OntechRatioTypeChanged();
    partial void OnonRatioChanging(System.Nullable<double> value);
    partial void OnonRatioChanged();
    partial void OnorderRatioChanging(System.Nullable<double> value);
    partial void OnorderRatioChanged();
    partial void OntimeLimitHourChanging(System.Nullable<int> value);
    partial void OntimeLimitHourChanged();
    partial void OntimeLimitMiniuteChanging(System.Nullable<int> value);
    partial void OntimeLimitMiniuteChanged();
    partial void OnaddAutomaticChanging(bool value);
    partial void OnaddAutomaticChanged();
    partial void OnaddTypeChanging(string value);
    partial void OnaddTypeChanged();
    partial void OnaddMoneyChanging(System.Nullable<double> value);
    partial void OnaddMoneyChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OntimeLimitTypeChanging(string value);
    partial void OntimeLimitTypeChanged();
    partial void OnwaiterChanging(System.Nullable<bool> value);
    partial void OnwaiterChanged();
    partial void OnwaiterRatioChanging(System.Nullable<double> value);
    partial void OnwaiterRatioChanged();
    partial void OntechRatioCatChanging(string value);
    partial void OntechRatioCatChanged();
    partial void OnwaiterRatioTypeChanging(System.Nullable<int> value);
    partial void OnwaiterRatioTypeChanged();
    partial void OnResourceExpenseChanging(string value);
    partial void OnResourceExpenseChanged();
    #endregion
		
		public Menu()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_catgoryId", DbType="Int NOT NULL")]
		public int catgoryId
		{
			get
			{
				return this._catgoryId;
			}
			set
			{
				if ((this._catgoryId != value))
				{
					this.OncatgoryIdChanging(value);
					this.SendPropertyChanging();
					this._catgoryId = value;
					this.SendPropertyChanged("catgoryId");
					this.OncatgoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_unit", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_technician", DbType="Bit NOT NULL")]
		public bool technician
		{
			get
			{
				return this._technician;
			}
			set
			{
				if ((this._technician != value))
				{
					this.OntechnicianChanging(value);
					this.SendPropertyChanging();
					this._technician = value;
					this.SendPropertyChanged("technician");
					this.OntechnicianChanged();
				}
			}
		}
		
		[Column(Storage="_techRatioType", DbType="NVarChar(MAX)")]
		public string techRatioType
		{
			get
			{
				return this._techRatioType;
			}
			set
			{
				if ((this._techRatioType != value))
				{
					this.OntechRatioTypeChanging(value);
					this.SendPropertyChanging();
					this._techRatioType = value;
					this.SendPropertyChanged("techRatioType");
					this.OntechRatioTypeChanged();
				}
			}
		}
		
		[Column(Storage="_onRatio", DbType="Float")]
		public System.Nullable<double> onRatio
		{
			get
			{
				return this._onRatio;
			}
			set
			{
				if ((this._onRatio != value))
				{
					this.OnonRatioChanging(value);
					this.SendPropertyChanging();
					this._onRatio = value;
					this.SendPropertyChanged("onRatio");
					this.OnonRatioChanged();
				}
			}
		}
		
		[Column(Storage="_orderRatio", DbType="Float")]
		public System.Nullable<double> orderRatio
		{
			get
			{
				return this._orderRatio;
			}
			set
			{
				if ((this._orderRatio != value))
				{
					this.OnorderRatioChanging(value);
					this.SendPropertyChanging();
					this._orderRatio = value;
					this.SendPropertyChanged("orderRatio");
					this.OnorderRatioChanged();
				}
			}
		}
		
		[Column(Storage="_timeLimitHour", DbType="Int")]
		public System.Nullable<int> timeLimitHour
		{
			get
			{
				return this._timeLimitHour;
			}
			set
			{
				if ((this._timeLimitHour != value))
				{
					this.OntimeLimitHourChanging(value);
					this.SendPropertyChanging();
					this._timeLimitHour = value;
					this.SendPropertyChanged("timeLimitHour");
					this.OntimeLimitHourChanged();
				}
			}
		}
		
		[Column(Storage="_timeLimitMiniute", DbType="Int")]
		public System.Nullable<int> timeLimitMiniute
		{
			get
			{
				return this._timeLimitMiniute;
			}
			set
			{
				if ((this._timeLimitMiniute != value))
				{
					this.OntimeLimitMiniuteChanging(value);
					this.SendPropertyChanging();
					this._timeLimitMiniute = value;
					this.SendPropertyChanged("timeLimitMiniute");
					this.OntimeLimitMiniuteChanged();
				}
			}
		}
		
		[Column(Storage="_addAutomatic", DbType="Bit NOT NULL")]
		public bool addAutomatic
		{
			get
			{
				return this._addAutomatic;
			}
			set
			{
				if ((this._addAutomatic != value))
				{
					this.OnaddAutomaticChanging(value);
					this.SendPropertyChanging();
					this._addAutomatic = value;
					this.SendPropertyChanged("addAutomatic");
					this.OnaddAutomaticChanged();
				}
			}
		}
		
		[Column(Storage="_addType", DbType="NVarChar(MAX)")]
		public string addType
		{
			get
			{
				return this._addType;
			}
			set
			{
				if ((this._addType != value))
				{
					this.OnaddTypeChanging(value);
					this.SendPropertyChanging();
					this._addType = value;
					this.SendPropertyChanged("addType");
					this.OnaddTypeChanged();
				}
			}
		}
		
		[Column(Storage="_addMoney", DbType="Float")]
		public System.Nullable<double> addMoney
		{
			get
			{
				return this._addMoney;
			}
			set
			{
				if ((this._addMoney != value))
				{
					this.OnaddMoneyChanging(value);
					this.SendPropertyChanging();
					this._addMoney = value;
					this.SendPropertyChanged("addMoney");
					this.OnaddMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_timeLimitType", DbType="NVarChar(MAX)")]
		public string timeLimitType
		{
			get
			{
				return this._timeLimitType;
			}
			set
			{
				if ((this._timeLimitType != value))
				{
					this.OntimeLimitTypeChanging(value);
					this.SendPropertyChanging();
					this._timeLimitType = value;
					this.SendPropertyChanged("timeLimitType");
					this.OntimeLimitTypeChanged();
				}
			}
		}
		
		[Column(Storage="_waiter", DbType="Bit")]
		public System.Nullable<bool> waiter
		{
			get
			{
				return this._waiter;
			}
			set
			{
				if ((this._waiter != value))
				{
					this.OnwaiterChanging(value);
					this.SendPropertyChanging();
					this._waiter = value;
					this.SendPropertyChanged("waiter");
					this.OnwaiterChanged();
				}
			}
		}
		
		[Column(Storage="_waiterRatio", DbType="Float")]
		public System.Nullable<double> waiterRatio
		{
			get
			{
				return this._waiterRatio;
			}
			set
			{
				if ((this._waiterRatio != value))
				{
					this.OnwaiterRatioChanging(value);
					this.SendPropertyChanging();
					this._waiterRatio = value;
					this.SendPropertyChanged("waiterRatio");
					this.OnwaiterRatioChanged();
				}
			}
		}
		
		[Column(Storage="_techRatioCat", DbType="NVarChar(MAX)")]
		public string techRatioCat
		{
			get
			{
				return this._techRatioCat;
			}
			set
			{
				if ((this._techRatioCat != value))
				{
					this.OntechRatioCatChanging(value);
					this.SendPropertyChanging();
					this._techRatioCat = value;
					this.SendPropertyChanged("techRatioCat");
					this.OntechRatioCatChanged();
				}
			}
		}
		
		[Column(Storage="_waiterRatioType", DbType="Int")]
		public System.Nullable<int> waiterRatioType
		{
			get
			{
				return this._waiterRatioType;
			}
			set
			{
				if ((this._waiterRatioType != value))
				{
					this.OnwaiterRatioTypeChanging(value);
					this.SendPropertyChanging();
					this._waiterRatioType = value;
					this.SendPropertyChanged("waiterRatioType");
					this.OnwaiterRatioTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ResourceExpense", DbType="NVarChar(MAX)")]
		public string ResourceExpense
		{
			get
			{
				return this._ResourceExpense;
			}
			set
			{
				if ((this._ResourceExpense != value))
				{
					this.OnResourceExpenseChanging(value);
					this.SendPropertyChanging();
					this._ResourceExpense = value;
					this.SendPropertyChanged("ResourceExpense");
					this.OnResourceExpenseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Seat")]
	public partial class Seat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _oId;
		
		private string _text;
		
		private int _typeId;
		
		private string _systemId;
		
		private string _name;
		
		private System.Nullable<int> _population;
		
		private System.Nullable<System.DateTime> _openTime;
		
		private string _openEmployee;
		
		private System.Nullable<System.DateTime> _payTime;
		
		private string _payEmployee;
		
		private string _phone;
		
		private string _discountEmployee;
		
		private System.Nullable<double> _discount;
		
		private System.Nullable<bool> _memberDiscount;
		
		private string _memberPromotionId;
		
		private string _freeEmployee;
		
		private string _chainId;
		
		private int _status;
		
		private System.Nullable<bool> _ordering;
		
		private System.Nullable<bool> _paying;
		
		private string _note;
		
		private string _unwarn;
		
		private string _roomStatus;
		
		private System.Nullable<int> _deposit;
		
		private System.Nullable<System.DateTime> _dueTime;
		
		private System.Nullable<int> _depositBank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoIdChanging(string value);
    partial void OnoIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OntypeIdChanging(int value);
    partial void OntypeIdChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpopulationChanging(System.Nullable<int> value);
    partial void OnpopulationChanged();
    partial void OnopenTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnopenTimeChanged();
    partial void OnopenEmployeeChanging(string value);
    partial void OnopenEmployeeChanged();
    partial void OnpayTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnpayTimeChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndiscountEmployeeChanging(string value);
    partial void OndiscountEmployeeChanged();
    partial void OndiscountChanging(System.Nullable<double> value);
    partial void OndiscountChanged();
    partial void OnmemberDiscountChanging(System.Nullable<bool> value);
    partial void OnmemberDiscountChanged();
    partial void OnmemberPromotionIdChanging(string value);
    partial void OnmemberPromotionIdChanged();
    partial void OnfreeEmployeeChanging(string value);
    partial void OnfreeEmployeeChanged();
    partial void OnchainIdChanging(string value);
    partial void OnchainIdChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnorderingChanging(System.Nullable<bool> value);
    partial void OnorderingChanged();
    partial void OnpayingChanging(System.Nullable<bool> value);
    partial void OnpayingChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnunwarnChanging(string value);
    partial void OnunwarnChanged();
    partial void OnroomStatusChanging(string value);
    partial void OnroomStatusChanged();
    partial void OndepositChanging(System.Nullable<int> value);
    partial void OndepositChanged();
    partial void OndueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndueTimeChanged();
    partial void OndepositBankChanging(System.Nullable<int> value);
    partial void OndepositBankChanged();
    #endregion
		
		public Seat()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_oId", DbType="NVarChar(MAX)")]
		public string oId
		{
			get
			{
				return this._oId;
			}
			set
			{
				if ((this._oId != value))
				{
					this.OnoIdChanging(value);
					this.SendPropertyChanging();
					this._oId = value;
					this.SendPropertyChanged("oId");
					this.OnoIdChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_typeId", DbType="Int NOT NULL")]
		public int typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)")]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_population", DbType="Int")]
		public System.Nullable<int> population
		{
			get
			{
				return this._population;
			}
			set
			{
				if ((this._population != value))
				{
					this.OnpopulationChanging(value);
					this.SendPropertyChanging();
					this._population = value;
					this.SendPropertyChanged("population");
					this.OnpopulationChanged();
				}
			}
		}
		
		[Column(Storage="_openTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> openTime
		{
			get
			{
				return this._openTime;
			}
			set
			{
				if ((this._openTime != value))
				{
					this.OnopenTimeChanging(value);
					this.SendPropertyChanging();
					this._openTime = value;
					this.SendPropertyChanged("openTime");
					this.OnopenTimeChanged();
				}
			}
		}
		
		[Column(Storage="_openEmployee", DbType="NVarChar(MAX)")]
		public string openEmployee
		{
			get
			{
				return this._openEmployee;
			}
			set
			{
				if ((this._openEmployee != value))
				{
					this.OnopenEmployeeChanging(value);
					this.SendPropertyChanging();
					this._openEmployee = value;
					this.SendPropertyChanged("openEmployee");
					this.OnopenEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> payTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnpayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("payTime");
					this.OnpayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX)")]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="NVarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[Column(Storage="_discountEmployee", DbType="NVarChar(MAX)")]
		public string discountEmployee
		{
			get
			{
				return this._discountEmployee;
			}
			set
			{
				if ((this._discountEmployee != value))
				{
					this.OndiscountEmployeeChanging(value);
					this.SendPropertyChanging();
					this._discountEmployee = value;
					this.SendPropertyChanged("discountEmployee");
					this.OndiscountEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_discount", DbType="Float")]
		public System.Nullable<double> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[Column(Storage="_memberDiscount", DbType="Bit")]
		public System.Nullable<bool> memberDiscount
		{
			get
			{
				return this._memberDiscount;
			}
			set
			{
				if ((this._memberDiscount != value))
				{
					this.OnmemberDiscountChanging(value);
					this.SendPropertyChanging();
					this._memberDiscount = value;
					this.SendPropertyChanged("memberDiscount");
					this.OnmemberDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_memberPromotionId", DbType="NVarChar(MAX)")]
		public string memberPromotionId
		{
			get
			{
				return this._memberPromotionId;
			}
			set
			{
				if ((this._memberPromotionId != value))
				{
					this.OnmemberPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._memberPromotionId = value;
					this.SendPropertyChanged("memberPromotionId");
					this.OnmemberPromotionIdChanged();
				}
			}
		}
		
		[Column(Storage="_freeEmployee", DbType="NVarChar(MAX)")]
		public string freeEmployee
		{
			get
			{
				return this._freeEmployee;
			}
			set
			{
				if ((this._freeEmployee != value))
				{
					this.OnfreeEmployeeChanging(value);
					this.SendPropertyChanging();
					this._freeEmployee = value;
					this.SendPropertyChanged("freeEmployee");
					this.OnfreeEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_chainId", DbType="NVarChar(MAX)")]
		public string chainId
		{
			get
			{
				return this._chainId;
			}
			set
			{
				if ((this._chainId != value))
				{
					this.OnchainIdChanging(value);
					this.SendPropertyChanging();
					this._chainId = value;
					this.SendPropertyChanged("chainId");
					this.OnchainIdChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_ordering", DbType="Bit")]
		public System.Nullable<bool> ordering
		{
			get
			{
				return this._ordering;
			}
			set
			{
				if ((this._ordering != value))
				{
					this.OnorderingChanging(value);
					this.SendPropertyChanging();
					this._ordering = value;
					this.SendPropertyChanged("ordering");
					this.OnorderingChanged();
				}
			}
		}
		
		[Column(Storage="_paying", DbType="Bit")]
		public System.Nullable<bool> paying
		{
			get
			{
				return this._paying;
			}
			set
			{
				if ((this._paying != value))
				{
					this.OnpayingChanging(value);
					this.SendPropertyChanging();
					this._paying = value;
					this.SendPropertyChanged("paying");
					this.OnpayingChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_unwarn", DbType="NVarChar(MAX)")]
		public string unwarn
		{
			get
			{
				return this._unwarn;
			}
			set
			{
				if ((this._unwarn != value))
				{
					this.OnunwarnChanging(value);
					this.SendPropertyChanging();
					this._unwarn = value;
					this.SendPropertyChanged("unwarn");
					this.OnunwarnChanged();
				}
			}
		}
		
		[Column(Storage="_roomStatus", DbType="NVarChar(MAX)")]
		public string roomStatus
		{
			get
			{
				return this._roomStatus;
			}
			set
			{
				if ((this._roomStatus != value))
				{
					this.OnroomStatusChanging(value);
					this.SendPropertyChanging();
					this._roomStatus = value;
					this.SendPropertyChanged("roomStatus");
					this.OnroomStatusChanged();
				}
			}
		}
		
		[Column(Storage="_deposit", DbType="Int")]
		public System.Nullable<int> deposit
		{
			get
			{
				return this._deposit;
			}
			set
			{
				if ((this._deposit != value))
				{
					this.OndepositChanging(value);
					this.SendPropertyChanging();
					this._deposit = value;
					this.SendPropertyChanged("deposit");
					this.OndepositChanged();
				}
			}
		}
		
		[Column(Storage="_dueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> dueTime
		{
			get
			{
				return this._dueTime;
			}
			set
			{
				if ((this._dueTime != value))
				{
					this.OndueTimeChanging(value);
					this.SendPropertyChanging();
					this._dueTime = value;
					this.SendPropertyChanged("dueTime");
					this.OndueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_depositBank", DbType="Int")]
		public System.Nullable<int> depositBank
		{
			get
			{
				return this._depositBank;
			}
			set
			{
				if ((this._depositBank != value))
				{
					this.OndepositBankChanging(value);
					this.SendPropertyChanging();
					this._depositBank = value;
					this.SendPropertyChanged("depositBank");
					this.OndepositBankChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Combo")]
	public partial class Combo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private double _originPrice;
		
		private string _priceType;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<double> _freePrice;
		
		private System.Nullable<double> _expenseUpTo;
		
		private string _menuIds;
		
		private string _freeMenuIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoriginPriceChanging(double value);
    partial void OnoriginPriceChanged();
    partial void OnpriceTypeChanging(string value);
    partial void OnpriceTypeChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnfreePriceChanging(System.Nullable<double> value);
    partial void OnfreePriceChanged();
    partial void OnexpenseUpToChanging(System.Nullable<double> value);
    partial void OnexpenseUpToChanged();
    partial void OnmenuIdsChanging(string value);
    partial void OnmenuIdsChanged();
    partial void OnfreeMenuIdsChanging(string value);
    partial void OnfreeMenuIdsChanged();
    #endregion
		
		public Combo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_originPrice", DbType="Float NOT NULL")]
		public double originPrice
		{
			get
			{
				return this._originPrice;
			}
			set
			{
				if ((this._originPrice != value))
				{
					this.OnoriginPriceChanging(value);
					this.SendPropertyChanging();
					this._originPrice = value;
					this.SendPropertyChanged("originPrice");
					this.OnoriginPriceChanged();
				}
			}
		}
		
		[Column(Storage="_priceType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string priceType
		{
			get
			{
				return this._priceType;
			}
			set
			{
				if ((this._priceType != value))
				{
					this.OnpriceTypeChanging(value);
					this.SendPropertyChanging();
					this._priceType = value;
					this.SendPropertyChanged("priceType");
					this.OnpriceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_freePrice", DbType="Float")]
		public System.Nullable<double> freePrice
		{
			get
			{
				return this._freePrice;
			}
			set
			{
				if ((this._freePrice != value))
				{
					this.OnfreePriceChanging(value);
					this.SendPropertyChanging();
					this._freePrice = value;
					this.SendPropertyChanged("freePrice");
					this.OnfreePriceChanged();
				}
			}
		}
		
		[Column(Storage="_expenseUpTo", DbType="Float")]
		public System.Nullable<double> expenseUpTo
		{
			get
			{
				return this._expenseUpTo;
			}
			set
			{
				if ((this._expenseUpTo != value))
				{
					this.OnexpenseUpToChanging(value);
					this.SendPropertyChanging();
					this._expenseUpTo = value;
					this.SendPropertyChanged("expenseUpTo");
					this.OnexpenseUpToChanged();
				}
			}
		}
		
		[Column(Storage="_menuIds", DbType="NVarChar(MAX)")]
		public string menuIds
		{
			get
			{
				return this._menuIds;
			}
			set
			{
				if ((this._menuIds != value))
				{
					this.OnmenuIdsChanging(value);
					this.SendPropertyChanging();
					this._menuIds = value;
					this.SendPropertyChanged("menuIds");
					this.OnmenuIdsChanged();
				}
			}
		}
		
		[Column(Storage="_freeMenuIds", DbType="NVarChar(MAX)")]
		public string freeMenuIds
		{
			get
			{
				return this._freeMenuIds;
			}
			set
			{
				if ((this._freeMenuIds != value))
				{
					this.OnfreeMenuIdsChanging(value);
					this.SendPropertyChanging();
					this._freeMenuIds = value;
					this.SendPropertyChanged("freeMenuIds");
					this.OnfreeMenuIdsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DepartmentLog")]
	public partial class DepartmentLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _departId;
		
		private string _sender;
		
		private string _msg;
		
		private System.Data.Linq.Binary _img;
		
		private string _imgUrl;
		
		private System.Data.Linq.Binary _img2;
		
		private string _img2Url;
		
		private System.Data.Linq.Binary _img3;
		
		private string _img3Url;
		
		private System.Nullable<bool> _urgent;
		
		private System.Nullable<bool> _done;
		
		private System.Nullable<System.DateTime> _dueTime;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _urgentDate;
		
		private System.Nullable<System.DateTime> _doneDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndepartIdChanging(System.Nullable<int> value);
    partial void OndepartIdChanged();
    partial void OnsenderChanging(string value);
    partial void OnsenderChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnimgChanging(System.Data.Linq.Binary value);
    partial void OnimgChanged();
    partial void OnimgUrlChanging(string value);
    partial void OnimgUrlChanged();
    partial void Onimg2Changing(System.Data.Linq.Binary value);
    partial void Onimg2Changed();
    partial void Onimg2UrlChanging(string value);
    partial void Onimg2UrlChanged();
    partial void Onimg3Changing(System.Data.Linq.Binary value);
    partial void Onimg3Changed();
    partial void Onimg3UrlChanging(string value);
    partial void Onimg3UrlChanged();
    partial void OnurgentChanging(System.Nullable<bool> value);
    partial void OnurgentChanged();
    partial void OndoneChanging(System.Nullable<bool> value);
    partial void OndoneChanged();
    partial void OndueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndueTimeChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnurgentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnurgentDateChanged();
    partial void OndoneDateChanging(System.Nullable<System.DateTime> value);
    partial void OndoneDateChanged();
    #endregion
		
		public DepartmentLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_departId", DbType="Int")]
		public System.Nullable<int> departId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this.OndepartIdChanging(value);
					this.SendPropertyChanging();
					this._departId = value;
					this.SendPropertyChanged("departId");
					this.OndepartIdChanged();
				}
			}
		}
		
		[Column(Storage="_sender", DbType="NVarChar(MAX)")]
		public string sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Storage="_img", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[Column(Storage="_imgUrl", DbType="NVarChar(MAX)")]
		public string imgUrl
		{
			get
			{
				return this._imgUrl;
			}
			set
			{
				if ((this._imgUrl != value))
				{
					this.OnimgUrlChanging(value);
					this.SendPropertyChanging();
					this._imgUrl = value;
					this.SendPropertyChanged("imgUrl");
					this.OnimgUrlChanged();
				}
			}
		}
		
		[Column(Storage="_img2", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img2
		{
			get
			{
				return this._img2;
			}
			set
			{
				if ((this._img2 != value))
				{
					this.Onimg2Changing(value);
					this.SendPropertyChanging();
					this._img2 = value;
					this.SendPropertyChanged("img2");
					this.Onimg2Changed();
				}
			}
		}
		
		[Column(Storage="_img2Url", DbType="NVarChar(MAX)")]
		public string img2Url
		{
			get
			{
				return this._img2Url;
			}
			set
			{
				if ((this._img2Url != value))
				{
					this.Onimg2UrlChanging(value);
					this.SendPropertyChanging();
					this._img2Url = value;
					this.SendPropertyChanged("img2Url");
					this.Onimg2UrlChanged();
				}
			}
		}
		
		[Column(Storage="_img3", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img3
		{
			get
			{
				return this._img3;
			}
			set
			{
				if ((this._img3 != value))
				{
					this.Onimg3Changing(value);
					this.SendPropertyChanging();
					this._img3 = value;
					this.SendPropertyChanged("img3");
					this.Onimg3Changed();
				}
			}
		}
		
		[Column(Storage="_img3Url", DbType="NVarChar(MAX)")]
		public string img3Url
		{
			get
			{
				return this._img3Url;
			}
			set
			{
				if ((this._img3Url != value))
				{
					this.Onimg3UrlChanging(value);
					this.SendPropertyChanging();
					this._img3Url = value;
					this.SendPropertyChanged("img3Url");
					this.Onimg3UrlChanged();
				}
			}
		}
		
		[Column(Storage="_urgent", DbType="Bit")]
		public System.Nullable<bool> urgent
		{
			get
			{
				return this._urgent;
			}
			set
			{
				if ((this._urgent != value))
				{
					this.OnurgentChanging(value);
					this.SendPropertyChanging();
					this._urgent = value;
					this.SendPropertyChanged("urgent");
					this.OnurgentChanged();
				}
			}
		}
		
		[Column(Storage="_done", DbType="Bit")]
		public System.Nullable<bool> done
		{
			get
			{
				return this._done;
			}
			set
			{
				if ((this._done != value))
				{
					this.OndoneChanging(value);
					this.SendPropertyChanging();
					this._done = value;
					this.SendPropertyChanged("done");
					this.OndoneChanged();
				}
			}
		}
		
		[Column(Storage="_dueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> dueTime
		{
			get
			{
				return this._dueTime;
			}
			set
			{
				if ((this._dueTime != value))
				{
					this.OndueTimeChanging(value);
					this.SendPropertyChanging();
					this._dueTime = value;
					this.SendPropertyChanged("dueTime");
					this.OndueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_urgentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> urgentDate
		{
			get
			{
				return this._urgentDate;
			}
			set
			{
				if ((this._urgentDate != value))
				{
					this.OnurgentDateChanging(value);
					this.SendPropertyChanging();
					this._urgentDate = value;
					this.SendPropertyChanged("urgentDate");
					this.OnurgentDateChanged();
				}
			}
		}
		
		[Column(Storage="_doneDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> doneDate
		{
			get
			{
				return this._doneDate;
			}
			set
			{
				if ((this._doneDate != value))
				{
					this.OndoneDateChanging(value);
					this.SendPropertyChanging();
					this._doneDate = value;
					this.SendPropertyChanged("doneDate");
					this.OndoneDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public Department()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _cardId;
		
		private string _gender;
		
		private System.DateTime _birthday;
		
		private int _jobId;
		
		private bool _onDuty;
		
		private string _salary;
		
		private string _password;
		
		private string _phone;
		
		private string _address;
		
		private string _email;
		
		private System.DateTime _entryDate;
		
		private string _idCard;
		
		private string _note;
		
		private string _status;
		
		private System.Nullable<bool> _OrderClock;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<int> _serverTime;
		
		private string _techStatus;
		
		private string _room;
		
		private string _seat;
		
		private string _techMenu;
		
		private System.Nullable<int> _msgId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncardIdChanging(string value);
    partial void OncardIdChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    partial void OnjobIdChanging(int value);
    partial void OnjobIdChanged();
    partial void OnonDutyChanging(bool value);
    partial void OnonDutyChanged();
    partial void OnsalaryChanging(string value);
    partial void OnsalaryChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnentryDateChanging(System.DateTime value);
    partial void OnentryDateChanged();
    partial void OnidCardChanging(string value);
    partial void OnidCardChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnOrderClockChanging(System.Nullable<bool> value);
    partial void OnOrderClockChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OnserverTimeChanging(System.Nullable<int> value);
    partial void OnserverTimeChanged();
    partial void OntechStatusChanging(string value);
    partial void OntechStatusChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OntechMenuChanging(string value);
    partial void OntechMenuChanged();
    partial void OnmsgIdChanging(System.Nullable<int> value);
    partial void OnmsgIdChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_cardId", DbType="NVarChar(MAX)")]
		public string cardId
		{
			get
			{
				return this._cardId;
			}
			set
			{
				if ((this._cardId != value))
				{
					this.OncardIdChanging(value);
					this.SendPropertyChanging();
					this._cardId = value;
					this.SendPropertyChanged("cardId");
					this.OncardIdChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[Column(Storage="_birthday", DbType="DateTime NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_jobId", DbType="Int NOT NULL")]
		public int jobId
		{
			get
			{
				return this._jobId;
			}
			set
			{
				if ((this._jobId != value))
				{
					this.OnjobIdChanging(value);
					this.SendPropertyChanging();
					this._jobId = value;
					this.SendPropertyChanged("jobId");
					this.OnjobIdChanged();
				}
			}
		}
		
		[Column(Storage="_onDuty", DbType="Bit NOT NULL")]
		public bool onDuty
		{
			get
			{
				return this._onDuty;
			}
			set
			{
				if ((this._onDuty != value))
				{
					this.OnonDutyChanging(value);
					this.SendPropertyChanging();
					this._onDuty = value;
					this.SendPropertyChanged("onDuty");
					this.OnonDutyChanged();
				}
			}
		}
		
		[Column(Storage="_salary", DbType="NVarChar(MAX)")]
		public string salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[Column(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="NVarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_entryDate", DbType="DateTime NOT NULL")]
		public System.DateTime entryDate
		{
			get
			{
				return this._entryDate;
			}
			set
			{
				if ((this._entryDate != value))
				{
					this.OnentryDateChanging(value);
					this.SendPropertyChanging();
					this._entryDate = value;
					this.SendPropertyChanged("entryDate");
					this.OnentryDateChanged();
				}
			}
		}
		
		[Column(Storage="_idCard", DbType="NVarChar(MAX)")]
		public string idCard
		{
			get
			{
				return this._idCard;
			}
			set
			{
				if ((this._idCard != value))
				{
					this.OnidCardChanging(value);
					this.SendPropertyChanging();
					this._idCard = value;
					this.SendPropertyChanged("idCard");
					this.OnidCardChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="NVarChar(MAX)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_OrderClock", DbType="Bit")]
		public System.Nullable<bool> OrderClock
		{
			get
			{
				return this._OrderClock;
			}
			set
			{
				if ((this._OrderClock != value))
				{
					this.OnOrderClockChanging(value);
					this.SendPropertyChanging();
					this._OrderClock = value;
					this.SendPropertyChanged("OrderClock");
					this.OnOrderClockChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_serverTime", DbType="Int")]
		public System.Nullable<int> serverTime
		{
			get
			{
				return this._serverTime;
			}
			set
			{
				if ((this._serverTime != value))
				{
					this.OnserverTimeChanging(value);
					this.SendPropertyChanging();
					this._serverTime = value;
					this.SendPropertyChanged("serverTime");
					this.OnserverTimeChanged();
				}
			}
		}
		
		[Column(Storage="_techStatus", DbType="NVarChar(MAX)")]
		public string techStatus
		{
			get
			{
				return this._techStatus;
			}
			set
			{
				if ((this._techStatus != value))
				{
					this.OntechStatusChanging(value);
					this.SendPropertyChanging();
					this._techStatus = value;
					this.SendPropertyChanged("techStatus");
					this.OntechStatusChanged();
				}
			}
		}
		
		[Column(Storage="_room", DbType="NVarChar(MAX)")]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_techMenu", DbType="NVarChar(MAX)")]
		public string techMenu
		{
			get
			{
				return this._techMenu;
			}
			set
			{
				if ((this._techMenu != value))
				{
					this.OntechMenuChanging(value);
					this.SendPropertyChanging();
					this._techMenu = value;
					this.SendPropertyChanged("techMenu");
					this.OntechMenuChanged();
				}
			}
		}
		
		[Column(Storage="_msgId", DbType="Int")]
		public System.Nullable<int> msgId
		{
			get
			{
				return this._msgId;
			}
			set
			{
				if ((this._msgId != value))
				{
					this.OnmsgIdChanging(value);
					this.SendPropertyChanging();
					this._msgId = value;
					this.SendPropertyChanged("msgId");
					this.OnmsgIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _population;
		
		private string _openTime;
		
		private string _seat;
		
		private string _systemId;
		
		private string _orderTime;
		
		private string _menu;
		
		private string _orderTechId;
		
		private string _techId;
		
		private string _startTime;
		
		private string _serverTime;
		
		private string _status;
		
		private string _note;
		
		private string _hintPlayed;
		
		private string _reserveId;
		
		private string _reserveTime;
		
		private string _selectId;
		
		private string _seatIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpopulationChanging(int value);
    partial void OnpopulationChanged();
    partial void OnopenTimeChanging(string value);
    partial void OnopenTimeChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnorderTimeChanging(string value);
    partial void OnorderTimeChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OnorderTechIdChanging(string value);
    partial void OnorderTechIdChanged();
    partial void OntechIdChanging(string value);
    partial void OntechIdChanged();
    partial void OnstartTimeChanging(string value);
    partial void OnstartTimeChanged();
    partial void OnserverTimeChanging(string value);
    partial void OnserverTimeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnhintPlayedChanging(string value);
    partial void OnhintPlayedChanged();
    partial void OnreserveIdChanging(string value);
    partial void OnreserveIdChanged();
    partial void OnreserveTimeChanging(string value);
    partial void OnreserveTimeChanged();
    partial void OnselectIdChanging(string value);
    partial void OnselectIdChanged();
    partial void OnseatIdsChanging(string value);
    partial void OnseatIdsChanged();
    #endregion
		
		public Room()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_population", DbType="Int NOT NULL")]
		public int population
		{
			get
			{
				return this._population;
			}
			set
			{
				if ((this._population != value))
				{
					this.OnpopulationChanging(value);
					this.SendPropertyChanging();
					this._population = value;
					this.SendPropertyChanged("population");
					this.OnpopulationChanged();
				}
			}
		}
		
		[Column(Storage="_openTime", DbType="NVarChar(MAX)")]
		public string openTime
		{
			get
			{
				return this._openTime;
			}
			set
			{
				if ((this._openTime != value))
				{
					this.OnopenTimeChanging(value);
					this.SendPropertyChanging();
					this._openTime = value;
					this.SendPropertyChanged("openTime");
					this.OnopenTimeChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)")]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_orderTime", DbType="NVarChar(MAX)")]
		public string orderTime
		{
			get
			{
				return this._orderTime;
			}
			set
			{
				if ((this._orderTime != value))
				{
					this.OnorderTimeChanging(value);
					this.SendPropertyChanging();
					this._orderTime = value;
					this.SendPropertyChanged("orderTime");
					this.OnorderTimeChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_orderTechId", DbType="NVarChar(MAX)")]
		public string orderTechId
		{
			get
			{
				return this._orderTechId;
			}
			set
			{
				if ((this._orderTechId != value))
				{
					this.OnorderTechIdChanging(value);
					this.SendPropertyChanging();
					this._orderTechId = value;
					this.SendPropertyChanged("orderTechId");
					this.OnorderTechIdChanged();
				}
			}
		}
		
		[Column(Storage="_techId", DbType="NVarChar(MAX)")]
		public string techId
		{
			get
			{
				return this._techId;
			}
			set
			{
				if ((this._techId != value))
				{
					this.OntechIdChanging(value);
					this.SendPropertyChanging();
					this._techId = value;
					this.SendPropertyChanged("techId");
					this.OntechIdChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="NVarChar(MAX)")]
		public string startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_serverTime", DbType="NVarChar(MAX)")]
		public string serverTime
		{
			get
			{
				return this._serverTime;
			}
			set
			{
				if ((this._serverTime != value))
				{
					this.OnserverTimeChanging(value);
					this.SendPropertyChanging();
					this._serverTime = value;
					this.SendPropertyChanged("serverTime");
					this.OnserverTimeChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_hintPlayed", DbType="NVarChar(MAX)")]
		public string hintPlayed
		{
			get
			{
				return this._hintPlayed;
			}
			set
			{
				if ((this._hintPlayed != value))
				{
					this.OnhintPlayedChanging(value);
					this.SendPropertyChanging();
					this._hintPlayed = value;
					this.SendPropertyChanged("hintPlayed");
					this.OnhintPlayedChanged();
				}
			}
		}
		
		[Column(Storage="_reserveId", DbType="NVarChar(MAX)")]
		public string reserveId
		{
			get
			{
				return this._reserveId;
			}
			set
			{
				if ((this._reserveId != value))
				{
					this.OnreserveIdChanging(value);
					this.SendPropertyChanging();
					this._reserveId = value;
					this.SendPropertyChanged("reserveId");
					this.OnreserveIdChanged();
				}
			}
		}
		
		[Column(Storage="_reserveTime", DbType="NVarChar(MAX)")]
		public string reserveTime
		{
			get
			{
				return this._reserveTime;
			}
			set
			{
				if ((this._reserveTime != value))
				{
					this.OnreserveTimeChanging(value);
					this.SendPropertyChanging();
					this._reserveTime = value;
					this.SendPropertyChanged("reserveTime");
					this.OnreserveTimeChanged();
				}
			}
		}
		
		[Column(Storage="_selectId", DbType="NVarChar(MAX)")]
		public string selectId
		{
			get
			{
				return this._selectId;
			}
			set
			{
				if ((this._selectId != value))
				{
					this.OnselectIdChanging(value);
					this.SendPropertyChanging();
					this._selectId = value;
					this.SendPropertyChanged("selectId");
					this.OnselectIdChanged();
				}
			}
		}
		
		[Column(Storage="_seatIds", DbType="NVarChar(MAX)")]
		public string seatIds
		{
			get
			{
				return this._seatIds;
			}
			set
			{
				if ((this._seatIds != value))
				{
					this.OnseatIdsChanging(value);
					this.SendPropertyChanging();
					this._seatIds = value;
					this.SendPropertyChanged("seatIds");
					this.OnseatIdsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TechReservation")]
	public partial class TechReservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _techId;
		
		private string _seatId;
		
		private string _roomId;
		
		private System.Nullable<System.DateTime> _time;
		
		private System.Nullable<bool> _proceeded;
		
		private System.Nullable<bool> _accept;
		
		private string _gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntechIdChanging(string value);
    partial void OntechIdChanged();
    partial void OnseatIdChanging(string value);
    partial void OnseatIdChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void OnproceededChanging(System.Nullable<bool> value);
    partial void OnproceededChanged();
    partial void OnacceptChanging(System.Nullable<bool> value);
    partial void OnacceptChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    #endregion
		
		public TechReservation()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_techId", DbType="NVarChar(MAX)")]
		public string techId
		{
			get
			{
				return this._techId;
			}
			set
			{
				if ((this._techId != value))
				{
					this.OntechIdChanging(value);
					this.SendPropertyChanging();
					this._techId = value;
					this.SendPropertyChanged("techId");
					this.OntechIdChanged();
				}
			}
		}
		
		[Column(Storage="_seatId", DbType="NVarChar(MAX)")]
		public string seatId
		{
			get
			{
				return this._seatId;
			}
			set
			{
				if ((this._seatId != value))
				{
					this.OnseatIdChanging(value);
					this.SendPropertyChanging();
					this._seatId = value;
					this.SendPropertyChanged("seatId");
					this.OnseatIdChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[Column(Storage="_proceeded", DbType="Bit")]
		public System.Nullable<bool> proceeded
		{
			get
			{
				return this._proceeded;
			}
			set
			{
				if ((this._proceeded != value))
				{
					this.OnproceededChanging(value);
					this.SendPropertyChanging();
					this._proceeded = value;
					this.SendPropertyChanged("proceeded");
					this.OnproceededChanged();
				}
			}
		}
		
		[Column(Storage="_accept", DbType="Bit")]
		public System.Nullable<bool> accept
		{
			get
			{
				return this._accept;
			}
			set
			{
				if ((this._accept != value))
				{
					this.OnacceptChanging(value);
					this.SendPropertyChanging();
					this._accept = value;
					this.SendPropertyChanged("accept");
					this.OnacceptChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="NVarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _note;
		
		private string _ip;
		
		private System.Nullable<int> _leaderId;
		
		private System.Nullable<int> _departId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnleaderIdChanging(System.Nullable<int> value);
    partial void OnleaderIdChanged();
    partial void OndepartIdChanging(System.Nullable<int> value);
    partial void OndepartIdChanged();
    #endregion
		
		public Job()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_ip", DbType="NVarChar(MAX)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[Column(Storage="_leaderId", DbType="Int")]
		public System.Nullable<int> leaderId
		{
			get
			{
				return this._leaderId;
			}
			set
			{
				if ((this._leaderId != value))
				{
					this.OnleaderIdChanging(value);
					this.SendPropertyChanging();
					this._leaderId = value;
					this.SendPropertyChanged("leaderId");
					this.OnleaderIdChanged();
				}
			}
		}
		
		[Column(Storage="_departId", DbType="Int")]
		public System.Nullable<int> departId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this.OndepartIdChanging(value);
					this.SendPropertyChanging();
					this._departId = value;
					this.SendPropertyChanged("departId");
					this.OndepartIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Catgory")]
	public partial class Catgory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kitchPrinterIp;
		
		private string _kitchPrinterName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkitchPrinterIpChanging(string value);
    partial void OnkitchPrinterIpChanged();
    partial void OnkitchPrinterNameChanging(string value);
    partial void OnkitchPrinterNameChanged();
    #endregion
		
		public Catgory()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_kitchPrinterIp", DbType="NVarChar(MAX)")]
		public string kitchPrinterIp
		{
			get
			{
				return this._kitchPrinterIp;
			}
			set
			{
				if ((this._kitchPrinterIp != value))
				{
					this.OnkitchPrinterIpChanging(value);
					this.SendPropertyChanging();
					this._kitchPrinterIp = value;
					this.SendPropertyChanged("kitchPrinterIp");
					this.OnkitchPrinterIpChanged();
				}
			}
		}
		
		[Column(Storage="_kitchPrinterName", DbType="NVarChar(MAX)")]
		public string kitchPrinterName
		{
			get
			{
				return this._kitchPrinterName;
			}
			set
			{
				if ((this._kitchPrinterName != value))
				{
					this.OnkitchPrinterNameChanging(value);
					this.SendPropertyChanging();
					this._kitchPrinterName = value;
					this.SendPropertyChanged("kitchPrinterName");
					this.OnkitchPrinterNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TechIndex")]
	public partial class TechIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _dutyid;
		
		private string _ids;
		
		private string _gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndutyidChanging(System.Nullable<int> value);
    partial void OndutyidChanged();
    partial void OnidsChanging(string value);
    partial void OnidsChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    #endregion
		
		public TechIndex()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_dutyid", DbType="Int")]
		public System.Nullable<int> dutyid
		{
			get
			{
				return this._dutyid;
			}
			set
			{
				if ((this._dutyid != value))
				{
					this.OndutyidChanging(value);
					this.SendPropertyChanging();
					this._dutyid = value;
					this.SendPropertyChanged("dutyid");
					this.OndutyidChanged();
				}
			}
		}
		
		[Column(Storage="_ids", DbType="NVarChar(MAX)")]
		public string ids
		{
			get
			{
				return this._ids;
			}
			set
			{
				if ((this._ids != value))
				{
					this.OnidsChanging(value);
					this.SendPropertyChanging();
					this._ids = value;
					this.SendPropertyChanged("ids");
					this.OnidsChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="NVarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TechMsg")]
	public partial class TechMsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _room;
		
		private string _type;
		
		private string _techType;
		
		private System.Nullable<int> _number;
		
		private string _techId;
		
		private System.DateTime _time;
		
		private System.Nullable<bool> _printed;
		
		private bool _read;
		
		private string _seat;
		
		private string _menu;
		
		private string _gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OntechTypeChanging(string value);
    partial void OntechTypeChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    partial void OntechIdChanging(string value);
    partial void OntechIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnprintedChanging(System.Nullable<bool> value);
    partial void OnprintedChanged();
    partial void OnreadChanging(bool value);
    partial void OnreadChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    #endregion
		
		public TechMsg()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_room", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		[Column(Storage="_type", DbType="NVarChar(MAX)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[Column(Storage="_techType", DbType="NVarChar(MAX)")]
		public string techType
		{
			get
			{
				return this._techType;
			}
			set
			{
				if ((this._techType != value))
				{
					this.OntechTypeChanging(value);
					this.SendPropertyChanging();
					this._techType = value;
					this.SendPropertyChanged("techType");
					this.OntechTypeChanged();
				}
			}
		}
		
		[Column(Storage="_number", DbType="Int")]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[Column(Storage="_techId", DbType="NVarChar(MAX)")]
		public string techId
		{
			get
			{
				return this._techId;
			}
			set
			{
				if ((this._techId != value))
				{
					this.OntechIdChanging(value);
					this.SendPropertyChanging();
					this._techId = value;
					this.SendPropertyChanged("techId");
					this.OntechIdChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[Column(Storage="_printed", DbType="Bit")]
		public System.Nullable<bool> printed
		{
			get
			{
				return this._printed;
			}
			set
			{
				if ((this._printed != value))
				{
					this.OnprintedChanging(value);
					this.SendPropertyChanging();
					this._printed = value;
					this.SendPropertyChanged("printed");
					this.OnprintedChanged();
				}
			}
		}
		
		[Column(Name="[read]", Storage="_read", DbType="Bit NOT NULL")]
		public bool read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="NVarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WaiterItem")]
	public partial class WaiterItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public WaiterItem()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RoomCall")]
	public partial class RoomCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _roomId;
		
		private string _msg;
		
		private bool _read;
		
		private string _seatId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnreadChanging(bool value);
    partial void OnreadChanged();
    partial void OnseatIdChanging(string value);
    partial void OnseatIdChanged();
    #endregion
		
		public RoomCall()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Name="[read]", Storage="_read", DbType="Bit NOT NULL")]
		public bool read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[Column(Storage="_seatId", DbType="NVarChar(MAX)")]
		public string seatId
		{
			get
			{
				return this._seatId;
			}
			set
			{
				if ((this._seatId != value))
				{
					this.OnseatIdChanging(value);
					this.SendPropertyChanging();
					this._seatId = value;
					this.SendPropertyChanged("seatId");
					this.OnseatIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RoomWarn")]
	public partial class RoomWarn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _msg;
		
		private string _room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    #endregion
		
		public RoomWarn()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Storage="_room", DbType="NVarChar(MAX)")]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BarMsg")]
	public partial class BarMsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _roomId;
		
		private string _msg;
		
		private System.DateTime _time;
		
		private System.Nullable<bool> _read;
		
		private string _seatId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnreadChanging(System.Nullable<bool> value);
    partial void OnreadChanged();
    partial void OnseatIdChanging(string value);
    partial void OnseatIdChanged();
    #endregion
		
		public BarMsg()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[Column(Name="[read]", Storage="_read", DbType="Bit")]
		public System.Nullable<bool> read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[Column(Storage="_seatId", DbType="NVarChar(MAX)")]
		public string seatId
		{
			get
			{
				return this._seatId;
			}
			set
			{
				if ((this._seatId != value))
				{
					this.OnseatIdChanging(value);
					this.SendPropertyChanging();
					this._seatId = value;
					this.SendPropertyChanged("seatId");
					this.OnseatIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Apk")]
	public partial class Apk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _path;
		
		private System.Data.Linq.Binary _binary;
		
		private string _version;
		
		private System.Nullable<long> _size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnbinaryChanging(System.Data.Linq.Binary value);
    partial void OnbinaryChanged();
    partial void OnversionChanging(string value);
    partial void OnversionChanged();
    partial void OnsizeChanging(System.Nullable<long> value);
    partial void OnsizeChanged();
    #endregion
		
		public Apk()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_path", DbType="NVarChar(MAX)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[Column(Storage="_binary", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary binary
		{
			get
			{
				return this._binary;
			}
			set
			{
				if ((this._binary != value))
				{
					this.OnbinaryChanging(value);
					this.SendPropertyChanging();
					this._binary = value;
					this.SendPropertyChanged("binary");
					this.OnbinaryChanged();
				}
			}
		}
		
		[Column(Storage="_version", DbType="NVarChar(MAX)")]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[Column(Storage="_size", DbType="BigInt")]
		public System.Nullable<long> size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ClearTable")]
	public partial class ClearTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _clearTime;
		
		private System.Nullable<bool> _proceeded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnclearTimeChanging(System.DateTime value);
    partial void OnclearTimeChanged();
    partial void OnproceededChanging(System.Nullable<bool> value);
    partial void OnproceededChanged();
    #endregion
		
		public ClearTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_clearTime", DbType="DateTime NOT NULL")]
		public System.DateTime clearTime
		{
			get
			{
				return this._clearTime;
			}
			set
			{
				if ((this._clearTime != value))
				{
					this.OnclearTimeChanging(value);
					this.SendPropertyChanging();
					this._clearTime = value;
					this.SendPropertyChanged("clearTime");
					this.OnclearTimeChanged();
				}
			}
		}
		
		[Column(Storage="_proceeded", DbType="Bit")]
		public System.Nullable<bool> proceeded
		{
			get
			{
				return this._proceeded;
			}
			set
			{
				if ((this._proceeded != value))
				{
					this.OnproceededChanging(value);
					this.SendPropertyChanging();
					this._proceeded = value;
					this.SendPropertyChanged("proceeded");
					this.OnproceededChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CardSale")]
	public partial class CardSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _memberId;
		
		private System.Nullable<double> _balance;
		
		private System.Nullable<double> _cash;
		
		private System.Nullable<double> _bankUnion;
		
		private System.Nullable<System.DateTime> _payTime;
		
		private string _payEmployee;
		
		private string _note;
		
		private string _macAddress;
		
		private string _seat;
		
		private string _explain;
		
		private System.Nullable<double> _server;
		
		private string _serverEmployee;
		
		private string _abandon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmemberIdChanging(string value);
    partial void OnmemberIdChanged();
    partial void OnbalanceChanging(System.Nullable<double> value);
    partial void OnbalanceChanged();
    partial void OncashChanging(System.Nullable<double> value);
    partial void OncashChanged();
    partial void OnbankUnionChanging(System.Nullable<double> value);
    partial void OnbankUnionChanged();
    partial void OnpayTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnpayTimeChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnmacAddressChanging(string value);
    partial void OnmacAddressChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnexplainChanging(string value);
    partial void OnexplainChanged();
    partial void OnserverChanging(System.Nullable<double> value);
    partial void OnserverChanged();
    partial void OnserverEmployeeChanging(string value);
    partial void OnserverEmployeeChanged();
    partial void OnabandonChanging(string value);
    partial void OnabandonChanged();
    #endregion
		
		public CardSale()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_memberId", DbType="NVarChar(MAX)")]
		public string memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[Column(Storage="_balance", DbType="Float")]
		public System.Nullable<double> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[Column(Storage="_cash", DbType="Float")]
		public System.Nullable<double> cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[Column(Storage="_bankUnion", DbType="Float")]
		public System.Nullable<double> bankUnion
		{
			get
			{
				return this._bankUnion;
			}
			set
			{
				if ((this._bankUnion != value))
				{
					this.OnbankUnionChanging(value);
					this.SendPropertyChanging();
					this._bankUnion = value;
					this.SendPropertyChanged("bankUnion");
					this.OnbankUnionChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> payTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnpayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("payTime");
					this.OnpayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX)")]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_macAddress", DbType="NVarChar(MAX)")]
		public string macAddress
		{
			get
			{
				return this._macAddress;
			}
			set
			{
				if ((this._macAddress != value))
				{
					this.OnmacAddressChanging(value);
					this.SendPropertyChanging();
					this._macAddress = value;
					this.SendPropertyChanged("macAddress");
					this.OnmacAddressChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_explain", DbType="NVarChar(MAX)")]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this.OnexplainChanging(value);
					this.SendPropertyChanging();
					this._explain = value;
					this.SendPropertyChanged("explain");
					this.OnexplainChanged();
				}
			}
		}
		
		[Column(Storage="_server", DbType="Float")]
		public System.Nullable<double> server
		{
			get
			{
				return this._server;
			}
			set
			{
				if ((this._server != value))
				{
					this.OnserverChanging(value);
					this.SendPropertyChanging();
					this._server = value;
					this.SendPropertyChanged("server");
					this.OnserverChanged();
				}
			}
		}
		
		[Column(Storage="_serverEmployee", DbType="NVarChar(MAX)")]
		public string serverEmployee
		{
			get
			{
				return this._serverEmployee;
			}
			set
			{
				if ((this._serverEmployee != value))
				{
					this.OnserverEmployeeChanging(value);
					this.SendPropertyChanging();
					this._serverEmployee = value;
					this.SendPropertyChanged("serverEmployee");
					this.OnserverEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_abandon", DbType="NVarChar(MAX)")]
		public string abandon
		{
			get
			{
				return this._abandon;
			}
			set
			{
				if ((this._abandon != value))
				{
					this.OnabandonChanging(value);
					this.SendPropertyChanging();
					this._abandon = value;
					this.SendPropertyChanged("abandon");
					this.OnabandonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UploadRecords")]
	public partial class UploadRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _tableName;
		
		private System.Nullable<long> _maxId;
		
		private string _abandonId;
		
		private string _note;
		
		private System.Nullable<System.DateTime> _clearTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntableNameChanging(string value);
    partial void OntableNameChanged();
    partial void OnmaxIdChanging(System.Nullable<long> value);
    partial void OnmaxIdChanged();
    partial void OnabandonIdChanging(string value);
    partial void OnabandonIdChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnclearTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnclearTimeChanged();
    #endregion
		
		public UploadRecords()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_tableName", DbType="NVarChar(MAX)")]
		public string tableName
		{
			get
			{
				return this._tableName;
			}
			set
			{
				if ((this._tableName != value))
				{
					this.OntableNameChanging(value);
					this.SendPropertyChanging();
					this._tableName = value;
					this.SendPropertyChanged("tableName");
					this.OntableNameChanged();
				}
			}
		}
		
		[Column(Storage="_maxId", DbType="BigInt")]
		public System.Nullable<long> maxId
		{
			get
			{
				return this._maxId;
			}
			set
			{
				if ((this._maxId != value))
				{
					this.OnmaxIdChanging(value);
					this.SendPropertyChanging();
					this._maxId = value;
					this.SendPropertyChanged("maxId");
					this.OnmaxIdChanged();
				}
			}
		}
		
		[Column(Storage="_abandonId", DbType="NVarChar(MAX)")]
		public string abandonId
		{
			get
			{
				return this._abandonId;
			}
			set
			{
				if ((this._abandonId != value))
				{
					this.OnabandonIdChanging(value);
					this.SendPropertyChanging();
					this._abandonId = value;
					this.SendPropertyChanged("abandonId");
					this.OnabandonIdChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_clearTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> clearTime
		{
			get
			{
				return this._clearTime;
			}
			set
			{
				if ((this._clearTime != value))
				{
					this.OnclearTimeChanging(value);
					this.SendPropertyChanging();
					this._clearTime = value;
					this.SendPropertyChanged("clearTime");
					this.OnclearTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Options")]
	public partial class Options : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _companyName;
		
		private string _companyCode;
		
		private string _companyPhone;
		
		private string _companyAddress;
		
		private System.Nullable<int> _取消开牌时限;
		
		private System.Nullable<int> _取消开房时限;
		
		private System.Nullable<int> _删除支出时限;
		
		private System.Nullable<int> _退钟时限;
		
		private System.Nullable<int> _技师条数;
		
		private System.Nullable<bool> _启用鞋部;
		
		private System.Nullable<int> _鞋部条数;
		
		private System.Nullable<bool> _启用会员卡密码;
		
		private System.Nullable<bool> _启用结账监控;
		
		private string _结账视频长度;
		
		private System.Nullable<bool> _启用手牌锁;
		
		private System.Nullable<int> _开业时间;
		
		private System.Nullable<bool> _启用客房面板;
		
		private System.Nullable<int> _包房等待时限;
		
		private System.Nullable<int> _下钟提醒;
		
		private System.Nullable<bool> _启用ID手牌锁;
		
		private System.Nullable<bool> _允许手工输入手牌号开牌;
		
		private System.Nullable<bool> _允许手工输入手牌号结账;
		
		private System.Nullable<bool> _录单输入单据编号;
		
		private System.Nullable<bool> _结账未打单锁定手牌;
		
		private System.Nullable<int> _营业报表格式;
		
		private System.Nullable<bool> _结账打印结账单;
		
		private System.Nullable<bool> _结账打印存根单;
		
		private System.Nullable<bool> _结账打印取鞋小票;
		
		private System.Nullable<int> _抹零限制;
		
		private string _手牌锁类型;
		
		private System.Nullable<bool> _自动加收过夜费;
		
		private string _过夜费起点;
		
		private string _过夜费终点;
		
		private System.Nullable<bool> _启用分单结账;
		
		private System.Nullable<bool> _启用员工服务卡;
		
		private System.Nullable<int> _提成报表格式;
		
		private System.Nullable<bool> _台位类型分页显示;
		
		private System.Nullable<bool> _自动感应手牌;
		
		private System.Nullable<bool> _录单区分点钟轮钟;
		
		private System.Nullable<bool> _打印技师派遣单;
		
		private string _会员卡密码类型;
		
		private string _company_Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OncompanyPhoneChanging(string value);
    partial void OncompanyPhoneChanged();
    partial void OncompanyAddressChanging(string value);
    partial void OncompanyAddressChanged();
    partial void On取消开牌时限Changing(System.Nullable<int> value);
    partial void On取消开牌时限Changed();
    partial void On取消开房时限Changing(System.Nullable<int> value);
    partial void On取消开房时限Changed();
    partial void On删除支出时限Changing(System.Nullable<int> value);
    partial void On删除支出时限Changed();
    partial void On退钟时限Changing(System.Nullable<int> value);
    partial void On退钟时限Changed();
    partial void On技师条数Changing(System.Nullable<int> value);
    partial void On技师条数Changed();
    partial void On启用鞋部Changing(System.Nullable<bool> value);
    partial void On启用鞋部Changed();
    partial void On鞋部条数Changing(System.Nullable<int> value);
    partial void On鞋部条数Changed();
    partial void On启用会员卡密码Changing(System.Nullable<bool> value);
    partial void On启用会员卡密码Changed();
    partial void On启用结账监控Changing(System.Nullable<bool> value);
    partial void On启用结账监控Changed();
    partial void On结账视频长度Changing(string value);
    partial void On结账视频长度Changed();
    partial void On启用手牌锁Changing(System.Nullable<bool> value);
    partial void On启用手牌锁Changed();
    partial void On开业时间Changing(System.Nullable<int> value);
    partial void On开业时间Changed();
    partial void On启用客房面板Changing(System.Nullable<bool> value);
    partial void On启用客房面板Changed();
    partial void On包房等待时限Changing(System.Nullable<int> value);
    partial void On包房等待时限Changed();
    partial void On下钟提醒Changing(System.Nullable<int> value);
    partial void On下钟提醒Changed();
    partial void On启用ID手牌锁Changing(System.Nullable<bool> value);
    partial void On启用ID手牌锁Changed();
    partial void On允许手工输入手牌号开牌Changing(System.Nullable<bool> value);
    partial void On允许手工输入手牌号开牌Changed();
    partial void On允许手工输入手牌号结账Changing(System.Nullable<bool> value);
    partial void On允许手工输入手牌号结账Changed();
    partial void On录单输入单据编号Changing(System.Nullable<bool> value);
    partial void On录单输入单据编号Changed();
    partial void On结账未打单锁定手牌Changing(System.Nullable<bool> value);
    partial void On结账未打单锁定手牌Changed();
    partial void On营业报表格式Changing(System.Nullable<int> value);
    partial void On营业报表格式Changed();
    partial void On结账打印结账单Changing(System.Nullable<bool> value);
    partial void On结账打印结账单Changed();
    partial void On结账打印存根单Changing(System.Nullable<bool> value);
    partial void On结账打印存根单Changed();
    partial void On结账打印取鞋小票Changing(System.Nullable<bool> value);
    partial void On结账打印取鞋小票Changed();
    partial void On抹零限制Changing(System.Nullable<int> value);
    partial void On抹零限制Changed();
    partial void On手牌锁类型Changing(string value);
    partial void On手牌锁类型Changed();
    partial void On自动加收过夜费Changing(System.Nullable<bool> value);
    partial void On自动加收过夜费Changed();
    partial void On过夜费起点Changing(string value);
    partial void On过夜费起点Changed();
    partial void On过夜费终点Changing(string value);
    partial void On过夜费终点Changed();
    partial void On启用分单结账Changing(System.Nullable<bool> value);
    partial void On启用分单结账Changed();
    partial void On启用员工服务卡Changing(System.Nullable<bool> value);
    partial void On启用员工服务卡Changed();
    partial void On提成报表格式Changing(System.Nullable<int> value);
    partial void On提成报表格式Changed();
    partial void On台位类型分页显示Changing(System.Nullable<bool> value);
    partial void On台位类型分页显示Changed();
    partial void On自动感应手牌Changing(System.Nullable<bool> value);
    partial void On自动感应手牌Changed();
    partial void On录单区分点钟轮钟Changing(System.Nullable<bool> value);
    partial void On录单区分点钟轮钟Changed();
    partial void On打印技师派遣单Changing(System.Nullable<bool> value);
    partial void On打印技师派遣单Changed();
    partial void On会员卡密码类型Changing(string value);
    partial void On会员卡密码类型Changed();
    partial void Oncompany_CodeChanging(string value);
    partial void Oncompany_CodeChanged();
    #endregion
		
		public Options()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_companyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyCode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_companyPhone", DbType="NVarChar(MAX)")]
		public string companyPhone
		{
			get
			{
				return this._companyPhone;
			}
			set
			{
				if ((this._companyPhone != value))
				{
					this.OncompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._companyPhone = value;
					this.SendPropertyChanged("companyPhone");
					this.OncompanyPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_companyAddress", DbType="NVarChar(MAX)")]
		public string companyAddress
		{
			get
			{
				return this._companyAddress;
			}
			set
			{
				if ((this._companyAddress != value))
				{
					this.OncompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._companyAddress = value;
					this.SendPropertyChanged("companyAddress");
					this.OncompanyAddressChanged();
				}
			}
		}
		
		[Column(Storage="_取消开牌时限", DbType="Int")]
		public System.Nullable<int> 取消开牌时限
		{
			get
			{
				return this._取消开牌时限;
			}
			set
			{
				if ((this._取消开牌时限 != value))
				{
					this.On取消开牌时限Changing(value);
					this.SendPropertyChanging();
					this._取消开牌时限 = value;
					this.SendPropertyChanged("取消开牌时限");
					this.On取消开牌时限Changed();
				}
			}
		}
		
		[Column(Storage="_取消开房时限", DbType="Int")]
		public System.Nullable<int> 取消开房时限
		{
			get
			{
				return this._取消开房时限;
			}
			set
			{
				if ((this._取消开房时限 != value))
				{
					this.On取消开房时限Changing(value);
					this.SendPropertyChanging();
					this._取消开房时限 = value;
					this.SendPropertyChanged("取消开房时限");
					this.On取消开房时限Changed();
				}
			}
		}
		
		[Column(Storage="_删除支出时限", DbType="Int")]
		public System.Nullable<int> 删除支出时限
		{
			get
			{
				return this._删除支出时限;
			}
			set
			{
				if ((this._删除支出时限 != value))
				{
					this.On删除支出时限Changing(value);
					this.SendPropertyChanging();
					this._删除支出时限 = value;
					this.SendPropertyChanged("删除支出时限");
					this.On删除支出时限Changed();
				}
			}
		}
		
		[Column(Storage="_退钟时限", DbType="Int")]
		public System.Nullable<int> 退钟时限
		{
			get
			{
				return this._退钟时限;
			}
			set
			{
				if ((this._退钟时限 != value))
				{
					this.On退钟时限Changing(value);
					this.SendPropertyChanging();
					this._退钟时限 = value;
					this.SendPropertyChanged("退钟时限");
					this.On退钟时限Changed();
				}
			}
		}
		
		[Column(Storage="_技师条数", DbType="Int")]
		public System.Nullable<int> 技师条数
		{
			get
			{
				return this._技师条数;
			}
			set
			{
				if ((this._技师条数 != value))
				{
					this.On技师条数Changing(value);
					this.SendPropertyChanging();
					this._技师条数 = value;
					this.SendPropertyChanged("技师条数");
					this.On技师条数Changed();
				}
			}
		}
		
		[Column(Storage="_启用鞋部", DbType="Bit")]
		public System.Nullable<bool> 启用鞋部
		{
			get
			{
				return this._启用鞋部;
			}
			set
			{
				if ((this._启用鞋部 != value))
				{
					this.On启用鞋部Changing(value);
					this.SendPropertyChanging();
					this._启用鞋部 = value;
					this.SendPropertyChanged("启用鞋部");
					this.On启用鞋部Changed();
				}
			}
		}
		
		[Column(Storage="_鞋部条数", DbType="Int")]
		public System.Nullable<int> 鞋部条数
		{
			get
			{
				return this._鞋部条数;
			}
			set
			{
				if ((this._鞋部条数 != value))
				{
					this.On鞋部条数Changing(value);
					this.SendPropertyChanging();
					this._鞋部条数 = value;
					this.SendPropertyChanged("鞋部条数");
					this.On鞋部条数Changed();
				}
			}
		}
		
		[Column(Storage="_启用会员卡密码", DbType="Bit")]
		public System.Nullable<bool> 启用会员卡密码
		{
			get
			{
				return this._启用会员卡密码;
			}
			set
			{
				if ((this._启用会员卡密码 != value))
				{
					this.On启用会员卡密码Changing(value);
					this.SendPropertyChanging();
					this._启用会员卡密码 = value;
					this.SendPropertyChanged("启用会员卡密码");
					this.On启用会员卡密码Changed();
				}
			}
		}
		
		[Column(Storage="_启用结账监控", DbType="Bit")]
		public System.Nullable<bool> 启用结账监控
		{
			get
			{
				return this._启用结账监控;
			}
			set
			{
				if ((this._启用结账监控 != value))
				{
					this.On启用结账监控Changing(value);
					this.SendPropertyChanging();
					this._启用结账监控 = value;
					this.SendPropertyChanged("启用结账监控");
					this.On启用结账监控Changed();
				}
			}
		}
		
		[Column(Storage="_结账视频长度", DbType="NVarChar(MAX)")]
		public string 结账视频长度
		{
			get
			{
				return this._结账视频长度;
			}
			set
			{
				if ((this._结账视频长度 != value))
				{
					this.On结账视频长度Changing(value);
					this.SendPropertyChanging();
					this._结账视频长度 = value;
					this.SendPropertyChanged("结账视频长度");
					this.On结账视频长度Changed();
				}
			}
		}
		
		[Column(Storage="_启用手牌锁", DbType="Bit")]
		public System.Nullable<bool> 启用手牌锁
		{
			get
			{
				return this._启用手牌锁;
			}
			set
			{
				if ((this._启用手牌锁 != value))
				{
					this.On启用手牌锁Changing(value);
					this.SendPropertyChanging();
					this._启用手牌锁 = value;
					this.SendPropertyChanged("启用手牌锁");
					this.On启用手牌锁Changed();
				}
			}
		}
		
		[Column(Storage="_开业时间", DbType="Int")]
		public System.Nullable<int> 开业时间
		{
			get
			{
				return this._开业时间;
			}
			set
			{
				if ((this._开业时间 != value))
				{
					this.On开业时间Changing(value);
					this.SendPropertyChanging();
					this._开业时间 = value;
					this.SendPropertyChanged("开业时间");
					this.On开业时间Changed();
				}
			}
		}
		
		[Column(Storage="_启用客房面板", DbType="Bit")]
		public System.Nullable<bool> 启用客房面板
		{
			get
			{
				return this._启用客房面板;
			}
			set
			{
				if ((this._启用客房面板 != value))
				{
					this.On启用客房面板Changing(value);
					this.SendPropertyChanging();
					this._启用客房面板 = value;
					this.SendPropertyChanged("启用客房面板");
					this.On启用客房面板Changed();
				}
			}
		}
		
		[Column(Storage="_包房等待时限", DbType="Int")]
		public System.Nullable<int> 包房等待时限
		{
			get
			{
				return this._包房等待时限;
			}
			set
			{
				if ((this._包房等待时限 != value))
				{
					this.On包房等待时限Changing(value);
					this.SendPropertyChanging();
					this._包房等待时限 = value;
					this.SendPropertyChanged("包房等待时限");
					this.On包房等待时限Changed();
				}
			}
		}
		
		[Column(Storage="_下钟提醒", DbType="Int")]
		public System.Nullable<int> 下钟提醒
		{
			get
			{
				return this._下钟提醒;
			}
			set
			{
				if ((this._下钟提醒 != value))
				{
					this.On下钟提醒Changing(value);
					this.SendPropertyChanging();
					this._下钟提醒 = value;
					this.SendPropertyChanged("下钟提醒");
					this.On下钟提醒Changed();
				}
			}
		}
		
		[Column(Storage="_启用ID手牌锁", DbType="Bit")]
		public System.Nullable<bool> 启用ID手牌锁
		{
			get
			{
				return this._启用ID手牌锁;
			}
			set
			{
				if ((this._启用ID手牌锁 != value))
				{
					this.On启用ID手牌锁Changing(value);
					this.SendPropertyChanging();
					this._启用ID手牌锁 = value;
					this.SendPropertyChanged("启用ID手牌锁");
					this.On启用ID手牌锁Changed();
				}
			}
		}
		
		[Column(Storage="_允许手工输入手牌号开牌", DbType="Bit")]
		public System.Nullable<bool> 允许手工输入手牌号开牌
		{
			get
			{
				return this._允许手工输入手牌号开牌;
			}
			set
			{
				if ((this._允许手工输入手牌号开牌 != value))
				{
					this.On允许手工输入手牌号开牌Changing(value);
					this.SendPropertyChanging();
					this._允许手工输入手牌号开牌 = value;
					this.SendPropertyChanged("允许手工输入手牌号开牌");
					this.On允许手工输入手牌号开牌Changed();
				}
			}
		}
		
		[Column(Storage="_允许手工输入手牌号结账", DbType="Bit")]
		public System.Nullable<bool> 允许手工输入手牌号结账
		{
			get
			{
				return this._允许手工输入手牌号结账;
			}
			set
			{
				if ((this._允许手工输入手牌号结账 != value))
				{
					this.On允许手工输入手牌号结账Changing(value);
					this.SendPropertyChanging();
					this._允许手工输入手牌号结账 = value;
					this.SendPropertyChanged("允许手工输入手牌号结账");
					this.On允许手工输入手牌号结账Changed();
				}
			}
		}
		
		[Column(Storage="_录单输入单据编号", DbType="Bit")]
		public System.Nullable<bool> 录单输入单据编号
		{
			get
			{
				return this._录单输入单据编号;
			}
			set
			{
				if ((this._录单输入单据编号 != value))
				{
					this.On录单输入单据编号Changing(value);
					this.SendPropertyChanging();
					this._录单输入单据编号 = value;
					this.SendPropertyChanged("录单输入单据编号");
					this.On录单输入单据编号Changed();
				}
			}
		}
		
		[Column(Storage="_结账未打单锁定手牌", DbType="Bit")]
		public System.Nullable<bool> 结账未打单锁定手牌
		{
			get
			{
				return this._结账未打单锁定手牌;
			}
			set
			{
				if ((this._结账未打单锁定手牌 != value))
				{
					this.On结账未打单锁定手牌Changing(value);
					this.SendPropertyChanging();
					this._结账未打单锁定手牌 = value;
					this.SendPropertyChanged("结账未打单锁定手牌");
					this.On结账未打单锁定手牌Changed();
				}
			}
		}
		
		[Column(Storage="_营业报表格式", DbType="Int")]
		public System.Nullable<int> 营业报表格式
		{
			get
			{
				return this._营业报表格式;
			}
			set
			{
				if ((this._营业报表格式 != value))
				{
					this.On营业报表格式Changing(value);
					this.SendPropertyChanging();
					this._营业报表格式 = value;
					this.SendPropertyChanged("营业报表格式");
					this.On营业报表格式Changed();
				}
			}
		}
		
		[Column(Storage="_结账打印结账单", DbType="Bit")]
		public System.Nullable<bool> 结账打印结账单
		{
			get
			{
				return this._结账打印结账单;
			}
			set
			{
				if ((this._结账打印结账单 != value))
				{
					this.On结账打印结账单Changing(value);
					this.SendPropertyChanging();
					this._结账打印结账单 = value;
					this.SendPropertyChanged("结账打印结账单");
					this.On结账打印结账单Changed();
				}
			}
		}
		
		[Column(Storage="_结账打印存根单", DbType="Bit")]
		public System.Nullable<bool> 结账打印存根单
		{
			get
			{
				return this._结账打印存根单;
			}
			set
			{
				if ((this._结账打印存根单 != value))
				{
					this.On结账打印存根单Changing(value);
					this.SendPropertyChanging();
					this._结账打印存根单 = value;
					this.SendPropertyChanged("结账打印存根单");
					this.On结账打印存根单Changed();
				}
			}
		}
		
		[Column(Storage="_结账打印取鞋小票", DbType="Bit")]
		public System.Nullable<bool> 结账打印取鞋小票
		{
			get
			{
				return this._结账打印取鞋小票;
			}
			set
			{
				if ((this._结账打印取鞋小票 != value))
				{
					this.On结账打印取鞋小票Changing(value);
					this.SendPropertyChanging();
					this._结账打印取鞋小票 = value;
					this.SendPropertyChanged("结账打印取鞋小票");
					this.On结账打印取鞋小票Changed();
				}
			}
		}
		
		[Column(Storage="_抹零限制", DbType="Int")]
		public System.Nullable<int> 抹零限制
		{
			get
			{
				return this._抹零限制;
			}
			set
			{
				if ((this._抹零限制 != value))
				{
					this.On抹零限制Changing(value);
					this.SendPropertyChanging();
					this._抹零限制 = value;
					this.SendPropertyChanged("抹零限制");
					this.On抹零限制Changed();
				}
			}
		}
		
		[Column(Storage="_手牌锁类型", DbType="NVarChar(MAX)")]
		public string 手牌锁类型
		{
			get
			{
				return this._手牌锁类型;
			}
			set
			{
				if ((this._手牌锁类型 != value))
				{
					this.On手牌锁类型Changing(value);
					this.SendPropertyChanging();
					this._手牌锁类型 = value;
					this.SendPropertyChanged("手牌锁类型");
					this.On手牌锁类型Changed();
				}
			}
		}
		
		[Column(Storage="_自动加收过夜费", DbType="Bit")]
		public System.Nullable<bool> 自动加收过夜费
		{
			get
			{
				return this._自动加收过夜费;
			}
			set
			{
				if ((this._自动加收过夜费 != value))
				{
					this.On自动加收过夜费Changing(value);
					this.SendPropertyChanging();
					this._自动加收过夜费 = value;
					this.SendPropertyChanged("自动加收过夜费");
					this.On自动加收过夜费Changed();
				}
			}
		}
		
		[Column(Storage="_过夜费起点", DbType="NVarChar(MAX)")]
		public string 过夜费起点
		{
			get
			{
				return this._过夜费起点;
			}
			set
			{
				if ((this._过夜费起点 != value))
				{
					this.On过夜费起点Changing(value);
					this.SendPropertyChanging();
					this._过夜费起点 = value;
					this.SendPropertyChanged("过夜费起点");
					this.On过夜费起点Changed();
				}
			}
		}
		
		[Column(Storage="_过夜费终点", DbType="NVarChar(MAX)")]
		public string 过夜费终点
		{
			get
			{
				return this._过夜费终点;
			}
			set
			{
				if ((this._过夜费终点 != value))
				{
					this.On过夜费终点Changing(value);
					this.SendPropertyChanging();
					this._过夜费终点 = value;
					this.SendPropertyChanged("过夜费终点");
					this.On过夜费终点Changed();
				}
			}
		}
		
		[Column(Storage="_启用分单结账", DbType="Bit")]
		public System.Nullable<bool> 启用分单结账
		{
			get
			{
				return this._启用分单结账;
			}
			set
			{
				if ((this._启用分单结账 != value))
				{
					this.On启用分单结账Changing(value);
					this.SendPropertyChanging();
					this._启用分单结账 = value;
					this.SendPropertyChanged("启用分单结账");
					this.On启用分单结账Changed();
				}
			}
		}
		
		[Column(Storage="_启用员工服务卡", DbType="Bit")]
		public System.Nullable<bool> 启用员工服务卡
		{
			get
			{
				return this._启用员工服务卡;
			}
			set
			{
				if ((this._启用员工服务卡 != value))
				{
					this.On启用员工服务卡Changing(value);
					this.SendPropertyChanging();
					this._启用员工服务卡 = value;
					this.SendPropertyChanged("启用员工服务卡");
					this.On启用员工服务卡Changed();
				}
			}
		}
		
		[Column(Storage="_提成报表格式", DbType="Int")]
		public System.Nullable<int> 提成报表格式
		{
			get
			{
				return this._提成报表格式;
			}
			set
			{
				if ((this._提成报表格式 != value))
				{
					this.On提成报表格式Changing(value);
					this.SendPropertyChanging();
					this._提成报表格式 = value;
					this.SendPropertyChanged("提成报表格式");
					this.On提成报表格式Changed();
				}
			}
		}
		
		[Column(Storage="_台位类型分页显示", DbType="Bit")]
		public System.Nullable<bool> 台位类型分页显示
		{
			get
			{
				return this._台位类型分页显示;
			}
			set
			{
				if ((this._台位类型分页显示 != value))
				{
					this.On台位类型分页显示Changing(value);
					this.SendPropertyChanging();
					this._台位类型分页显示 = value;
					this.SendPropertyChanged("台位类型分页显示");
					this.On台位类型分页显示Changed();
				}
			}
		}
		
		[Column(Storage="_自动感应手牌", DbType="Bit")]
		public System.Nullable<bool> 自动感应手牌
		{
			get
			{
				return this._自动感应手牌;
			}
			set
			{
				if ((this._自动感应手牌 != value))
				{
					this.On自动感应手牌Changing(value);
					this.SendPropertyChanging();
					this._自动感应手牌 = value;
					this.SendPropertyChanged("自动感应手牌");
					this.On自动感应手牌Changed();
				}
			}
		}
		
		[Column(Storage="_录单区分点钟轮钟", DbType="Bit")]
		public System.Nullable<bool> 录单区分点钟轮钟
		{
			get
			{
				return this._录单区分点钟轮钟;
			}
			set
			{
				if ((this._录单区分点钟轮钟 != value))
				{
					this.On录单区分点钟轮钟Changing(value);
					this.SendPropertyChanging();
					this._录单区分点钟轮钟 = value;
					this.SendPropertyChanged("录单区分点钟轮钟");
					this.On录单区分点钟轮钟Changed();
				}
			}
		}
		
		[Column(Storage="_打印技师派遣单", DbType="Bit")]
		public System.Nullable<bool> 打印技师派遣单
		{
			get
			{
				return this._打印技师派遣单;
			}
			set
			{
				if ((this._打印技师派遣单 != value))
				{
					this.On打印技师派遣单Changing(value);
					this.SendPropertyChanging();
					this._打印技师派遣单 = value;
					this.SendPropertyChanged("打印技师派遣单");
					this.On打印技师派遣单Changed();
				}
			}
		}
		
		[Column(Storage="_会员卡密码类型", DbType="NVarChar(MAX)")]
		public string 会员卡密码类型
		{
			get
			{
				return this._会员卡密码类型;
			}
			set
			{
				if ((this._会员卡密码类型 != value))
				{
					this.On会员卡密码类型Changing(value);
					this.SendPropertyChanging();
					this._会员卡密码类型 = value;
					this.SendPropertyChanged("会员卡密码类型");
					this.On会员卡密码类型Changed();
				}
			}
		}
		
		[Column(Storage="_company_Code", DbType="NVarChar(MAX)")]
		public string company_Code
		{
			get
			{
				return this._company_Code;
			}
			set
			{
				if ((this._company_Code != value))
				{
					this.Oncompany_CodeChanging(value);
					this.SendPropertyChanging();
					this._company_Code = value;
					this.SendPropertyChanged("company_Code");
					this.Oncompany_CodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
