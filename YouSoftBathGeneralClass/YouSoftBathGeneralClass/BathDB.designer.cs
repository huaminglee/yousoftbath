#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4984
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace YouSoftBathGeneralClass
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="BathDB")]
	public partial class BathDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertCardInfo(CardInfo instance);
    partial void UpdateCardInfo(CardInfo instance);
    partial void DeleteCardInfo(CardInfo instance);
    partial void InsertCardPopSale(CardPopSale instance);
    partial void UpdateCardPopSale(CardPopSale instance);
    partial void DeleteCardPopSale(CardPopSale instance);
    partial void InsertCashPrintTime(CashPrintTime instance);
    partial void UpdateCashPrintTime(CashPrintTime instance);
    partial void DeleteCashPrintTime(CashPrintTime instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertExpenseType(ExpenseType instance);
    partial void UpdateExpenseType(ExpenseType instance);
    partial void DeleteExpenseType(ExpenseType instance);
    partial void InsertPayMsg(PayMsg instance);
    partial void UpdatePayMsg(PayMsg instance);
    partial void DeletePayMsg(PayMsg instance);
    partial void InsertShoeMsg(ShoeMsg instance);
    partial void UpdateShoeMsg(ShoeMsg instance);
    partial void DeleteShoeMsg(ShoeMsg instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    partial void InsertGroupBuy(GroupBuy instance);
    partial void UpdateGroupBuy(GroupBuy instance);
    partial void DeleteGroupBuy(GroupBuy instance);
    partial void InsertChainStore(ChainStore instance);
    partial void UpdateChainStore(ChainStore instance);
    partial void DeleteChainStore(ChainStore instance);
    partial void InsertOperation(Operation instance);
    partial void UpdateOperation(Operation instance);
    partial void DeleteOperation(Operation instance);
    partial void InsertClearTable(ClearTable instance);
    partial void UpdateClearTable(ClearTable instance);
    partial void DeleteClearTable(ClearTable instance);
    partial void InsertCardCharge(CardCharge instance);
    partial void UpdateCardCharge(CardCharge instance);
    partial void DeleteCardCharge(CardCharge instance);
    partial void InsertCoupon(Coupon instance);
    partial void UpdateCoupon(Coupon instance);
    partial void DeleteCoupon(Coupon instance);
    partial void InsertWaiterItem(WaiterItem instance);
    partial void UpdateWaiterItem(WaiterItem instance);
    partial void DeleteWaiterItem(WaiterItem instance);
    partial void InsertRoomWarn(RoomWarn instance);
    partial void UpdateRoomWarn(RoomWarn instance);
    partial void DeleteRoomWarn(RoomWarn instance);
    partial void InsertTechReturn(TechReturn instance);
    partial void UpdateTechReturn(TechReturn instance);
    partial void DeleteTechReturn(TechReturn instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertExpense(Expense instance);
    partial void UpdateExpense(Expense instance);
    partial void DeleteExpense(Expense instance);
    partial void InsertMemberSetting(MemberSetting instance);
    partial void UpdateMemberSetting(MemberSetting instance);
    partial void DeleteMemberSetting(MemberSetting instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertBarMsg(BarMsg instance);
    partial void UpdateBarMsg(BarMsg instance);
    partial void DeleteBarMsg(BarMsg instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertRoomCall(RoomCall instance);
    partial void UpdateRoomCall(RoomCall instance);
    partial void DeleteRoomCall(RoomCall instance);
    partial void InsertCatgory(Catgory instance);
    partial void UpdateCatgory(Catgory instance);
    partial void DeleteCatgory(Catgory instance);
    partial void InsertSeatType(SeatType instance);
    partial void UpdateSeatType(SeatType instance);
    partial void DeleteSeatType(SeatType instance);
    partial void InsertSystemIds(SystemIds instance);
    partial void UpdateSystemIds(SystemIds instance);
    partial void DeleteSystemIds(SystemIds instance);
    partial void InsertCombo(Combo instance);
    partial void UpdateCombo(Combo instance);
    partial void DeleteCombo(Combo instance);
    partial void InsertMemberType(MemberType instance);
    partial void UpdateMemberType(MemberType instance);
    partial void DeleteMemberType(MemberType instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertOrderStockOut(OrderStockOut instance);
    partial void UpdateOrderStockOut(OrderStockOut instance);
    partial void DeleteOrderStockOut(OrderStockOut instance);
    partial void InsertPan(Pan instance);
    partial void UpdatePan(Pan instance);
    partial void DeletePan(Pan instance);
    partial void InsertGoodsCat(GoodsCat instance);
    partial void UpdateGoodsCat(GoodsCat instance);
    partial void DeleteGoodsCat(GoodsCat instance);
    partial void InsertProvider(Provider instance);
    partial void UpdateProvider(Provider instance);
    partial void DeleteProvider(Provider instance);
    partial void InsertProviderPays(ProviderPays instance);
    partial void UpdateProviderPays(ProviderPays instance);
    partial void DeleteProviderPays(ProviderPays instance);
    partial void InsertCustomerPays(CustomerPays instance);
    partial void UpdateCustomerPays(CustomerPays instance);
    partial void DeleteCustomerPays(CustomerPays instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertTechMsg(TechMsg instance);
    partial void UpdateTechMsg(TechMsg instance);
    partial void DeleteTechMsg(TechMsg instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertStockIn(StockIn instance);
    partial void UpdateStockIn(StockIn instance);
    partial void DeleteStockIn(StockIn instance);
    partial void InsertStockOut(StockOut instance);
    partial void UpdateStockOut(StockOut instance);
    partial void DeleteStockOut(StockOut instance);
    partial void InsertStorageList(StorageList instance);
    partial void UpdateStorageList(StorageList instance);
    partial void DeleteStorageList(StorageList instance);
    partial void InsertDepartmentLog(DepartmentLog instance);
    partial void UpdateDepartmentLog(DepartmentLog instance);
    partial void DeleteDepartmentLog(DepartmentLog instance);
    partial void InsertTechIndex(TechIndex instance);
    partial void UpdateTechIndex(TechIndex instance);
    partial void DeleteTechIndex(TechIndex instance);
    partial void InsertSeat(Seat instance);
    partial void UpdateSeat(Seat instance);
    partial void DeleteSeat(Seat instance);
    partial void InsertCardSale(CardSale instance);
    partial void UpdateCardSale(CardSale instance);
    partial void DeleteCardSale(CardSale instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertHisOrders(HisOrders instance);
    partial void UpdateHisOrders(HisOrders instance);
    partial void DeleteHisOrders(HisOrders instance);
    partial void InsertBigCombo(BigCombo instance);
    partial void UpdateBigCombo(BigCombo instance);
    partial void DeleteBigCombo(BigCombo instance);
    partial void InsertOptions(Options instance);
    partial void UpdateOptions(Options instance);
    partial void DeleteOptions(Options instance);
    partial void InsertGroupBuyPromotion(GroupBuyPromotion instance);
    partial void UpdateGroupBuyPromotion(GroupBuyPromotion instance);
    partial void DeleteGroupBuyPromotion(GroupBuyPromotion instance);
    partial void InsertAuthority(Authority instance);
    partial void UpdateAuthority(Authority instance);
    partial void DeleteAuthority(Authority instance);
    #endregion
		
		public BathDBDataContext() : 
				base(global::YouSoftBathGeneralClass.Properties.Settings.Default.BathDBConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BathDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Unit> Unit
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<CardInfo> CardInfo
		{
			get
			{
				return this.GetTable<CardInfo>();
			}
		}
		
		public System.Data.Linq.Table<CardPopSale> CardPopSale
		{
			get
			{
				return this.GetTable<CardPopSale>();
			}
		}
		
		public System.Data.Linq.Table<CashPrintTime> CashPrintTime
		{
			get
			{
				return this.GetTable<CashPrintTime>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<ExpenseType> ExpenseType
		{
			get
			{
				return this.GetTable<ExpenseType>();
			}
		}
		
		public System.Data.Linq.Table<PayMsg> PayMsg
		{
			get
			{
				return this.GetTable<PayMsg>();
			}
		}
		
		public System.Data.Linq.Table<ShoeMsg> ShoeMsg
		{
			get
			{
				return this.GetTable<ShoeMsg>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stock
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<GroupBuy> GroupBuy
		{
			get
			{
				return this.GetTable<GroupBuy>();
			}
		}
		
		public System.Data.Linq.Table<ChainStore> ChainStore
		{
			get
			{
				return this.GetTable<ChainStore>();
			}
		}
		
		public System.Data.Linq.Table<Operation> Operation
		{
			get
			{
				return this.GetTable<Operation>();
			}
		}
		
		public System.Data.Linq.Table<ClearTable> ClearTable
		{
			get
			{
				return this.GetTable<ClearTable>();
			}
		}
		
		public System.Data.Linq.Table<CardCharge> CardCharge
		{
			get
			{
				return this.GetTable<CardCharge>();
			}
		}
		
		public System.Data.Linq.Table<Coupon> Coupon
		{
			get
			{
				return this.GetTable<Coupon>();
			}
		}
		
		public System.Data.Linq.Table<WaiterItem> WaiterItem
		{
			get
			{
				return this.GetTable<WaiterItem>();
			}
		}
		
		public System.Data.Linq.Table<RoomWarn> RoomWarn
		{
			get
			{
				return this.GetTable<RoomWarn>();
			}
		}
		
		public System.Data.Linq.Table<TechReturn> TechReturn
		{
			get
			{
				return this.GetTable<TechReturn>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotion
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<Expense> Expense
		{
			get
			{
				return this.GetTable<Expense>();
			}
		}
		
		public System.Data.Linq.Table<MemberSetting> MemberSetting
		{
			get
			{
				return this.GetTable<MemberSetting>();
			}
		}
		
		public System.Data.Linq.Table<Account> Account
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<BarMsg> BarMsg
		{
			get
			{
				return this.GetTable<BarMsg>();
			}
		}
		
		public System.Data.Linq.Table<Room> Room
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<RoomCall> RoomCall
		{
			get
			{
				return this.GetTable<RoomCall>();
			}
		}
		
		public System.Data.Linq.Table<Catgory> Catgory
		{
			get
			{
				return this.GetTable<Catgory>();
			}
		}
		
		public System.Data.Linq.Table<SeatType> SeatType
		{
			get
			{
				return this.GetTable<SeatType>();
			}
		}
		
		public System.Data.Linq.Table<SystemIds> SystemIds
		{
			get
			{
				return this.GetTable<SystemIds>();
			}
		}
		
		public System.Data.Linq.Table<Combo> Combo
		{
			get
			{
				return this.GetTable<Combo>();
			}
		}
		
		public System.Data.Linq.Table<MemberType> MemberType
		{
			get
			{
				return this.GetTable<MemberType>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menu
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<OrderStockOut> OrderStockOut
		{
			get
			{
				return this.GetTable<OrderStockOut>();
			}
		}
		
		public System.Data.Linq.Table<Pan> Pan
		{
			get
			{
				return this.GetTable<Pan>();
			}
		}
		
		public System.Data.Linq.Table<GoodsCat> GoodsCat
		{
			get
			{
				return this.GetTable<GoodsCat>();
			}
		}
		
		public System.Data.Linq.Table<Provider> Provider
		{
			get
			{
				return this.GetTable<Provider>();
			}
		}
		
		public System.Data.Linq.Table<ProviderPays> ProviderPays
		{
			get
			{
				return this.GetTable<ProviderPays>();
			}
		}
		
		public System.Data.Linq.Table<CustomerPays> CustomerPays
		{
			get
			{
				return this.GetTable<CustomerPays>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<TechMsg> TechMsg
		{
			get
			{
				return this.GetTable<TechMsg>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Job> Job
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<StockIn> StockIn
		{
			get
			{
				return this.GetTable<StockIn>();
			}
		}
		
		public System.Data.Linq.Table<StockOut> StockOut
		{
			get
			{
				return this.GetTable<StockOut>();
			}
		}
		
		public System.Data.Linq.Table<StorageList> StorageList
		{
			get
			{
				return this.GetTable<StorageList>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentLog> DepartmentLog
		{
			get
			{
				return this.GetTable<DepartmentLog>();
			}
		}
		
		public System.Data.Linq.Table<TechIndex> TechIndex
		{
			get
			{
				return this.GetTable<TechIndex>();
			}
		}
		
		public System.Data.Linq.Table<Seat> Seat
		{
			get
			{
				return this.GetTable<Seat>();
			}
		}
		
		public System.Data.Linq.Table<CardSale> CardSale
		{
			get
			{
				return this.GetTable<CardSale>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<HisOrders> HisOrders
		{
			get
			{
				return this.GetTable<HisOrders>();
			}
		}
		
		public System.Data.Linq.Table<BigCombo> BigCombo
		{
			get
			{
				return this.GetTable<BigCombo>();
			}
		}
		
		public System.Data.Linq.Table<Options> Options
		{
			get
			{
				return this.GetTable<Options>();
			}
		}
		
		public System.Data.Linq.Table<GroupBuyPromotion> GroupBuyPromotion
		{
			get
			{
				return this.GetTable<GroupBuyPromotion>();
			}
		}
		
		public System.Data.Linq.Table<Authority> Authority
		{
			get
			{
				return this.GetTable<Authority>();
			}
		}
	}
	
	[Table(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CardInfo")]
	public partial class CardInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CI_CardNo;
		
		private string _CI_SystemICNo;
		
		private System.Nullable<int> _CI_CardTypeNo;
		
		private string _CI_Name;
		
		private string _CI_Sexno;
		
		private string _CI_Address;
		
		private string _CI_Telephone;
		
		private string _CI_Remark;
		
		private System.Nullable<System.DateTime> _CI_SendCardDate;
		
		private string _CI_SendCardOperator;
		
		private System.Nullable<decimal> _CI_DiscountRate;
		
		private System.Nullable<decimal> _CI_DiscountRatepos;
		
		private System.Nullable<decimal> _CI_Limitation;
		
		private System.Nullable<char> _CI_CardStateNo;
		
		private System.Nullable<System.DateTime> _CI_UsefulLife;
		
		private string _CI_SalesNo;
		
		private string _CI_Company;
		
		private string _CI_CardExplain;
		
		private bool _CI_IsLock;
		
		private string _CI_PaperNo;
		
		private string _CI_AccountNo;
		
		private string _CI_Password;
		
		private System.Nullable<decimal> _CI_Integral;
		
		private System.Data.Linq.Binary _CI_Photo;
		
		private string _CI_Station;
		
		private string _CI_ConsumeType;
		
		private System.Nullable<char> _CI_State;
		
		private System.Nullable<System.DateTime> _CI_CheckDate;
		
		private string _CI_CheckOperator;
		
		private bool _CI_SendFlag;
		
		private bool _CI_CheckFlag;
		
		private string _CI_CardAccountNo;
		
		private string _CI_EName;
		
		private System.Nullable<System.DateTime> _CI_Birthday;
		
		private string _CI_City;
		
		private string _CI_Professional;
		
		private string _CI_Religions;
		
		private string _CI_Special1;
		
		private System.Nullable<System.DateTime> _CI_SpecialDate1;
		
		private string _CI_VipNo;
		
		private string _CI_CardCode;
		
		private System.Nullable<int> _CI_CreditsUsed;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _state;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCI_CardNoChanging(string value);
    partial void OnCI_CardNoChanged();
    partial void OnCI_SystemICNoChanging(string value);
    partial void OnCI_SystemICNoChanged();
    partial void OnCI_CardTypeNoChanging(System.Nullable<int> value);
    partial void OnCI_CardTypeNoChanged();
    partial void OnCI_NameChanging(string value);
    partial void OnCI_NameChanged();
    partial void OnCI_SexnoChanging(string value);
    partial void OnCI_SexnoChanged();
    partial void OnCI_AddressChanging(string value);
    partial void OnCI_AddressChanged();
    partial void OnCI_TelephoneChanging(string value);
    partial void OnCI_TelephoneChanged();
    partial void OnCI_RemarkChanging(string value);
    partial void OnCI_RemarkChanged();
    partial void OnCI_SendCardDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCI_SendCardDateChanged();
    partial void OnCI_SendCardOperatorChanging(string value);
    partial void OnCI_SendCardOperatorChanged();
    partial void OnCI_DiscountRateChanging(System.Nullable<decimal> value);
    partial void OnCI_DiscountRateChanged();
    partial void OnCI_DiscountRateposChanging(System.Nullable<decimal> value);
    partial void OnCI_DiscountRateposChanged();
    partial void OnCI_LimitationChanging(System.Nullable<decimal> value);
    partial void OnCI_LimitationChanged();
    partial void OnCI_CardStateNoChanging(System.Nullable<char> value);
    partial void OnCI_CardStateNoChanged();
    partial void OnCI_UsefulLifeChanging(System.Nullable<System.DateTime> value);
    partial void OnCI_UsefulLifeChanged();
    partial void OnCI_SalesNoChanging(string value);
    partial void OnCI_SalesNoChanged();
    partial void OnCI_CompanyChanging(string value);
    partial void OnCI_CompanyChanged();
    partial void OnCI_CardExplainChanging(string value);
    partial void OnCI_CardExplainChanged();
    partial void OnCI_IsLockChanging(bool value);
    partial void OnCI_IsLockChanged();
    partial void OnCI_PaperNoChanging(string value);
    partial void OnCI_PaperNoChanged();
    partial void OnCI_AccountNoChanging(string value);
    partial void OnCI_AccountNoChanged();
    partial void OnCI_PasswordChanging(string value);
    partial void OnCI_PasswordChanged();
    partial void OnCI_IntegralChanging(System.Nullable<decimal> value);
    partial void OnCI_IntegralChanged();
    partial void OnCI_PhotoChanging(System.Data.Linq.Binary value);
    partial void OnCI_PhotoChanged();
    partial void OnCI_StationChanging(string value);
    partial void OnCI_StationChanged();
    partial void OnCI_ConsumeTypeChanging(string value);
    partial void OnCI_ConsumeTypeChanged();
    partial void OnCI_StateChanging(System.Nullable<char> value);
    partial void OnCI_StateChanged();
    partial void OnCI_CheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCI_CheckDateChanged();
    partial void OnCI_CheckOperatorChanging(string value);
    partial void OnCI_CheckOperatorChanged();
    partial void OnCI_SendFlagChanging(bool value);
    partial void OnCI_SendFlagChanged();
    partial void OnCI_CheckFlagChanging(bool value);
    partial void OnCI_CheckFlagChanged();
    partial void OnCI_CardAccountNoChanging(string value);
    partial void OnCI_CardAccountNoChanged();
    partial void OnCI_ENameChanging(string value);
    partial void OnCI_ENameChanged();
    partial void OnCI_BirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnCI_BirthdayChanged();
    partial void OnCI_CityChanging(string value);
    partial void OnCI_CityChanged();
    partial void OnCI_ProfessionalChanging(string value);
    partial void OnCI_ProfessionalChanged();
    partial void OnCI_ReligionsChanging(string value);
    partial void OnCI_ReligionsChanged();
    partial void OnCI_Special1Changing(string value);
    partial void OnCI_Special1Changed();
    partial void OnCI_SpecialDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnCI_SpecialDate1Changed();
    partial void OnCI_VipNoChanging(string value);
    partial void OnCI_VipNoChanged();
    partial void OnCI_CardCodeChanging(string value);
    partial void OnCI_CardCodeChanged();
    partial void OnCI_CreditsUsedChanging(System.Nullable<int> value);
    partial void OnCI_CreditsUsedChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    #endregion
		
		public CardInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_CI_CardNo", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CI_CardNo
		{
			get
			{
				return this._CI_CardNo;
			}
			set
			{
				if ((this._CI_CardNo != value))
				{
					this.OnCI_CardNoChanging(value);
					this.SendPropertyChanging();
					this._CI_CardNo = value;
					this.SendPropertyChanged("CI_CardNo");
					this.OnCI_CardNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_SystemICNo", DbType="VarChar(20)")]
		public string CI_SystemICNo
		{
			get
			{
				return this._CI_SystemICNo;
			}
			set
			{
				if ((this._CI_SystemICNo != value))
				{
					this.OnCI_SystemICNoChanging(value);
					this.SendPropertyChanging();
					this._CI_SystemICNo = value;
					this.SendPropertyChanged("CI_SystemICNo");
					this.OnCI_SystemICNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CardTypeNo", DbType="Int")]
		public System.Nullable<int> CI_CardTypeNo
		{
			get
			{
				return this._CI_CardTypeNo;
			}
			set
			{
				if ((this._CI_CardTypeNo != value))
				{
					this.OnCI_CardTypeNoChanging(value);
					this.SendPropertyChanging();
					this._CI_CardTypeNo = value;
					this.SendPropertyChanged("CI_CardTypeNo");
					this.OnCI_CardTypeNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Name", DbType="VarChar(20)")]
		public string CI_Name
		{
			get
			{
				return this._CI_Name;
			}
			set
			{
				if ((this._CI_Name != value))
				{
					this.OnCI_NameChanging(value);
					this.SendPropertyChanging();
					this._CI_Name = value;
					this.SendPropertyChanged("CI_Name");
					this.OnCI_NameChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Sexno", DbType="VarChar(4)")]
		public string CI_Sexno
		{
			get
			{
				return this._CI_Sexno;
			}
			set
			{
				if ((this._CI_Sexno != value))
				{
					this.OnCI_SexnoChanging(value);
					this.SendPropertyChanging();
					this._CI_Sexno = value;
					this.SendPropertyChanged("CI_Sexno");
					this.OnCI_SexnoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Address", DbType="VarChar(50)")]
		public string CI_Address
		{
			get
			{
				return this._CI_Address;
			}
			set
			{
				if ((this._CI_Address != value))
				{
					this.OnCI_AddressChanging(value);
					this.SendPropertyChanging();
					this._CI_Address = value;
					this.SendPropertyChanged("CI_Address");
					this.OnCI_AddressChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Telephone", DbType="VarChar(30)")]
		public string CI_Telephone
		{
			get
			{
				return this._CI_Telephone;
			}
			set
			{
				if ((this._CI_Telephone != value))
				{
					this.OnCI_TelephoneChanging(value);
					this.SendPropertyChanging();
					this._CI_Telephone = value;
					this.SendPropertyChanged("CI_Telephone");
					this.OnCI_TelephoneChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Remark", DbType="VarChar(200)")]
		public string CI_Remark
		{
			get
			{
				return this._CI_Remark;
			}
			set
			{
				if ((this._CI_Remark != value))
				{
					this.OnCI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._CI_Remark = value;
					this.SendPropertyChanged("CI_Remark");
					this.OnCI_RemarkChanged();
				}
			}
		}
		
		[Column(Storage="_CI_SendCardDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CI_SendCardDate
		{
			get
			{
				return this._CI_SendCardDate;
			}
			set
			{
				if ((this._CI_SendCardDate != value))
				{
					this.OnCI_SendCardDateChanging(value);
					this.SendPropertyChanging();
					this._CI_SendCardDate = value;
					this.SendPropertyChanged("CI_SendCardDate");
					this.OnCI_SendCardDateChanged();
				}
			}
		}
		
		[Column(Storage="_CI_SendCardOperator", DbType="VarChar(6)")]
		public string CI_SendCardOperator
		{
			get
			{
				return this._CI_SendCardOperator;
			}
			set
			{
				if ((this._CI_SendCardOperator != value))
				{
					this.OnCI_SendCardOperatorChanging(value);
					this.SendPropertyChanging();
					this._CI_SendCardOperator = value;
					this.SendPropertyChanged("CI_SendCardOperator");
					this.OnCI_SendCardOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_CI_DiscountRate", DbType="Decimal(3,2)")]
		public System.Nullable<decimal> CI_DiscountRate
		{
			get
			{
				return this._CI_DiscountRate;
			}
			set
			{
				if ((this._CI_DiscountRate != value))
				{
					this.OnCI_DiscountRateChanging(value);
					this.SendPropertyChanging();
					this._CI_DiscountRate = value;
					this.SendPropertyChanged("CI_DiscountRate");
					this.OnCI_DiscountRateChanged();
				}
			}
		}
		
		[Column(Storage="_CI_DiscountRatepos", DbType="Decimal(3,2)")]
		public System.Nullable<decimal> CI_DiscountRatepos
		{
			get
			{
				return this._CI_DiscountRatepos;
			}
			set
			{
				if ((this._CI_DiscountRatepos != value))
				{
					this.OnCI_DiscountRateposChanging(value);
					this.SendPropertyChanging();
					this._CI_DiscountRatepos = value;
					this.SendPropertyChanged("CI_DiscountRatepos");
					this.OnCI_DiscountRateposChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Limitation", DbType="Money")]
		public System.Nullable<decimal> CI_Limitation
		{
			get
			{
				return this._CI_Limitation;
			}
			set
			{
				if ((this._CI_Limitation != value))
				{
					this.OnCI_LimitationChanging(value);
					this.SendPropertyChanging();
					this._CI_Limitation = value;
					this.SendPropertyChanged("CI_Limitation");
					this.OnCI_LimitationChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CardStateNo", DbType="VarChar(1)")]
		public System.Nullable<char> CI_CardStateNo
		{
			get
			{
				return this._CI_CardStateNo;
			}
			set
			{
				if ((this._CI_CardStateNo != value))
				{
					this.OnCI_CardStateNoChanging(value);
					this.SendPropertyChanging();
					this._CI_CardStateNo = value;
					this.SendPropertyChanged("CI_CardStateNo");
					this.OnCI_CardStateNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_UsefulLife", DbType="DateTime")]
		public System.Nullable<System.DateTime> CI_UsefulLife
		{
			get
			{
				return this._CI_UsefulLife;
			}
			set
			{
				if ((this._CI_UsefulLife != value))
				{
					this.OnCI_UsefulLifeChanging(value);
					this.SendPropertyChanging();
					this._CI_UsefulLife = value;
					this.SendPropertyChanged("CI_UsefulLife");
					this.OnCI_UsefulLifeChanged();
				}
			}
		}
		
		[Column(Storage="_CI_SalesNo", DbType="VarChar(3)")]
		public string CI_SalesNo
		{
			get
			{
				return this._CI_SalesNo;
			}
			set
			{
				if ((this._CI_SalesNo != value))
				{
					this.OnCI_SalesNoChanging(value);
					this.SendPropertyChanging();
					this._CI_SalesNo = value;
					this.SendPropertyChanged("CI_SalesNo");
					this.OnCI_SalesNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Company", DbType="VarChar(50)")]
		public string CI_Company
		{
			get
			{
				return this._CI_Company;
			}
			set
			{
				if ((this._CI_Company != value))
				{
					this.OnCI_CompanyChanging(value);
					this.SendPropertyChanging();
					this._CI_Company = value;
					this.SendPropertyChanged("CI_Company");
					this.OnCI_CompanyChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CardExplain", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string CI_CardExplain
		{
			get
			{
				return this._CI_CardExplain;
			}
			set
			{
				if ((this._CI_CardExplain != value))
				{
					this.OnCI_CardExplainChanging(value);
					this.SendPropertyChanging();
					this._CI_CardExplain = value;
					this.SendPropertyChanged("CI_CardExplain");
					this.OnCI_CardExplainChanged();
				}
			}
		}
		
		[Column(Storage="_CI_IsLock", DbType="Bit NOT NULL")]
		public bool CI_IsLock
		{
			get
			{
				return this._CI_IsLock;
			}
			set
			{
				if ((this._CI_IsLock != value))
				{
					this.OnCI_IsLockChanging(value);
					this.SendPropertyChanging();
					this._CI_IsLock = value;
					this.SendPropertyChanged("CI_IsLock");
					this.OnCI_IsLockChanged();
				}
			}
		}
		
		[Column(Storage="_CI_PaperNo", DbType="VarChar(18)")]
		public string CI_PaperNo
		{
			get
			{
				return this._CI_PaperNo;
			}
			set
			{
				if ((this._CI_PaperNo != value))
				{
					this.OnCI_PaperNoChanging(value);
					this.SendPropertyChanging();
					this._CI_PaperNo = value;
					this.SendPropertyChanged("CI_PaperNo");
					this.OnCI_PaperNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_AccountNo", DbType="VarChar(10)")]
		public string CI_AccountNo
		{
			get
			{
				return this._CI_AccountNo;
			}
			set
			{
				if ((this._CI_AccountNo != value))
				{
					this.OnCI_AccountNoChanging(value);
					this.SendPropertyChanging();
					this._CI_AccountNo = value;
					this.SendPropertyChanged("CI_AccountNo");
					this.OnCI_AccountNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Password", DbType="VarChar(20)")]
		public string CI_Password
		{
			get
			{
				return this._CI_Password;
			}
			set
			{
				if ((this._CI_Password != value))
				{
					this.OnCI_PasswordChanging(value);
					this.SendPropertyChanging();
					this._CI_Password = value;
					this.SendPropertyChanged("CI_Password");
					this.OnCI_PasswordChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Integral", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> CI_Integral
		{
			get
			{
				return this._CI_Integral;
			}
			set
			{
				if ((this._CI_Integral != value))
				{
					this.OnCI_IntegralChanging(value);
					this.SendPropertyChanging();
					this._CI_Integral = value;
					this.SendPropertyChanged("CI_Integral");
					this.OnCI_IntegralChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CI_Photo
		{
			get
			{
				return this._CI_Photo;
			}
			set
			{
				if ((this._CI_Photo != value))
				{
					this.OnCI_PhotoChanging(value);
					this.SendPropertyChanging();
					this._CI_Photo = value;
					this.SendPropertyChanged("CI_Photo");
					this.OnCI_PhotoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Station", DbType="VarChar(10)")]
		public string CI_Station
		{
			get
			{
				return this._CI_Station;
			}
			set
			{
				if ((this._CI_Station != value))
				{
					this.OnCI_StationChanging(value);
					this.SendPropertyChanging();
					this._CI_Station = value;
					this.SendPropertyChanged("CI_Station");
					this.OnCI_StationChanged();
				}
			}
		}
		
		[Column(Storage="_CI_ConsumeType", DbType="VarChar(4)")]
		public string CI_ConsumeType
		{
			get
			{
				return this._CI_ConsumeType;
			}
			set
			{
				if ((this._CI_ConsumeType != value))
				{
					this.OnCI_ConsumeTypeChanging(value);
					this.SendPropertyChanging();
					this._CI_ConsumeType = value;
					this.SendPropertyChanged("CI_ConsumeType");
					this.OnCI_ConsumeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CI_State", DbType="VarChar(1)")]
		public System.Nullable<char> CI_State
		{
			get
			{
				return this._CI_State;
			}
			set
			{
				if ((this._CI_State != value))
				{
					this.OnCI_StateChanging(value);
					this.SendPropertyChanging();
					this._CI_State = value;
					this.SendPropertyChanged("CI_State");
					this.OnCI_StateChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CI_CheckDate
		{
			get
			{
				return this._CI_CheckDate;
			}
			set
			{
				if ((this._CI_CheckDate != value))
				{
					this.OnCI_CheckDateChanging(value);
					this.SendPropertyChanging();
					this._CI_CheckDate = value;
					this.SendPropertyChanged("CI_CheckDate");
					this.OnCI_CheckDateChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CheckOperator", DbType="VarChar(16)")]
		public string CI_CheckOperator
		{
			get
			{
				return this._CI_CheckOperator;
			}
			set
			{
				if ((this._CI_CheckOperator != value))
				{
					this.OnCI_CheckOperatorChanging(value);
					this.SendPropertyChanging();
					this._CI_CheckOperator = value;
					this.SendPropertyChanged("CI_CheckOperator");
					this.OnCI_CheckOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_CI_SendFlag", DbType="Bit NOT NULL")]
		public bool CI_SendFlag
		{
			get
			{
				return this._CI_SendFlag;
			}
			set
			{
				if ((this._CI_SendFlag != value))
				{
					this.OnCI_SendFlagChanging(value);
					this.SendPropertyChanging();
					this._CI_SendFlag = value;
					this.SendPropertyChanged("CI_SendFlag");
					this.OnCI_SendFlagChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CheckFlag", DbType="Bit NOT NULL")]
		public bool CI_CheckFlag
		{
			get
			{
				return this._CI_CheckFlag;
			}
			set
			{
				if ((this._CI_CheckFlag != value))
				{
					this.OnCI_CheckFlagChanging(value);
					this.SendPropertyChanging();
					this._CI_CheckFlag = value;
					this.SendPropertyChanged("CI_CheckFlag");
					this.OnCI_CheckFlagChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CardAccountNo", DbType="VarChar(10)")]
		public string CI_CardAccountNo
		{
			get
			{
				return this._CI_CardAccountNo;
			}
			set
			{
				if ((this._CI_CardAccountNo != value))
				{
					this.OnCI_CardAccountNoChanging(value);
					this.SendPropertyChanging();
					this._CI_CardAccountNo = value;
					this.SendPropertyChanged("CI_CardAccountNo");
					this.OnCI_CardAccountNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_EName", DbType="VarChar(20)")]
		public string CI_EName
		{
			get
			{
				return this._CI_EName;
			}
			set
			{
				if ((this._CI_EName != value))
				{
					this.OnCI_ENameChanging(value);
					this.SendPropertyChanging();
					this._CI_EName = value;
					this.SendPropertyChanged("CI_EName");
					this.OnCI_ENameChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> CI_Birthday
		{
			get
			{
				return this._CI_Birthday;
			}
			set
			{
				if ((this._CI_Birthday != value))
				{
					this.OnCI_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._CI_Birthday = value;
					this.SendPropertyChanged("CI_Birthday");
					this.OnCI_BirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_CI_City", DbType="VarChar(20)")]
		public string CI_City
		{
			get
			{
				return this._CI_City;
			}
			set
			{
				if ((this._CI_City != value))
				{
					this.OnCI_CityChanging(value);
					this.SendPropertyChanging();
					this._CI_City = value;
					this.SendPropertyChanged("CI_City");
					this.OnCI_CityChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Professional", DbType="VarChar(6)")]
		public string CI_Professional
		{
			get
			{
				return this._CI_Professional;
			}
			set
			{
				if ((this._CI_Professional != value))
				{
					this.OnCI_ProfessionalChanging(value);
					this.SendPropertyChanging();
					this._CI_Professional = value;
					this.SendPropertyChanged("CI_Professional");
					this.OnCI_ProfessionalChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Religions", DbType="VarChar(3)")]
		public string CI_Religions
		{
			get
			{
				return this._CI_Religions;
			}
			set
			{
				if ((this._CI_Religions != value))
				{
					this.OnCI_ReligionsChanging(value);
					this.SendPropertyChanging();
					this._CI_Religions = value;
					this.SendPropertyChanged("CI_Religions");
					this.OnCI_ReligionsChanged();
				}
			}
		}
		
		[Column(Storage="_CI_Special1", DbType="VarChar(20)")]
		public string CI_Special1
		{
			get
			{
				return this._CI_Special1;
			}
			set
			{
				if ((this._CI_Special1 != value))
				{
					this.OnCI_Special1Changing(value);
					this.SendPropertyChanging();
					this._CI_Special1 = value;
					this.SendPropertyChanged("CI_Special1");
					this.OnCI_Special1Changed();
				}
			}
		}
		
		[Column(Storage="_CI_SpecialDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> CI_SpecialDate1
		{
			get
			{
				return this._CI_SpecialDate1;
			}
			set
			{
				if ((this._CI_SpecialDate1 != value))
				{
					this.OnCI_SpecialDate1Changing(value);
					this.SendPropertyChanging();
					this._CI_SpecialDate1 = value;
					this.SendPropertyChanged("CI_SpecialDate1");
					this.OnCI_SpecialDate1Changed();
				}
			}
		}
		
		[Column(Storage="_CI_VipNo", DbType="VarChar(10)")]
		public string CI_VipNo
		{
			get
			{
				return this._CI_VipNo;
			}
			set
			{
				if ((this._CI_VipNo != value))
				{
					this.OnCI_VipNoChanging(value);
					this.SendPropertyChanging();
					this._CI_VipNo = value;
					this.SendPropertyChanged("CI_VipNo");
					this.OnCI_VipNoChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CardCode", DbType="VarChar(3)")]
		public string CI_CardCode
		{
			get
			{
				return this._CI_CardCode;
			}
			set
			{
				if ((this._CI_CardCode != value))
				{
					this.OnCI_CardCodeChanging(value);
					this.SendPropertyChanging();
					this._CI_CardCode = value;
					this.SendPropertyChanged("CI_CardCode");
					this.OnCI_CardCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CI_CreditsUsed", DbType="Int")]
		public System.Nullable<int> CI_CreditsUsed
		{
			get
			{
				return this._CI_CreditsUsed;
			}
			set
			{
				if ((this._CI_CreditsUsed != value))
				{
					this.OnCI_CreditsUsedChanging(value);
					this.SendPropertyChanging();
					this._CI_CreditsUsed = value;
					this.SendPropertyChanged("CI_CreditsUsed");
					this.OnCI_CreditsUsedChanged();
				}
			}
		}
		
		[Column(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_state", DbType="VarChar(20)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CardPopSale")]
	public partial class CardPopSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _mimMoney;
		
		private System.Nullable<int> _saleMoney;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmimMoneyChanging(System.Nullable<int> value);
    partial void OnmimMoneyChanged();
    partial void OnsaleMoneyChanging(System.Nullable<int> value);
    partial void OnsaleMoneyChanged();
    #endregion
		
		public CardPopSale()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_mimMoney", DbType="Int")]
		public System.Nullable<int> mimMoney
		{
			get
			{
				return this._mimMoney;
			}
			set
			{
				if ((this._mimMoney != value))
				{
					this.OnmimMoneyChanging(value);
					this.SendPropertyChanging();
					this._mimMoney = value;
					this.SendPropertyChanged("mimMoney");
					this.OnmimMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_saleMoney", DbType="Int")]
		public System.Nullable<int> saleMoney
		{
			get
			{
				return this._saleMoney;
			}
			set
			{
				if ((this._saleMoney != value))
				{
					this.OnsaleMoneyChanging(value);
					this.SendPropertyChanging();
					this._saleMoney = value;
					this.SendPropertyChanged("saleMoney");
					this.OnsaleMoneyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CashPrintTime")]
	public partial class CashPrintTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _macAdd;
		
		private System.DateTime _time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmacAddChanging(string value);
    partial void OnmacAddChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    #endregion
		
		public CashPrintTime()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_macAdd", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string macAdd
		{
			get
			{
				return this._macAdd;
			}
			set
			{
				if ((this._macAdd != value))
				{
					this.OnmacAddChanging(value);
					this.SendPropertyChanging();
					this._macAdd = value;
					this.SendPropertyChanged("macAdd");
					this.OnmacAddChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _contact;
		
		private string _address;
		
		private string _phone;
		
		private string _mobile;
		
		private string _fax;
		
		private string _qq;
		
		private string _email;
		
		private System.Nullable<double> _money;
		
		private System.DateTime _registerDate;
		
		private string _mainBusiness;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnqqChanging(string value);
    partial void OnqqChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmoneyChanging(System.Nullable<double> value);
    partial void OnmoneyChanged();
    partial void OnregisterDateChanging(System.DateTime value);
    partial void OnregisterDateChanged();
    partial void OnmainBusinessChanging(string value);
    partial void OnmainBusinessChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_contact", DbType="NVarChar(MAX)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[Column(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="NVarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[Column(Storage="_mobile", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[Column(Storage="_fax", DbType="NVarChar(MAX)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[Column(Storage="_qq", DbType="NVarChar(MAX)")]
		public string qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnqqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("qq");
					this.OnqqChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="NVarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float")]
		public System.Nullable<double> money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this.OnregisterDateChanging(value);
					this.SendPropertyChanging();
					this._registerDate = value;
					this.SendPropertyChanged("registerDate");
					this.OnregisterDateChanged();
				}
			}
		}
		
		[Column(Storage="_mainBusiness", DbType="NVarChar(MAX)")]
		public string mainBusiness
		{
			get
			{
				return this._mainBusiness;
			}
			set
			{
				if ((this._mainBusiness != value))
				{
					this.OnmainBusinessChanging(value);
					this.SendPropertyChanging();
					this._mainBusiness = value;
					this.SendPropertyChanged("mainBusiness");
					this.OnmainBusinessChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ExpenseType")]
	public partial class ExpenseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ExpenseType()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PayMsg")]
	public partial class PayMsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _systemId;
		
		private string _ip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    #endregion
		
		public PayMsg()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)")]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_ip", DbType="NVarChar(MAX)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ShoeMsg")]
	public partial class ShoeMsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _text;
		
		private string _payEmployee;
		
		private System.DateTime _payTime;
		
		private bool _processed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnpayTimeChanging(System.DateTime value);
    partial void OnpayTimeChanged();
    partial void OnprocessedChanging(bool value);
    partial void OnprocessedChanged();
    #endregion
		
		public ShoeMsg()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="DateTime NOT NULL")]
		public System.DateTime payTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnpayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("payTime");
					this.OnpayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_processed", DbType="Bit NOT NULL")]
		public bool processed
		{
			get
			{
				return this._processed;
			}
			set
			{
				if ((this._processed != value))
				{
					this.OnprocessedChanging(value);
					this.SendPropertyChanging();
					this._processed = value;
					this.SendPropertyChanged("processed");
					this.OnprocessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Stock")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _note;
		
		private string _phone;
		
		private string _ips;
		
		private System.Nullable<bool> _main;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnipsChanging(string value);
    partial void OnipsChanged();
    partial void OnmainChanging(System.Nullable<bool> value);
    partial void OnmainChanged();
    #endregion
		
		public Stock()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="NVarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[Column(Storage="_ips", DbType="NVarChar(MAX)")]
		public string ips
		{
			get
			{
				return this._ips;
			}
			set
			{
				if ((this._ips != value))
				{
					this.OnipsChanging(value);
					this.SendPropertyChanging();
					this._ips = value;
					this.SendPropertyChanged("ips");
					this.OnipsChanged();
				}
			}
		}
		
		[Column(Storage="_main", DbType="Bit")]
		public System.Nullable<bool> main
		{
			get
			{
				return this._main;
			}
			set
			{
				if ((this._main != value))
				{
					this.OnmainChanging(value);
					this.SendPropertyChanging();
					this._main = value;
					this.SendPropertyChanged("main");
					this.OnmainChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GroupBuy")]
	public partial class GroupBuy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private double _money;
		
		private System.DateTime _issueDate;
		
		private System.Nullable<System.DateTime> _expireDate;
		
		private string _issueTransactor;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmoneyChanging(double value);
    partial void OnmoneyChanged();
    partial void OnissueDateChanging(System.DateTime value);
    partial void OnissueDateChanged();
    partial void OnexpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpireDateChanged();
    partial void OnissueTransactorChanging(string value);
    partial void OnissueTransactorChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public GroupBuy()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float NOT NULL")]
		public double money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_issueDate", DbType="DateTime NOT NULL")]
		public System.DateTime issueDate
		{
			get
			{
				return this._issueDate;
			}
			set
			{
				if ((this._issueDate != value))
				{
					this.OnissueDateChanging(value);
					this.SendPropertyChanging();
					this._issueDate = value;
					this.SendPropertyChanged("issueDate");
					this.OnissueDateChanged();
				}
			}
		}
		
		[Column(Storage="_expireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[Column(Storage="_issueTransactor", DbType="NVarChar(MAX)")]
		public string issueTransactor
		{
			get
			{
				return this._issueTransactor;
			}
			set
			{
				if ((this._issueTransactor != value))
				{
					this.OnissueTransactorChanging(value);
					this.SendPropertyChanging();
					this._issueTransactor = value;
					this.SendPropertyChanged("issueTransactor");
					this.OnissueTransactorChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ChainStore")]
	public partial class ChainStore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _ip;
		
		private string _address;
		
		private string _phone;
		
		private string _manager;
		
		private string _mobile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnmanagerChanging(string value);
    partial void OnmanagerChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    #endregion
		
		public ChainStore()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_ip", DbType="VarChar(16)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[Column(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="NVarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[Column(Storage="_manager", DbType="NVarChar(MAX)")]
		public string manager
		{
			get
			{
				return this._manager;
			}
			set
			{
				if ((this._manager != value))
				{
					this.OnmanagerChanging(value);
					this.SendPropertyChanging();
					this._manager = value;
					this.SendPropertyChanged("manager");
					this.OnmanagerChanged();
				}
			}
		}
		
		[Column(Storage="_mobile", DbType="NVarChar(MAX)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Operation")]
	public partial class Operation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _seat;
		
		private string _openEmployee;
		
		private System.Nullable<System.DateTime> _openTime;
		
		private string _employee;
		
		private string _explain;
		
		private System.Nullable<System.DateTime> _opTime;
		
		private string _note1;
		
		private string _note2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnopenEmployeeChanging(string value);
    partial void OnopenEmployeeChanged();
    partial void OnopenTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnopenTimeChanged();
    partial void OnemployeeChanging(string value);
    partial void OnemployeeChanged();
    partial void OnexplainChanging(string value);
    partial void OnexplainChanged();
    partial void OnopTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnopTimeChanged();
    partial void Onnote1Changing(string value);
    partial void Onnote1Changed();
    partial void Onnote2Changing(string value);
    partial void Onnote2Changed();
    #endregion
		
		public Operation()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_openEmployee", DbType="NVarChar(MAX)")]
		public string openEmployee
		{
			get
			{
				return this._openEmployee;
			}
			set
			{
				if ((this._openEmployee != value))
				{
					this.OnopenEmployeeChanging(value);
					this.SendPropertyChanging();
					this._openEmployee = value;
					this.SendPropertyChanged("openEmployee");
					this.OnopenEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_openTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> openTime
		{
			get
			{
				return this._openTime;
			}
			set
			{
				if ((this._openTime != value))
				{
					this.OnopenTimeChanging(value);
					this.SendPropertyChanging();
					this._openTime = value;
					this.SendPropertyChanged("openTime");
					this.OnopenTimeChanged();
				}
			}
		}
		
		[Column(Storage="_employee", DbType="NVarChar(MAX)")]
		public string employee
		{
			get
			{
				return this._employee;
			}
			set
			{
				if ((this._employee != value))
				{
					this.OnemployeeChanging(value);
					this.SendPropertyChanging();
					this._employee = value;
					this.SendPropertyChanged("employee");
					this.OnemployeeChanged();
				}
			}
		}
		
		[Column(Storage="_explain", DbType="NVarChar(MAX)")]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this.OnexplainChanging(value);
					this.SendPropertyChanging();
					this._explain = value;
					this.SendPropertyChanged("explain");
					this.OnexplainChanged();
				}
			}
		}
		
		[Column(Storage="_opTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> opTime
		{
			get
			{
				return this._opTime;
			}
			set
			{
				if ((this._opTime != value))
				{
					this.OnopTimeChanging(value);
					this.SendPropertyChanging();
					this._opTime = value;
					this.SendPropertyChanged("opTime");
					this.OnopTimeChanged();
				}
			}
		}
		
		[Column(Storage="_note1", DbType="NVarChar(MAX)")]
		public string note1
		{
			get
			{
				return this._note1;
			}
			set
			{
				if ((this._note1 != value))
				{
					this.Onnote1Changing(value);
					this.SendPropertyChanging();
					this._note1 = value;
					this.SendPropertyChanged("note1");
					this.Onnote1Changed();
				}
			}
		}
		
		[Column(Storage="_note2", DbType="NVarChar(MAX)")]
		public string note2
		{
			get
			{
				return this._note2;
			}
			set
			{
				if ((this._note2 != value))
				{
					this.Onnote2Changing(value);
					this.SendPropertyChanging();
					this._note2 = value;
					this.SendPropertyChanged("note2");
					this.Onnote2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ClearTable")]
	public partial class ClearTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _clearTime;
		
		private System.Nullable<bool> _proceeded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnclearTimeChanging(System.DateTime value);
    partial void OnclearTimeChanged();
    partial void OnproceededChanging(System.Nullable<bool> value);
    partial void OnproceededChanged();
    #endregion
		
		public ClearTable()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_clearTime", DbType="DateTime NOT NULL")]
		public System.DateTime clearTime
		{
			get
			{
				return this._clearTime;
			}
			set
			{
				if ((this._clearTime != value))
				{
					this.OnclearTimeChanging(value);
					this.SendPropertyChanging();
					this._clearTime = value;
					this.SendPropertyChanged("clearTime");
					this.OnclearTimeChanged();
				}
			}
		}
		
		[Column(Storage="_proceeded", DbType="Bit")]
		public System.Nullable<bool> proceeded
		{
			get
			{
				return this._proceeded;
			}
			set
			{
				if ((this._proceeded != value))
				{
					this.OnproceededChanging(value);
					this.SendPropertyChanging();
					this._proceeded = value;
					this.SendPropertyChanged("proceeded");
					this.OnproceededChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CardCharge")]
	public partial class CardCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CC_Id;
		
		private System.Nullable<char> _CC_State;
		
		private string _CC_CardNo;
		
		private string _CC_DepartmentNo;
		
		private string _CC_TableNo;
		
		private string _CC_AccountNo;
		
		private string _CC_ItemNo;
		
		private string _CC_ItemExplain;
		
		private System.Nullable<double> _CC_BeginSum;
		
		private System.Nullable<double> _CC_DebitSum;
		
		private System.Nullable<double> _CC_LenderSum;
		
		private string _CC_InputOperator;
		
		private System.Nullable<System.DateTime> _CC_InputDate;
		
		private string _CC_OutOperator;
		
		private System.Nullable<System.DateTime> _CC_OutTime;
		
		private string _CC_ChangeOperator;
		
		private System.Nullable<System.DateTime> _CC_ChangeDate;
		
		private string _CC_OldCardNo;
		
		private string _CC_DataType;
		
		private System.Nullable<System.DateTime> _CC_AuditDate;
		
		private string _CC_CheckoutNo;
		
		private System.Nullable<bool> _CC_SendFlag;
		
		private string _CC_CheckOperator;
		
		private System.Nullable<System.DateTime> _CC_CheckTime;
		
		private System.Nullable<bool> _CC_CheckFlag;
		
		private string _CC_Station;
		
		private System.Nullable<double> _expense;
		
		private string _systemId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCC_IdChanging(int value);
    partial void OnCC_IdChanged();
    partial void OnCC_StateChanging(System.Nullable<char> value);
    partial void OnCC_StateChanged();
    partial void OnCC_CardNoChanging(string value);
    partial void OnCC_CardNoChanged();
    partial void OnCC_DepartmentNoChanging(string value);
    partial void OnCC_DepartmentNoChanged();
    partial void OnCC_TableNoChanging(string value);
    partial void OnCC_TableNoChanged();
    partial void OnCC_AccountNoChanging(string value);
    partial void OnCC_AccountNoChanged();
    partial void OnCC_ItemNoChanging(string value);
    partial void OnCC_ItemNoChanged();
    partial void OnCC_ItemExplainChanging(string value);
    partial void OnCC_ItemExplainChanged();
    partial void OnCC_BeginSumChanging(System.Nullable<double> value);
    partial void OnCC_BeginSumChanged();
    partial void OnCC_DebitSumChanging(System.Nullable<double> value);
    partial void OnCC_DebitSumChanged();
    partial void OnCC_LenderSumChanging(System.Nullable<double> value);
    partial void OnCC_LenderSumChanged();
    partial void OnCC_InputOperatorChanging(string value);
    partial void OnCC_InputOperatorChanged();
    partial void OnCC_InputDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCC_InputDateChanged();
    partial void OnCC_OutOperatorChanging(string value);
    partial void OnCC_OutOperatorChanged();
    partial void OnCC_OutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCC_OutTimeChanged();
    partial void OnCC_ChangeOperatorChanging(string value);
    partial void OnCC_ChangeOperatorChanged();
    partial void OnCC_ChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCC_ChangeDateChanged();
    partial void OnCC_OldCardNoChanging(string value);
    partial void OnCC_OldCardNoChanged();
    partial void OnCC_DataTypeChanging(string value);
    partial void OnCC_DataTypeChanged();
    partial void OnCC_AuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCC_AuditDateChanged();
    partial void OnCC_CheckoutNoChanging(string value);
    partial void OnCC_CheckoutNoChanged();
    partial void OnCC_SendFlagChanging(System.Nullable<bool> value);
    partial void OnCC_SendFlagChanged();
    partial void OnCC_CheckOperatorChanging(string value);
    partial void OnCC_CheckOperatorChanged();
    partial void OnCC_CheckTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCC_CheckTimeChanged();
    partial void OnCC_CheckFlagChanging(System.Nullable<bool> value);
    partial void OnCC_CheckFlagChanged();
    partial void OnCC_StationChanging(string value);
    partial void OnCC_StationChanged();
    partial void OnexpenseChanging(System.Nullable<double> value);
    partial void OnexpenseChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    #endregion
		
		public CardCharge()
		{
			OnCreated();
		}
		
		[Column(Storage="_CC_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CC_Id
		{
			get
			{
				return this._CC_Id;
			}
			set
			{
				if ((this._CC_Id != value))
				{
					this.OnCC_IdChanging(value);
					this.SendPropertyChanging();
					this._CC_Id = value;
					this.SendPropertyChanged("CC_Id");
					this.OnCC_IdChanged();
				}
			}
		}
		
		[Column(Storage="_CC_State", DbType="VarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<char> CC_State
		{
			get
			{
				return this._CC_State;
			}
			set
			{
				if ((this._CC_State != value))
				{
					this.OnCC_StateChanging(value);
					this.SendPropertyChanging();
					this._CC_State = value;
					this.SendPropertyChanged("CC_State");
					this.OnCC_StateChanged();
				}
			}
		}
		
		[Column(Storage="_CC_CardNo", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string CC_CardNo
		{
			get
			{
				return this._CC_CardNo;
			}
			set
			{
				if ((this._CC_CardNo != value))
				{
					this.OnCC_CardNoChanging(value);
					this.SendPropertyChanging();
					this._CC_CardNo = value;
					this.SendPropertyChanged("CC_CardNo");
					this.OnCC_CardNoChanged();
				}
			}
		}
		
		[Column(Storage="_CC_DepartmentNo", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string CC_DepartmentNo
		{
			get
			{
				return this._CC_DepartmentNo;
			}
			set
			{
				if ((this._CC_DepartmentNo != value))
				{
					this.OnCC_DepartmentNoChanging(value);
					this.SendPropertyChanging();
					this._CC_DepartmentNo = value;
					this.SendPropertyChanged("CC_DepartmentNo");
					this.OnCC_DepartmentNoChanged();
				}
			}
		}
		
		[Column(Storage="_CC_TableNo", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string CC_TableNo
		{
			get
			{
				return this._CC_TableNo;
			}
			set
			{
				if ((this._CC_TableNo != value))
				{
					this.OnCC_TableNoChanging(value);
					this.SendPropertyChanging();
					this._CC_TableNo = value;
					this.SendPropertyChanged("CC_TableNo");
					this.OnCC_TableNoChanged();
				}
			}
		}
		
		[Column(Storage="_CC_AccountNo", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CC_AccountNo
		{
			get
			{
				return this._CC_AccountNo;
			}
			set
			{
				if ((this._CC_AccountNo != value))
				{
					this.OnCC_AccountNoChanging(value);
					this.SendPropertyChanging();
					this._CC_AccountNo = value;
					this.SendPropertyChanged("CC_AccountNo");
					this.OnCC_AccountNoChanged();
				}
			}
		}
		
		[Column(Storage="_CC_ItemNo", DbType="VarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string CC_ItemNo
		{
			get
			{
				return this._CC_ItemNo;
			}
			set
			{
				if ((this._CC_ItemNo != value))
				{
					this.OnCC_ItemNoChanging(value);
					this.SendPropertyChanging();
					this._CC_ItemNo = value;
					this.SendPropertyChanged("CC_ItemNo");
					this.OnCC_ItemNoChanged();
				}
			}
		}
		
		[Column(Storage="_CC_ItemExplain", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string CC_ItemExplain
		{
			get
			{
				return this._CC_ItemExplain;
			}
			set
			{
				if ((this._CC_ItemExplain != value))
				{
					this.OnCC_ItemExplainChanging(value);
					this.SendPropertyChanging();
					this._CC_ItemExplain = value;
					this.SendPropertyChanged("CC_ItemExplain");
					this.OnCC_ItemExplainChanged();
				}
			}
		}
		
		[Column(Storage="_CC_BeginSum", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> CC_BeginSum
		{
			get
			{
				return this._CC_BeginSum;
			}
			set
			{
				if ((this._CC_BeginSum != value))
				{
					this.OnCC_BeginSumChanging(value);
					this.SendPropertyChanging();
					this._CC_BeginSum = value;
					this.SendPropertyChanged("CC_BeginSum");
					this.OnCC_BeginSumChanged();
				}
			}
		}
		
		[Column(Storage="_CC_DebitSum", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> CC_DebitSum
		{
			get
			{
				return this._CC_DebitSum;
			}
			set
			{
				if ((this._CC_DebitSum != value))
				{
					this.OnCC_DebitSumChanging(value);
					this.SendPropertyChanging();
					this._CC_DebitSum = value;
					this.SendPropertyChanged("CC_DebitSum");
					this.OnCC_DebitSumChanged();
				}
			}
		}
		
		[Column(Storage="_CC_LenderSum", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> CC_LenderSum
		{
			get
			{
				return this._CC_LenderSum;
			}
			set
			{
				if ((this._CC_LenderSum != value))
				{
					this.OnCC_LenderSumChanging(value);
					this.SendPropertyChanging();
					this._CC_LenderSum = value;
					this.SendPropertyChanged("CC_LenderSum");
					this.OnCC_LenderSumChanged();
				}
			}
		}
		
		[Column(Storage="_CC_InputOperator", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string CC_InputOperator
		{
			get
			{
				return this._CC_InputOperator;
			}
			set
			{
				if ((this._CC_InputOperator != value))
				{
					this.OnCC_InputOperatorChanging(value);
					this.SendPropertyChanging();
					this._CC_InputOperator = value;
					this.SendPropertyChanged("CC_InputOperator");
					this.OnCC_InputOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_CC_InputDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CC_InputDate
		{
			get
			{
				return this._CC_InputDate;
			}
			set
			{
				if ((this._CC_InputDate != value))
				{
					this.OnCC_InputDateChanging(value);
					this.SendPropertyChanging();
					this._CC_InputDate = value;
					this.SendPropertyChanged("CC_InputDate");
					this.OnCC_InputDateChanged();
				}
			}
		}
		
		[Column(Storage="_CC_OutOperator", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string CC_OutOperator
		{
			get
			{
				return this._CC_OutOperator;
			}
			set
			{
				if ((this._CC_OutOperator != value))
				{
					this.OnCC_OutOperatorChanging(value);
					this.SendPropertyChanging();
					this._CC_OutOperator = value;
					this.SendPropertyChanged("CC_OutOperator");
					this.OnCC_OutOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_CC_OutTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CC_OutTime
		{
			get
			{
				return this._CC_OutTime;
			}
			set
			{
				if ((this._CC_OutTime != value))
				{
					this.OnCC_OutTimeChanging(value);
					this.SendPropertyChanging();
					this._CC_OutTime = value;
					this.SendPropertyChanged("CC_OutTime");
					this.OnCC_OutTimeChanged();
				}
			}
		}
		
		[Column(Storage="_CC_ChangeOperator", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string CC_ChangeOperator
		{
			get
			{
				return this._CC_ChangeOperator;
			}
			set
			{
				if ((this._CC_ChangeOperator != value))
				{
					this.OnCC_ChangeOperatorChanging(value);
					this.SendPropertyChanging();
					this._CC_ChangeOperator = value;
					this.SendPropertyChanged("CC_ChangeOperator");
					this.OnCC_ChangeOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_CC_ChangeDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CC_ChangeDate
		{
			get
			{
				return this._CC_ChangeDate;
			}
			set
			{
				if ((this._CC_ChangeDate != value))
				{
					this.OnCC_ChangeDateChanging(value);
					this.SendPropertyChanging();
					this._CC_ChangeDate = value;
					this.SendPropertyChanged("CC_ChangeDate");
					this.OnCC_ChangeDateChanged();
				}
			}
		}
		
		[Column(Storage="_CC_OldCardNo", DbType="VarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string CC_OldCardNo
		{
			get
			{
				return this._CC_OldCardNo;
			}
			set
			{
				if ((this._CC_OldCardNo != value))
				{
					this.OnCC_OldCardNoChanging(value);
					this.SendPropertyChanging();
					this._CC_OldCardNo = value;
					this.SendPropertyChanged("CC_OldCardNo");
					this.OnCC_OldCardNoChanged();
				}
			}
		}
		
		[Column(Storage="_CC_DataType", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CC_DataType
		{
			get
			{
				return this._CC_DataType;
			}
			set
			{
				if ((this._CC_DataType != value))
				{
					this.OnCC_DataTypeChanging(value);
					this.SendPropertyChanging();
					this._CC_DataType = value;
					this.SendPropertyChanged("CC_DataType");
					this.OnCC_DataTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CC_AuditDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CC_AuditDate
		{
			get
			{
				return this._CC_AuditDate;
			}
			set
			{
				if ((this._CC_AuditDate != value))
				{
					this.OnCC_AuditDateChanging(value);
					this.SendPropertyChanging();
					this._CC_AuditDate = value;
					this.SendPropertyChanged("CC_AuditDate");
					this.OnCC_AuditDateChanged();
				}
			}
		}
		
		[Column(Storage="_CC_CheckoutNo", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string CC_CheckoutNo
		{
			get
			{
				return this._CC_CheckoutNo;
			}
			set
			{
				if ((this._CC_CheckoutNo != value))
				{
					this.OnCC_CheckoutNoChanging(value);
					this.SendPropertyChanging();
					this._CC_CheckoutNo = value;
					this.SendPropertyChanged("CC_CheckoutNo");
					this.OnCC_CheckoutNoChanged();
				}
			}
		}
		
		[Column(Storage="_CC_SendFlag", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> CC_SendFlag
		{
			get
			{
				return this._CC_SendFlag;
			}
			set
			{
				if ((this._CC_SendFlag != value))
				{
					this.OnCC_SendFlagChanging(value);
					this.SendPropertyChanging();
					this._CC_SendFlag = value;
					this.SendPropertyChanged("CC_SendFlag");
					this.OnCC_SendFlagChanged();
				}
			}
		}
		
		[Column(Storage="_CC_CheckOperator", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string CC_CheckOperator
		{
			get
			{
				return this._CC_CheckOperator;
			}
			set
			{
				if ((this._CC_CheckOperator != value))
				{
					this.OnCC_CheckOperatorChanging(value);
					this.SendPropertyChanging();
					this._CC_CheckOperator = value;
					this.SendPropertyChanged("CC_CheckOperator");
					this.OnCC_CheckOperatorChanged();
				}
			}
		}
		
		[Column(Storage="_CC_CheckTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CC_CheckTime
		{
			get
			{
				return this._CC_CheckTime;
			}
			set
			{
				if ((this._CC_CheckTime != value))
				{
					this.OnCC_CheckTimeChanging(value);
					this.SendPropertyChanging();
					this._CC_CheckTime = value;
					this.SendPropertyChanged("CC_CheckTime");
					this.OnCC_CheckTimeChanged();
				}
			}
		}
		
		[Column(Storage="_CC_CheckFlag", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> CC_CheckFlag
		{
			get
			{
				return this._CC_CheckFlag;
			}
			set
			{
				if ((this._CC_CheckFlag != value))
				{
					this.OnCC_CheckFlagChanging(value);
					this.SendPropertyChanging();
					this._CC_CheckFlag = value;
					this.SendPropertyChanged("CC_CheckFlag");
					this.OnCC_CheckFlagChanged();
				}
			}
		}
		
		[Column(Storage="_CC_Station", DbType="VarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string CC_Station
		{
			get
			{
				return this._CC_Station;
			}
			set
			{
				if ((this._CC_Station != value))
				{
					this.OnCC_StationChanging(value);
					this.SendPropertyChanging();
					this._CC_Station = value;
					this.SendPropertyChanged("CC_Station");
					this.OnCC_StationChanged();
				}
			}
		}
		
		[Column(Storage="_expense", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> expense
		{
			get
			{
				return this._expense;
			}
			set
			{
				if ((this._expense != value))
				{
					this.OnexpenseChanging(value);
					this.SendPropertyChanging();
					this._expense = value;
					this.SendPropertyChanged("expense");
					this.OnexpenseChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Coupon")]
	public partial class Coupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkey;
		
		private string _id;
		
		private string _name;
		
		private double _money;
		
		private System.Nullable<int> _menuId;
		
		private System.DateTime _issueDate;
		
		private System.DateTime _expireDate;
		
		private string _issueTransator;
		
		private string _note;
		
		private System.Data.Linq.Binary _img;
		
		private System.Nullable<double> _minAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkeyChanging(int value);
    partial void OnpkeyChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmoneyChanging(double value);
    partial void OnmoneyChanged();
    partial void OnmenuIdChanging(System.Nullable<int> value);
    partial void OnmenuIdChanged();
    partial void OnissueDateChanging(System.DateTime value);
    partial void OnissueDateChanged();
    partial void OnexpireDateChanging(System.DateTime value);
    partial void OnexpireDateChanged();
    partial void OnissueTransatorChanging(string value);
    partial void OnissueTransatorChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnimgChanging(System.Data.Linq.Binary value);
    partial void OnimgChanged();
    partial void OnminAmountChanging(System.Nullable<double> value);
    partial void OnminAmountChanged();
    #endregion
		
		public Coupon()
		{
			OnCreated();
		}
		
		[Column(Storage="_pkey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkey
		{
			get
			{
				return this._pkey;
			}
			set
			{
				if ((this._pkey != value))
				{
					this.OnpkeyChanging(value);
					this.SendPropertyChanging();
					this._pkey = value;
					this.SendPropertyChanged("pkey");
					this.OnpkeyChanged();
				}
			}
		}
		
		[Column(Storage="_id", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float NOT NULL")]
		public double money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_menuId", DbType="Int")]
		public System.Nullable<int> menuId
		{
			get
			{
				return this._menuId;
			}
			set
			{
				if ((this._menuId != value))
				{
					this.OnmenuIdChanging(value);
					this.SendPropertyChanging();
					this._menuId = value;
					this.SendPropertyChanged("menuId");
					this.OnmenuIdChanged();
				}
			}
		}
		
		[Column(Storage="_issueDate", DbType="DateTime NOT NULL")]
		public System.DateTime issueDate
		{
			get
			{
				return this._issueDate;
			}
			set
			{
				if ((this._issueDate != value))
				{
					this.OnissueDateChanging(value);
					this.SendPropertyChanging();
					this._issueDate = value;
					this.SendPropertyChanged("issueDate");
					this.OnissueDateChanged();
				}
			}
		}
		
		[Column(Storage="_expireDate", DbType="DateTime NOT NULL")]
		public System.DateTime expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[Column(Storage="_issueTransator", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string issueTransator
		{
			get
			{
				return this._issueTransator;
			}
			set
			{
				if ((this._issueTransator != value))
				{
					this.OnissueTransatorChanging(value);
					this.SendPropertyChanging();
					this._issueTransator = value;
					this.SendPropertyChanged("issueTransator");
					this.OnissueTransatorChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_img", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[Column(Storage="_minAmount", DbType="Float")]
		public System.Nullable<double> minAmount
		{
			get
			{
				return this._minAmount;
			}
			set
			{
				if ((this._minAmount != value))
				{
					this.OnminAmountChanging(value);
					this.SendPropertyChanging();
					this._minAmount = value;
					this.SendPropertyChanged("minAmount");
					this.OnminAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WaiterItem")]
	public partial class WaiterItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public WaiterItem()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RoomWarn")]
	public partial class RoomWarn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _msg;
		
		private string _room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    #endregion
		
		public RoomWarn()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Storage="_room", DbType="NVarChar(MAX)")]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TechReturn")]
	public partial class TechReturn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _techId;
		
		private System.Nullable<System.DateTime> _inputTime;
		
		private string _seatId;
		
		private string _roomId;
		
		private string _menu;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntechIdChanging(string value);
    partial void OntechIdChanged();
    partial void OninputTimeChanging(System.Nullable<System.DateTime> value);
    partial void OninputTimeChanged();
    partial void OnseatIdChanging(string value);
    partial void OnseatIdChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public TechReturn()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_techId", DbType="NVarChar(MAX)")]
		public string techId
		{
			get
			{
				return this._techId;
			}
			set
			{
				if ((this._techId != value))
				{
					this.OntechIdChanging(value);
					this.SendPropertyChanging();
					this._techId = value;
					this.SendPropertyChanged("techId");
					this.OntechIdChanged();
				}
			}
		}
		
		[Column(Storage="_inputTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> inputTime
		{
			get
			{
				return this._inputTime;
			}
			set
			{
				if ((this._inputTime != value))
				{
					this.OninputTimeChanging(value);
					this.SendPropertyChanging();
					this._inputTime = value;
					this.SendPropertyChanged("inputTime");
					this.OninputTimeChanged();
				}
			}
		}
		
		[Column(Storage="_seatId", DbType="NVarChar(MAX)")]
		public string seatId
		{
			get
			{
				return this._seatId;
			}
			set
			{
				if ((this._seatId != value))
				{
					this.OnseatIdChanging(value);
					this.SendPropertyChanging();
					this._seatId = value;
					this.SendPropertyChanged("seatId");
					this.OnseatIdChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Promotion")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private bool _status;
		
		private string _menuIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OnmenuIdsChanging(string value);
    partial void OnmenuIdsChanged();
    #endregion
		
		public Promotion()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_menuIds", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string menuIds
		{
			get
			{
				return this._menuIds;
			}
			set
			{
				if ((this._menuIds != value))
				{
					this.OnmenuIdsChanging(value);
					this.SendPropertyChanging();
					this._menuIds = value;
					this.SendPropertyChanged("menuIds");
					this.OnmenuIdsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Expense")]
	public partial class Expense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _typeId;
		
		private double _money;
		
		private string _payType;
		
		private System.DateTime _inputDate;
		
		private System.DateTime _expenseDate;
		
		private string _toWhom;
		
		private string _transactor;
		
		private string _tableMaker;
		
		private string _checker;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntypeIdChanging(System.Nullable<int> value);
    partial void OntypeIdChanged();
    partial void OnmoneyChanging(double value);
    partial void OnmoneyChanged();
    partial void OnpayTypeChanging(string value);
    partial void OnpayTypeChanged();
    partial void OninputDateChanging(System.DateTime value);
    partial void OninputDateChanged();
    partial void OnexpenseDateChanging(System.DateTime value);
    partial void OnexpenseDateChanged();
    partial void OntoWhomChanging(string value);
    partial void OntoWhomChanged();
    partial void OntransactorChanging(string value);
    partial void OntransactorChanged();
    partial void OntableMakerChanging(string value);
    partial void OntableMakerChanged();
    partial void OncheckerChanging(string value);
    partial void OncheckerChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public Expense()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_typeId", DbType="Int")]
		public System.Nullable<int> typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float NOT NULL")]
		public double money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_payType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string payType
		{
			get
			{
				return this._payType;
			}
			set
			{
				if ((this._payType != value))
				{
					this.OnpayTypeChanging(value);
					this.SendPropertyChanging();
					this._payType = value;
					this.SendPropertyChanged("payType");
					this.OnpayTypeChanged();
				}
			}
		}
		
		[Column(Storage="_inputDate", DbType="DateTime NOT NULL")]
		public System.DateTime inputDate
		{
			get
			{
				return this._inputDate;
			}
			set
			{
				if ((this._inputDate != value))
				{
					this.OninputDateChanging(value);
					this.SendPropertyChanging();
					this._inputDate = value;
					this.SendPropertyChanged("inputDate");
					this.OninputDateChanged();
				}
			}
		}
		
		[Column(Storage="_expenseDate", DbType="DateTime NOT NULL")]
		public System.DateTime expenseDate
		{
			get
			{
				return this._expenseDate;
			}
			set
			{
				if ((this._expenseDate != value))
				{
					this.OnexpenseDateChanging(value);
					this.SendPropertyChanging();
					this._expenseDate = value;
					this.SendPropertyChanged("expenseDate");
					this.OnexpenseDateChanged();
				}
			}
		}
		
		[Column(Storage="_toWhom", DbType="NVarChar(MAX)")]
		public string toWhom
		{
			get
			{
				return this._toWhom;
			}
			set
			{
				if ((this._toWhom != value))
				{
					this.OntoWhomChanging(value);
					this.SendPropertyChanging();
					this._toWhom = value;
					this.SendPropertyChanged("toWhom");
					this.OntoWhomChanged();
				}
			}
		}
		
		[Column(Storage="_transactor", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string transactor
		{
			get
			{
				return this._transactor;
			}
			set
			{
				if ((this._transactor != value))
				{
					this.OntransactorChanging(value);
					this.SendPropertyChanging();
					this._transactor = value;
					this.SendPropertyChanged("transactor");
					this.OntransactorChanged();
				}
			}
		}
		
		[Column(Storage="_tableMaker", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tableMaker
		{
			get
			{
				return this._tableMaker;
			}
			set
			{
				if ((this._tableMaker != value))
				{
					this.OntableMakerChanging(value);
					this.SendPropertyChanging();
					this._tableMaker = value;
					this.SendPropertyChanged("tableMaker");
					this.OntableMakerChanged();
				}
			}
		}
		
		[Column(Storage="_checker", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string checker
		{
			get
			{
				return this._checker;
			}
			set
			{
				if ((this._checker != value))
				{
					this.OncheckerChanging(value);
					this.SendPropertyChanging();
					this._checker = value;
					this.SendPropertyChanged("checker");
					this.OncheckerChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MemberSetting")]
	public partial class MemberSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _money;
		
		private string _cardType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmoneyChanging(System.Nullable<int> value);
    partial void OnmoneyChanged();
    partial void OncardTypeChanging(string value);
    partial void OncardTypeChanged();
    #endregion
		
		public MemberSetting()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Int")]
		public System.Nullable<int> money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_cardType", DbType="NVarChar(MAX)")]
		public string cardType
		{
			get
			{
				return this._cardType;
			}
			set
			{
				if ((this._cardType != value))
				{
					this.OncardTypeChanging(value);
					this.SendPropertyChanging();
					this._cardType = value;
					this.SendPropertyChanged("cardType");
					this.OncardTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _text;
		
		private string _systemId;
		
		private string _openTime;
		
		private string _openEmployee;
		
		private System.DateTime _payTime;
		
		private string _payEmployee;
		
		private string _name;
		
		private string _promotionMemberId;
		
		private System.Nullable<double> _promotionAmount;
		
		private string _memberId;
		
		private string _discountEmployee;
		
		private System.Nullable<double> _discount;
		
		private string _serverEmployee;
		
		private System.Nullable<double> _cash;
		
		private System.Nullable<double> _bankUnion;
		
		private System.Nullable<double> _creditCard;
		
		private System.Nullable<double> _coupon;
		
		private System.Nullable<double> _groupBuy;
		
		private System.Nullable<double> _zero;
		
		private System.Nullable<double> _server;
		
		private System.Nullable<double> _deducted;
		
		private System.Nullable<double> _changes;
		
		private System.Nullable<double> _wipeZero;
		
		private string _macAddress;
		
		private string _abandon;
		
		private System.Nullable<int> _departmentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnopenTimeChanging(string value);
    partial void OnopenTimeChanged();
    partial void OnopenEmployeeChanging(string value);
    partial void OnopenEmployeeChanged();
    partial void OnpayTimeChanging(System.DateTime value);
    partial void OnpayTimeChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpromotionMemberIdChanging(string value);
    partial void OnpromotionMemberIdChanged();
    partial void OnpromotionAmountChanging(System.Nullable<double> value);
    partial void OnpromotionAmountChanged();
    partial void OnmemberIdChanging(string value);
    partial void OnmemberIdChanged();
    partial void OndiscountEmployeeChanging(string value);
    partial void OndiscountEmployeeChanged();
    partial void OndiscountChanging(System.Nullable<double> value);
    partial void OndiscountChanged();
    partial void OnserverEmployeeChanging(string value);
    partial void OnserverEmployeeChanged();
    partial void OncashChanging(System.Nullable<double> value);
    partial void OncashChanged();
    partial void OnbankUnionChanging(System.Nullable<double> value);
    partial void OnbankUnionChanged();
    partial void OncreditCardChanging(System.Nullable<double> value);
    partial void OncreditCardChanged();
    partial void OncouponChanging(System.Nullable<double> value);
    partial void OncouponChanged();
    partial void OngroupBuyChanging(System.Nullable<double> value);
    partial void OngroupBuyChanged();
    partial void OnzeroChanging(System.Nullable<double> value);
    partial void OnzeroChanged();
    partial void OnserverChanging(System.Nullable<double> value);
    partial void OnserverChanged();
    partial void OndeductedChanging(System.Nullable<double> value);
    partial void OndeductedChanged();
    partial void OnchangesChanging(System.Nullable<double> value);
    partial void OnchangesChanged();
    partial void OnwipeZeroChanging(System.Nullable<double> value);
    partial void OnwipeZeroChanged();
    partial void OnmacAddressChanging(string value);
    partial void OnmacAddressChanged();
    partial void OnabandonChanging(string value);
    partial void OnabandonChanged();
    partial void OndepartmentIdChanging(System.Nullable<int> value);
    partial void OndepartmentIdChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_openTime", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string openTime
		{
			get
			{
				return this._openTime;
			}
			set
			{
				if ((this._openTime != value))
				{
					this.OnopenTimeChanging(value);
					this.SendPropertyChanging();
					this._openTime = value;
					this.SendPropertyChanged("openTime");
					this.OnopenTimeChanged();
				}
			}
		}
		
		[Column(Storage="_openEmployee", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string openEmployee
		{
			get
			{
				return this._openEmployee;
			}
			set
			{
				if ((this._openEmployee != value))
				{
					this.OnopenEmployeeChanging(value);
					this.SendPropertyChanging();
					this._openEmployee = value;
					this.SendPropertyChanged("openEmployee");
					this.OnopenEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime payTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnpayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("payTime");
					this.OnpayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_promotionMemberId", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string promotionMemberId
		{
			get
			{
				return this._promotionMemberId;
			}
			set
			{
				if ((this._promotionMemberId != value))
				{
					this.OnpromotionMemberIdChanging(value);
					this.SendPropertyChanging();
					this._promotionMemberId = value;
					this.SendPropertyChanged("promotionMemberId");
					this.OnpromotionMemberIdChanged();
				}
			}
		}
		
		[Column(Storage="_promotionAmount", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> promotionAmount
		{
			get
			{
				return this._promotionAmount;
			}
			set
			{
				if ((this._promotionAmount != value))
				{
					this.OnpromotionAmountChanging(value);
					this.SendPropertyChanging();
					this._promotionAmount = value;
					this.SendPropertyChanged("promotionAmount");
					this.OnpromotionAmountChanged();
				}
			}
		}
		
		[Column(Storage="_memberId", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[Column(Storage="_discountEmployee", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string discountEmployee
		{
			get
			{
				return this._discountEmployee;
			}
			set
			{
				if ((this._discountEmployee != value))
				{
					this.OndiscountEmployeeChanging(value);
					this.SendPropertyChanging();
					this._discountEmployee = value;
					this.SendPropertyChanged("discountEmployee");
					this.OndiscountEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_discount", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[Column(Storage="_serverEmployee", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string serverEmployee
		{
			get
			{
				return this._serverEmployee;
			}
			set
			{
				if ((this._serverEmployee != value))
				{
					this.OnserverEmployeeChanging(value);
					this.SendPropertyChanging();
					this._serverEmployee = value;
					this.SendPropertyChanged("serverEmployee");
					this.OnserverEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_cash", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[Column(Storage="_bankUnion", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> bankUnion
		{
			get
			{
				return this._bankUnion;
			}
			set
			{
				if ((this._bankUnion != value))
				{
					this.OnbankUnionChanging(value);
					this.SendPropertyChanging();
					this._bankUnion = value;
					this.SendPropertyChanged("bankUnion");
					this.OnbankUnionChanged();
				}
			}
		}
		
		[Column(Storage="_creditCard", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> creditCard
		{
			get
			{
				return this._creditCard;
			}
			set
			{
				if ((this._creditCard != value))
				{
					this.OncreditCardChanging(value);
					this.SendPropertyChanging();
					this._creditCard = value;
					this.SendPropertyChanged("creditCard");
					this.OncreditCardChanged();
				}
			}
		}
		
		[Column(Storage="_coupon", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> coupon
		{
			get
			{
				return this._coupon;
			}
			set
			{
				if ((this._coupon != value))
				{
					this.OncouponChanging(value);
					this.SendPropertyChanging();
					this._coupon = value;
					this.SendPropertyChanged("coupon");
					this.OncouponChanged();
				}
			}
		}
		
		[Column(Storage="_groupBuy", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> groupBuy
		{
			get
			{
				return this._groupBuy;
			}
			set
			{
				if ((this._groupBuy != value))
				{
					this.OngroupBuyChanging(value);
					this.SendPropertyChanging();
					this._groupBuy = value;
					this.SendPropertyChanged("groupBuy");
					this.OngroupBuyChanged();
				}
			}
		}
		
		[Column(Storage="_zero", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> zero
		{
			get
			{
				return this._zero;
			}
			set
			{
				if ((this._zero != value))
				{
					this.OnzeroChanging(value);
					this.SendPropertyChanging();
					this._zero = value;
					this.SendPropertyChanged("zero");
					this.OnzeroChanged();
				}
			}
		}
		
		[Column(Storage="_server", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> server
		{
			get
			{
				return this._server;
			}
			set
			{
				if ((this._server != value))
				{
					this.OnserverChanging(value);
					this.SendPropertyChanging();
					this._server = value;
					this.SendPropertyChanged("server");
					this.OnserverChanged();
				}
			}
		}
		
		[Column(Storage="_deducted", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> deducted
		{
			get
			{
				return this._deducted;
			}
			set
			{
				if ((this._deducted != value))
				{
					this.OndeductedChanging(value);
					this.SendPropertyChanging();
					this._deducted = value;
					this.SendPropertyChanged("deducted");
					this.OndeductedChanged();
				}
			}
		}
		
		[Column(Storage="_changes", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> changes
		{
			get
			{
				return this._changes;
			}
			set
			{
				if ((this._changes != value))
				{
					this.OnchangesChanging(value);
					this.SendPropertyChanging();
					this._changes = value;
					this.SendPropertyChanged("changes");
					this.OnchangesChanged();
				}
			}
		}
		
		[Column(Storage="_wipeZero", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> wipeZero
		{
			get
			{
				return this._wipeZero;
			}
			set
			{
				if ((this._wipeZero != value))
				{
					this.OnwipeZeroChanging(value);
					this.SendPropertyChanging();
					this._wipeZero = value;
					this.SendPropertyChanged("wipeZero");
					this.OnwipeZeroChanged();
				}
			}
		}
		
		[Column(Storage="_macAddress", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string macAddress
		{
			get
			{
				return this._macAddress;
			}
			set
			{
				if ((this._macAddress != value))
				{
					this.OnmacAddressChanging(value);
					this.SendPropertyChanging();
					this._macAddress = value;
					this.SendPropertyChanged("macAddress");
					this.OnmacAddressChanged();
				}
			}
		}
		
		[Column(Storage="_abandon", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string abandon
		{
			get
			{
				return this._abandon;
			}
			set
			{
				if ((this._abandon != value))
				{
					this.OnabandonChanging(value);
					this.SendPropertyChanging();
					this._abandon = value;
					this.SendPropertyChanged("abandon");
					this.OnabandonChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OndepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("departmentId");
					this.OndepartmentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BarMsg")]
	public partial class BarMsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _roomId;
		
		private string _msg;
		
		private System.DateTime _time;
		
		private System.Nullable<bool> _read;
		
		private string _seatId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnreadChanging(System.Nullable<bool> value);
    partial void OnreadChanged();
    partial void OnseatIdChanging(string value);
    partial void OnseatIdChanged();
    #endregion
		
		public BarMsg()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[Column(Name="[read]", Storage="_read", DbType="Bit")]
		public System.Nullable<bool> read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[Column(Storage="_seatId", DbType="NVarChar(MAX)")]
		public string seatId
		{
			get
			{
				return this._seatId;
			}
			set
			{
				if ((this._seatId != value))
				{
					this.OnseatIdChanging(value);
					this.SendPropertyChanging();
					this._seatId = value;
					this.SendPropertyChanged("seatId");
					this.OnseatIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _population;
		
		private string _openTime;
		
		private string _seat;
		
		private string _systemId;
		
		private string _orderTime;
		
		private string _menu;
		
		private string _orderTechId;
		
		private string _techId;
		
		private string _startTime;
		
		private string _serverTime;
		
		private string _status;
		
		private string _note;
		
		private string _hintPlayed;
		
		private string _reserveId;
		
		private string _reserveTime;
		
		private string _selectId;
		
		private string _seatIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpopulationChanging(int value);
    partial void OnpopulationChanged();
    partial void OnopenTimeChanging(string value);
    partial void OnopenTimeChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnorderTimeChanging(string value);
    partial void OnorderTimeChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OnorderTechIdChanging(string value);
    partial void OnorderTechIdChanged();
    partial void OntechIdChanging(string value);
    partial void OntechIdChanged();
    partial void OnstartTimeChanging(string value);
    partial void OnstartTimeChanged();
    partial void OnserverTimeChanging(string value);
    partial void OnserverTimeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnhintPlayedChanging(string value);
    partial void OnhintPlayedChanged();
    partial void OnreserveIdChanging(string value);
    partial void OnreserveIdChanged();
    partial void OnreserveTimeChanging(string value);
    partial void OnreserveTimeChanged();
    partial void OnselectIdChanging(string value);
    partial void OnselectIdChanged();
    partial void OnseatIdsChanging(string value);
    partial void OnseatIdsChanged();
    #endregion
		
		public Room()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_population", DbType="Int NOT NULL")]
		public int population
		{
			get
			{
				return this._population;
			}
			set
			{
				if ((this._population != value))
				{
					this.OnpopulationChanging(value);
					this.SendPropertyChanging();
					this._population = value;
					this.SendPropertyChanged("population");
					this.OnpopulationChanged();
				}
			}
		}
		
		[Column(Storage="_openTime", DbType="NVarChar(MAX)")]
		public string openTime
		{
			get
			{
				return this._openTime;
			}
			set
			{
				if ((this._openTime != value))
				{
					this.OnopenTimeChanging(value);
					this.SendPropertyChanging();
					this._openTime = value;
					this.SendPropertyChanged("openTime");
					this.OnopenTimeChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)")]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_orderTime", DbType="NVarChar(MAX)")]
		public string orderTime
		{
			get
			{
				return this._orderTime;
			}
			set
			{
				if ((this._orderTime != value))
				{
					this.OnorderTimeChanging(value);
					this.SendPropertyChanging();
					this._orderTime = value;
					this.SendPropertyChanged("orderTime");
					this.OnorderTimeChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_orderTechId", DbType="NVarChar(MAX)")]
		public string orderTechId
		{
			get
			{
				return this._orderTechId;
			}
			set
			{
				if ((this._orderTechId != value))
				{
					this.OnorderTechIdChanging(value);
					this.SendPropertyChanging();
					this._orderTechId = value;
					this.SendPropertyChanged("orderTechId");
					this.OnorderTechIdChanged();
				}
			}
		}
		
		[Column(Storage="_techId", DbType="NVarChar(MAX)")]
		public string techId
		{
			get
			{
				return this._techId;
			}
			set
			{
				if ((this._techId != value))
				{
					this.OntechIdChanging(value);
					this.SendPropertyChanging();
					this._techId = value;
					this.SendPropertyChanged("techId");
					this.OntechIdChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="NVarChar(MAX)")]
		public string startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_serverTime", DbType="NVarChar(MAX)")]
		public string serverTime
		{
			get
			{
				return this._serverTime;
			}
			set
			{
				if ((this._serverTime != value))
				{
					this.OnserverTimeChanging(value);
					this.SendPropertyChanging();
					this._serverTime = value;
					this.SendPropertyChanged("serverTime");
					this.OnserverTimeChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_hintPlayed", DbType="NVarChar(MAX)")]
		public string hintPlayed
		{
			get
			{
				return this._hintPlayed;
			}
			set
			{
				if ((this._hintPlayed != value))
				{
					this.OnhintPlayedChanging(value);
					this.SendPropertyChanging();
					this._hintPlayed = value;
					this.SendPropertyChanged("hintPlayed");
					this.OnhintPlayedChanged();
				}
			}
		}
		
		[Column(Storage="_reserveId", DbType="NVarChar(MAX)")]
		public string reserveId
		{
			get
			{
				return this._reserveId;
			}
			set
			{
				if ((this._reserveId != value))
				{
					this.OnreserveIdChanging(value);
					this.SendPropertyChanging();
					this._reserveId = value;
					this.SendPropertyChanged("reserveId");
					this.OnreserveIdChanged();
				}
			}
		}
		
		[Column(Storage="_reserveTime", DbType="NVarChar(MAX)")]
		public string reserveTime
		{
			get
			{
				return this._reserveTime;
			}
			set
			{
				if ((this._reserveTime != value))
				{
					this.OnreserveTimeChanging(value);
					this.SendPropertyChanging();
					this._reserveTime = value;
					this.SendPropertyChanged("reserveTime");
					this.OnreserveTimeChanged();
				}
			}
		}
		
		[Column(Storage="_selectId", DbType="NVarChar(MAX)")]
		public string selectId
		{
			get
			{
				return this._selectId;
			}
			set
			{
				if ((this._selectId != value))
				{
					this.OnselectIdChanging(value);
					this.SendPropertyChanging();
					this._selectId = value;
					this.SendPropertyChanged("selectId");
					this.OnselectIdChanged();
				}
			}
		}
		
		[Column(Storage="_seatIds", DbType="NVarChar(MAX)")]
		public string seatIds
		{
			get
			{
				return this._seatIds;
			}
			set
			{
				if ((this._seatIds != value))
				{
					this.OnseatIdsChanging(value);
					this.SendPropertyChanging();
					this._seatIds = value;
					this.SendPropertyChanged("seatIds");
					this.OnseatIdsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RoomCall")]
	public partial class RoomCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _roomId;
		
		private string _msg;
		
		private bool _read;
		
		private string _seatId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnreadChanging(bool value);
    partial void OnreadChanged();
    partial void OnseatIdChanging(string value);
    partial void OnseatIdChanged();
    #endregion
		
		public RoomCall()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Name="[read]", Storage="_read", DbType="Bit NOT NULL")]
		public bool read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[Column(Storage="_seatId", DbType="NVarChar(MAX)")]
		public string seatId
		{
			get
			{
				return this._seatId;
			}
			set
			{
				if ((this._seatId != value))
				{
					this.OnseatIdChanging(value);
					this.SendPropertyChanging();
					this._seatId = value;
					this.SendPropertyChanged("seatId");
					this.OnseatIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Catgory")]
	public partial class Catgory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _kitchPrinterName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnkitchPrinterNameChanging(string value);
    partial void OnkitchPrinterNameChanged();
    #endregion
		
		public Catgory()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_kitchPrinterName", DbType="NVarChar(MAX)")]
		public string kitchPrinterName
		{
			get
			{
				return this._kitchPrinterName;
			}
			set
			{
				if ((this._kitchPrinterName != value))
				{
					this.OnkitchPrinterNameChanging(value);
					this.SendPropertyChanging();
					this._kitchPrinterName = value;
					this.SendPropertyChanged("kitchPrinterName");
					this.OnkitchPrinterNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SeatType")]
	public partial class SeatType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _population;
		
		private System.Nullable<int> _menuId;
		
		private string _department;
		
		private System.Nullable<bool> _depositeRequired;
		
		private System.Nullable<int> _depositeAmountMin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpopulationChanging(int value);
    partial void OnpopulationChanged();
    partial void OnmenuIdChanging(System.Nullable<int> value);
    partial void OnmenuIdChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    partial void OndepositeRequiredChanging(System.Nullable<bool> value);
    partial void OndepositeRequiredChanged();
    partial void OndepositeAmountMinChanging(System.Nullable<int> value);
    partial void OndepositeAmountMinChanged();
    #endregion
		
		public SeatType()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_population", DbType="Int NOT NULL")]
		public int population
		{
			get
			{
				return this._population;
			}
			set
			{
				if ((this._population != value))
				{
					this.OnpopulationChanging(value);
					this.SendPropertyChanging();
					this._population = value;
					this.SendPropertyChanged("population");
					this.OnpopulationChanged();
				}
			}
		}
		
		[Column(Storage="_menuId", DbType="Int")]
		public System.Nullable<int> menuId
		{
			get
			{
				return this._menuId;
			}
			set
			{
				if ((this._menuId != value))
				{
					this.OnmenuIdChanging(value);
					this.SendPropertyChanging();
					this._menuId = value;
					this.SendPropertyChanged("menuId");
					this.OnmenuIdChanged();
				}
			}
		}
		
		[Column(Storage="_department", DbType="NVarChar(MAX)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[Column(Storage="_depositeRequired", DbType="Bit")]
		public System.Nullable<bool> depositeRequired
		{
			get
			{
				return this._depositeRequired;
			}
			set
			{
				if ((this._depositeRequired != value))
				{
					this.OndepositeRequiredChanging(value);
					this.SendPropertyChanging();
					this._depositeRequired = value;
					this.SendPropertyChanged("depositeRequired");
					this.OndepositeRequiredChanged();
				}
			}
		}
		
		[Column(Storage="_depositeAmountMin", DbType="Int")]
		public System.Nullable<int> depositeAmountMin
		{
			get
			{
				return this._depositeAmountMin;
			}
			set
			{
				if ((this._depositeAmountMin != value))
				{
					this.OndepositeAmountMinChanging(value);
					this.SendPropertyChanging();
					this._depositeAmountMin = value;
					this.SendPropertyChanged("depositeAmountMin");
					this.OndepositeAmountMinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SystemIds")]
	public partial class SystemIds : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _systemId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    #endregion
		
		public SystemIds()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Combo")]
	public partial class Combo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private double _originPrice;
		
		private string _priceType;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<double> _freePrice;
		
		private System.Nullable<double> _expenseUpTo;
		
		private string _menuIds;
		
		private string _freeMenuIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoriginPriceChanging(double value);
    partial void OnoriginPriceChanged();
    partial void OnpriceTypeChanging(string value);
    partial void OnpriceTypeChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnfreePriceChanging(System.Nullable<double> value);
    partial void OnfreePriceChanged();
    partial void OnexpenseUpToChanging(System.Nullable<double> value);
    partial void OnexpenseUpToChanged();
    partial void OnmenuIdsChanging(string value);
    partial void OnmenuIdsChanged();
    partial void OnfreeMenuIdsChanging(string value);
    partial void OnfreeMenuIdsChanged();
    #endregion
		
		public Combo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_originPrice", DbType="Float NOT NULL")]
		public double originPrice
		{
			get
			{
				return this._originPrice;
			}
			set
			{
				if ((this._originPrice != value))
				{
					this.OnoriginPriceChanging(value);
					this.SendPropertyChanging();
					this._originPrice = value;
					this.SendPropertyChanged("originPrice");
					this.OnoriginPriceChanged();
				}
			}
		}
		
		[Column(Storage="_priceType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string priceType
		{
			get
			{
				return this._priceType;
			}
			set
			{
				if ((this._priceType != value))
				{
					this.OnpriceTypeChanging(value);
					this.SendPropertyChanging();
					this._priceType = value;
					this.SendPropertyChanged("priceType");
					this.OnpriceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_freePrice", DbType="Float")]
		public System.Nullable<double> freePrice
		{
			get
			{
				return this._freePrice;
			}
			set
			{
				if ((this._freePrice != value))
				{
					this.OnfreePriceChanging(value);
					this.SendPropertyChanging();
					this._freePrice = value;
					this.SendPropertyChanged("freePrice");
					this.OnfreePriceChanged();
				}
			}
		}
		
		[Column(Storage="_expenseUpTo", DbType="Float")]
		public System.Nullable<double> expenseUpTo
		{
			get
			{
				return this._expenseUpTo;
			}
			set
			{
				if ((this._expenseUpTo != value))
				{
					this.OnexpenseUpToChanging(value);
					this.SendPropertyChanging();
					this._expenseUpTo = value;
					this.SendPropertyChanged("expenseUpTo");
					this.OnexpenseUpToChanged();
				}
			}
		}
		
		[Column(Storage="_menuIds", DbType="NVarChar(MAX)")]
		public string menuIds
		{
			get
			{
				return this._menuIds;
			}
			set
			{
				if ((this._menuIds != value))
				{
					this.OnmenuIdsChanging(value);
					this.SendPropertyChanging();
					this._menuIds = value;
					this.SendPropertyChanged("menuIds");
					this.OnmenuIdsChanged();
				}
			}
		}
		
		[Column(Storage="_freeMenuIds", DbType="NVarChar(MAX)")]
		public string freeMenuIds
		{
			get
			{
				return this._freeMenuIds;
			}
			set
			{
				if ((this._freeMenuIds != value))
				{
					this.OnfreeMenuIdsChanging(value);
					this.SendPropertyChanging();
					this._freeMenuIds = value;
					this.SendPropertyChanged("freeMenuIds");
					this.OnfreeMenuIdsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MemberType")]
	public partial class MemberType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _timSpan;
		
		private System.Nullable<int> _times;
		
		private System.Nullable<double> _money;
		
		private System.Nullable<double> _maxOpenMoney;
		
		private System.Nullable<System.DateTime> _expireDate;
		
		private System.Nullable<int> _offerId;
		
		private bool _credits;
		
		private System.Nullable<bool> _smsAfterUsing;
		
		private System.Nullable<bool> _userOneTimeOneDay;
		
		private System.Nullable<bool> _LimitedTimesPerMonth;
		
		private System.Nullable<int> _TimesPerMonth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntimSpanChanging(string value);
    partial void OntimSpanChanged();
    partial void OntimesChanging(System.Nullable<int> value);
    partial void OntimesChanged();
    partial void OnmoneyChanging(System.Nullable<double> value);
    partial void OnmoneyChanged();
    partial void OnmaxOpenMoneyChanging(System.Nullable<double> value);
    partial void OnmaxOpenMoneyChanged();
    partial void OnexpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpireDateChanged();
    partial void OnofferIdChanging(System.Nullable<int> value);
    partial void OnofferIdChanged();
    partial void OncreditsChanging(bool value);
    partial void OncreditsChanged();
    partial void OnsmsAfterUsingChanging(System.Nullable<bool> value);
    partial void OnsmsAfterUsingChanged();
    partial void OnuserOneTimeOneDayChanging(System.Nullable<bool> value);
    partial void OnuserOneTimeOneDayChanged();
    partial void OnLimitedTimesPerMonthChanging(System.Nullable<bool> value);
    partial void OnLimitedTimesPerMonthChanged();
    partial void OnTimesPerMonthChanging(System.Nullable<int> value);
    partial void OnTimesPerMonthChanged();
    #endregion
		
		public MemberType()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_timSpan", DbType="NVarChar(MAX)")]
		public string timSpan
		{
			get
			{
				return this._timSpan;
			}
			set
			{
				if ((this._timSpan != value))
				{
					this.OntimSpanChanging(value);
					this.SendPropertyChanging();
					this._timSpan = value;
					this.SendPropertyChanged("timSpan");
					this.OntimSpanChanged();
				}
			}
		}
		
		[Column(Storage="_times", DbType="Int")]
		public System.Nullable<int> times
		{
			get
			{
				return this._times;
			}
			set
			{
				if ((this._times != value))
				{
					this.OntimesChanging(value);
					this.SendPropertyChanging();
					this._times = value;
					this.SendPropertyChanged("times");
					this.OntimesChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float")]
		public System.Nullable<double> money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_maxOpenMoney", DbType="Float")]
		public System.Nullable<double> maxOpenMoney
		{
			get
			{
				return this._maxOpenMoney;
			}
			set
			{
				if ((this._maxOpenMoney != value))
				{
					this.OnmaxOpenMoneyChanging(value);
					this.SendPropertyChanging();
					this._maxOpenMoney = value;
					this.SendPropertyChanged("maxOpenMoney");
					this.OnmaxOpenMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_expireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[Column(Storage="_offerId", DbType="Int")]
		public System.Nullable<int> offerId
		{
			get
			{
				return this._offerId;
			}
			set
			{
				if ((this._offerId != value))
				{
					this.OnofferIdChanging(value);
					this.SendPropertyChanging();
					this._offerId = value;
					this.SendPropertyChanged("offerId");
					this.OnofferIdChanged();
				}
			}
		}
		
		[Column(Storage="_credits", DbType="Bit NOT NULL")]
		public bool credits
		{
			get
			{
				return this._credits;
			}
			set
			{
				if ((this._credits != value))
				{
					this.OncreditsChanging(value);
					this.SendPropertyChanging();
					this._credits = value;
					this.SendPropertyChanged("credits");
					this.OncreditsChanged();
				}
			}
		}
		
		[Column(Storage="_smsAfterUsing", DbType="Bit")]
		public System.Nullable<bool> smsAfterUsing
		{
			get
			{
				return this._smsAfterUsing;
			}
			set
			{
				if ((this._smsAfterUsing != value))
				{
					this.OnsmsAfterUsingChanging(value);
					this.SendPropertyChanging();
					this._smsAfterUsing = value;
					this.SendPropertyChanged("smsAfterUsing");
					this.OnsmsAfterUsingChanged();
				}
			}
		}
		
		[Column(Storage="_userOneTimeOneDay", DbType="Bit")]
		public System.Nullable<bool> userOneTimeOneDay
		{
			get
			{
				return this._userOneTimeOneDay;
			}
			set
			{
				if ((this._userOneTimeOneDay != value))
				{
					this.OnuserOneTimeOneDayChanging(value);
					this.SendPropertyChanging();
					this._userOneTimeOneDay = value;
					this.SendPropertyChanged("userOneTimeOneDay");
					this.OnuserOneTimeOneDayChanged();
				}
			}
		}
		
		[Column(Storage="_LimitedTimesPerMonth", DbType="Bit")]
		public System.Nullable<bool> LimitedTimesPerMonth
		{
			get
			{
				return this._LimitedTimesPerMonth;
			}
			set
			{
				if ((this._LimitedTimesPerMonth != value))
				{
					this.OnLimitedTimesPerMonthChanging(value);
					this.SendPropertyChanging();
					this._LimitedTimesPerMonth = value;
					this.SendPropertyChanged("LimitedTimesPerMonth");
					this.OnLimitedTimesPerMonthChanged();
				}
			}
		}
		
		[Column(Storage="_TimesPerMonth", DbType="Int")]
		public System.Nullable<int> TimesPerMonth
		{
			get
			{
				return this._TimesPerMonth;
			}
			set
			{
				if ((this._TimesPerMonth != value))
				{
					this.OnTimesPerMonthChanging(value);
					this.SendPropertyChanging();
					this._TimesPerMonth = value;
					this.SendPropertyChanged("TimesPerMonth");
					this.OnTimesPerMonthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _catgoryId;
		
		private string _unit;
		
		private double _price;
		
		private bool _technician;
		
		private string _techRatioType;
		
		private System.Nullable<double> _onRatio;
		
		private System.Nullable<double> _orderRatio;
		
		private System.Nullable<int> _timeLimitHour;
		
		private System.Nullable<int> _timeLimitMiniute;
		
		private bool _addAutomatic;
		
		private string _addType;
		
		private System.Nullable<double> _addMoney;
		
		private string _note;
		
		private string _timeLimitType;
		
		private System.Nullable<bool> _waiter;
		
		private System.Nullable<int> _waiterRatioType;
		
		private System.Nullable<double> _waiterRatio;
		
		private string _techRatioCat;
		
		private string _ResourceExpense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncatgoryIdChanging(int value);
    partial void OncatgoryIdChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OntechnicianChanging(bool value);
    partial void OntechnicianChanged();
    partial void OntechRatioTypeChanging(string value);
    partial void OntechRatioTypeChanged();
    partial void OnonRatioChanging(System.Nullable<double> value);
    partial void OnonRatioChanged();
    partial void OnorderRatioChanging(System.Nullable<double> value);
    partial void OnorderRatioChanged();
    partial void OntimeLimitHourChanging(System.Nullable<int> value);
    partial void OntimeLimitHourChanged();
    partial void OntimeLimitMiniuteChanging(System.Nullable<int> value);
    partial void OntimeLimitMiniuteChanged();
    partial void OnaddAutomaticChanging(bool value);
    partial void OnaddAutomaticChanged();
    partial void OnaddTypeChanging(string value);
    partial void OnaddTypeChanged();
    partial void OnaddMoneyChanging(System.Nullable<double> value);
    partial void OnaddMoneyChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OntimeLimitTypeChanging(string value);
    partial void OntimeLimitTypeChanged();
    partial void OnwaiterChanging(System.Nullable<bool> value);
    partial void OnwaiterChanged();
    partial void OnwaiterRatioTypeChanging(System.Nullable<int> value);
    partial void OnwaiterRatioTypeChanged();
    partial void OnwaiterRatioChanging(System.Nullable<double> value);
    partial void OnwaiterRatioChanged();
    partial void OntechRatioCatChanging(string value);
    partial void OntechRatioCatChanged();
    partial void OnResourceExpenseChanging(string value);
    partial void OnResourceExpenseChanged();
    #endregion
		
		public Menu()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_catgoryId", DbType="Int NOT NULL")]
		public int catgoryId
		{
			get
			{
				return this._catgoryId;
			}
			set
			{
				if ((this._catgoryId != value))
				{
					this.OncatgoryIdChanging(value);
					this.SendPropertyChanging();
					this._catgoryId = value;
					this.SendPropertyChanged("catgoryId");
					this.OncatgoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_unit", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_technician", DbType="Bit NOT NULL")]
		public bool technician
		{
			get
			{
				return this._technician;
			}
			set
			{
				if ((this._technician != value))
				{
					this.OntechnicianChanging(value);
					this.SendPropertyChanging();
					this._technician = value;
					this.SendPropertyChanged("technician");
					this.OntechnicianChanged();
				}
			}
		}
		
		[Column(Storage="_techRatioType", DbType="NVarChar(MAX)")]
		public string techRatioType
		{
			get
			{
				return this._techRatioType;
			}
			set
			{
				if ((this._techRatioType != value))
				{
					this.OntechRatioTypeChanging(value);
					this.SendPropertyChanging();
					this._techRatioType = value;
					this.SendPropertyChanged("techRatioType");
					this.OntechRatioTypeChanged();
				}
			}
		}
		
		[Column(Storage="_onRatio", DbType="Float")]
		public System.Nullable<double> onRatio
		{
			get
			{
				return this._onRatio;
			}
			set
			{
				if ((this._onRatio != value))
				{
					this.OnonRatioChanging(value);
					this.SendPropertyChanging();
					this._onRatio = value;
					this.SendPropertyChanged("onRatio");
					this.OnonRatioChanged();
				}
			}
		}
		
		[Column(Storage="_orderRatio", DbType="Float")]
		public System.Nullable<double> orderRatio
		{
			get
			{
				return this._orderRatio;
			}
			set
			{
				if ((this._orderRatio != value))
				{
					this.OnorderRatioChanging(value);
					this.SendPropertyChanging();
					this._orderRatio = value;
					this.SendPropertyChanged("orderRatio");
					this.OnorderRatioChanged();
				}
			}
		}
		
		[Column(Storage="_timeLimitHour", DbType="Int")]
		public System.Nullable<int> timeLimitHour
		{
			get
			{
				return this._timeLimitHour;
			}
			set
			{
				if ((this._timeLimitHour != value))
				{
					this.OntimeLimitHourChanging(value);
					this.SendPropertyChanging();
					this._timeLimitHour = value;
					this.SendPropertyChanged("timeLimitHour");
					this.OntimeLimitHourChanged();
				}
			}
		}
		
		[Column(Storage="_timeLimitMiniute", DbType="Int")]
		public System.Nullable<int> timeLimitMiniute
		{
			get
			{
				return this._timeLimitMiniute;
			}
			set
			{
				if ((this._timeLimitMiniute != value))
				{
					this.OntimeLimitMiniuteChanging(value);
					this.SendPropertyChanging();
					this._timeLimitMiniute = value;
					this.SendPropertyChanged("timeLimitMiniute");
					this.OntimeLimitMiniuteChanged();
				}
			}
		}
		
		[Column(Storage="_addAutomatic", DbType="Bit NOT NULL")]
		public bool addAutomatic
		{
			get
			{
				return this._addAutomatic;
			}
			set
			{
				if ((this._addAutomatic != value))
				{
					this.OnaddAutomaticChanging(value);
					this.SendPropertyChanging();
					this._addAutomatic = value;
					this.SendPropertyChanged("addAutomatic");
					this.OnaddAutomaticChanged();
				}
			}
		}
		
		[Column(Storage="_addType", DbType="NVarChar(MAX)")]
		public string addType
		{
			get
			{
				return this._addType;
			}
			set
			{
				if ((this._addType != value))
				{
					this.OnaddTypeChanging(value);
					this.SendPropertyChanging();
					this._addType = value;
					this.SendPropertyChanged("addType");
					this.OnaddTypeChanged();
				}
			}
		}
		
		[Column(Storage="_addMoney", DbType="Float")]
		public System.Nullable<double> addMoney
		{
			get
			{
				return this._addMoney;
			}
			set
			{
				if ((this._addMoney != value))
				{
					this.OnaddMoneyChanging(value);
					this.SendPropertyChanging();
					this._addMoney = value;
					this.SendPropertyChanged("addMoney");
					this.OnaddMoneyChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_timeLimitType", DbType="NVarChar(MAX)")]
		public string timeLimitType
		{
			get
			{
				return this._timeLimitType;
			}
			set
			{
				if ((this._timeLimitType != value))
				{
					this.OntimeLimitTypeChanging(value);
					this.SendPropertyChanging();
					this._timeLimitType = value;
					this.SendPropertyChanged("timeLimitType");
					this.OntimeLimitTypeChanged();
				}
			}
		}
		
		[Column(Storage="_waiter", DbType="Bit")]
		public System.Nullable<bool> waiter
		{
			get
			{
				return this._waiter;
			}
			set
			{
				if ((this._waiter != value))
				{
					this.OnwaiterChanging(value);
					this.SendPropertyChanging();
					this._waiter = value;
					this.SendPropertyChanged("waiter");
					this.OnwaiterChanged();
				}
			}
		}
		
		[Column(Storage="_waiterRatioType", DbType="Int")]
		public System.Nullable<int> waiterRatioType
		{
			get
			{
				return this._waiterRatioType;
			}
			set
			{
				if ((this._waiterRatioType != value))
				{
					this.OnwaiterRatioTypeChanging(value);
					this.SendPropertyChanging();
					this._waiterRatioType = value;
					this.SendPropertyChanged("waiterRatioType");
					this.OnwaiterRatioTypeChanged();
				}
			}
		}
		
		[Column(Storage="_waiterRatio", DbType="Float")]
		public System.Nullable<double> waiterRatio
		{
			get
			{
				return this._waiterRatio;
			}
			set
			{
				if ((this._waiterRatio != value))
				{
					this.OnwaiterRatioChanging(value);
					this.SendPropertyChanging();
					this._waiterRatio = value;
					this.SendPropertyChanged("waiterRatio");
					this.OnwaiterRatioChanged();
				}
			}
		}
		
		[Column(Storage="_techRatioCat", DbType="NVarChar(MAX)")]
		public string techRatioCat
		{
			get
			{
				return this._techRatioCat;
			}
			set
			{
				if ((this._techRatioCat != value))
				{
					this.OntechRatioCatChanging(value);
					this.SendPropertyChanging();
					this._techRatioCat = value;
					this.SendPropertyChanged("techRatioCat");
					this.OntechRatioCatChanged();
				}
			}
		}
		
		[Column(Storage="_ResourceExpense", DbType="NVarChar(MAX)")]
		public string ResourceExpense
		{
			get
			{
				return this._ResourceExpense;
			}
			set
			{
				if ((this._ResourceExpense != value))
				{
					this.OnResourceExpenseChanging(value);
					this.SendPropertyChanging();
					this._ResourceExpense = value;
					this.SendPropertyChanged("ResourceExpense");
					this.OnResourceExpenseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OrderStockOut")]
	public partial class OrderStockOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _amount;
		
		private string _unit;
		
		private System.Nullable<int> _stockId;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _sales;
		
		private string _note;
		
		private System.Nullable<int> _orderId;
		
		private string _deleteEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnstockIdChanging(System.Nullable<int> value);
    partial void OnstockIdChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnsalesChanging(string value);
    partial void OnsalesChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnorderIdChanging(System.Nullable<int> value);
    partial void OnorderIdChanged();
    partial void OndeleteEmployeeChanging(string value);
    partial void OndeleteEmployeeChanged();
    #endregion
		
		public OrderStockOut()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[Column(Storage="_unit", DbType="NVarChar(MAX)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[Column(Storage="_stockId", DbType="Int")]
		public System.Nullable<int> stockId
		{
			get
			{
				return this._stockId;
			}
			set
			{
				if ((this._stockId != value))
				{
					this.OnstockIdChanging(value);
					this.SendPropertyChanging();
					this._stockId = value;
					this.SendPropertyChanged("stockId");
					this.OnstockIdChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_sales", DbType="NVarChar(MAX)")]
		public string sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				if ((this._sales != value))
				{
					this.OnsalesChanging(value);
					this.SendPropertyChanging();
					this._sales = value;
					this.SendPropertyChanged("sales");
					this.OnsalesChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_orderId", DbType="Int")]
		public System.Nullable<int> orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[Column(Storage="_deleteEmployee", DbType="NVarChar(MAX)")]
		public string deleteEmployee
		{
			get
			{
				return this._deleteEmployee;
			}
			set
			{
				if ((this._deleteEmployee != value))
				{
					this.OndeleteEmployeeChanging(value);
					this.SendPropertyChanging();
					this._deleteEmployee = value;
					this.SendPropertyChanged("deleteEmployee");
					this.OndeleteEmployeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Pan")]
	public partial class Pan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _amount;
		
		private System.Nullable<int> _stockId;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _paner;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void OnstockIdChanging(System.Nullable<int> value);
    partial void OnstockIdChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnpanerChanging(string value);
    partial void OnpanerChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public Pan()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[Column(Storage="_stockId", DbType="Int")]
		public System.Nullable<int> stockId
		{
			get
			{
				return this._stockId;
			}
			set
			{
				if ((this._stockId != value))
				{
					this.OnstockIdChanging(value);
					this.SendPropertyChanging();
					this._stockId = value;
					this.SendPropertyChanged("stockId");
					this.OnstockIdChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_paner", DbType="NVarChar(MAX)")]
		public string paner
		{
			get
			{
				return this._paner;
			}
			set
			{
				if ((this._paner != value))
				{
					this.OnpanerChanging(value);
					this.SendPropertyChanging();
					this._paner = value;
					this.SendPropertyChanged("paner");
					this.OnpanerChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GoodsCat")]
	public partial class GoodsCat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public GoodsCat()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Provider")]
	public partial class Provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _contactor;
		
		private string _tel;
		
		private string _mobile;
		
		private string _address;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncontactorChanging(string value);
    partial void OncontactorChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public Provider()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_contactor", DbType="NVarChar(MAX)")]
		public string contactor
		{
			get
			{
				return this._contactor;
			}
			set
			{
				if ((this._contactor != value))
				{
					this.OncontactorChanging(value);
					this.SendPropertyChanging();
					this._contactor = value;
					this.SendPropertyChanged("contactor");
					this.OncontactorChanged();
				}
			}
		}
		
		[Column(Storage="_tel", DbType="NVarChar(MAX)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[Column(Storage="_mobile", DbType="NVarChar(MAX)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[Column(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ProviderPays")]
	public partial class ProviderPays : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _providerId;
		
		private System.Nullable<double> _cash;
		
		private System.Nullable<double> _bank;
		
		private string _payer;
		
		private string _confirmer;
		
		private string _note;
		
		private string _receiver;
		
		private System.DateTime _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproviderIdChanging(int value);
    partial void OnproviderIdChanged();
    partial void OncashChanging(System.Nullable<double> value);
    partial void OncashChanged();
    partial void OnbankChanging(System.Nullable<double> value);
    partial void OnbankChanged();
    partial void OnpayerChanging(string value);
    partial void OnpayerChanged();
    partial void OnconfirmerChanging(string value);
    partial void OnconfirmerChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnreceiverChanging(string value);
    partial void OnreceiverChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public ProviderPays()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_providerId", DbType="Int NOT NULL")]
		public int providerId
		{
			get
			{
				return this._providerId;
			}
			set
			{
				if ((this._providerId != value))
				{
					this.OnproviderIdChanging(value);
					this.SendPropertyChanging();
					this._providerId = value;
					this.SendPropertyChanged("providerId");
					this.OnproviderIdChanged();
				}
			}
		}
		
		[Column(Storage="_cash", DbType="Float")]
		public System.Nullable<double> cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[Column(Storage="_bank", DbType="Float")]
		public System.Nullable<double> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[Column(Storage="_payer", DbType="NVarChar(MAX)")]
		public string payer
		{
			get
			{
				return this._payer;
			}
			set
			{
				if ((this._payer != value))
				{
					this.OnpayerChanging(value);
					this.SendPropertyChanging();
					this._payer = value;
					this.SendPropertyChanged("payer");
					this.OnpayerChanged();
				}
			}
		}
		
		[Column(Storage="_confirmer", DbType="NVarChar(MAX)")]
		public string confirmer
		{
			get
			{
				return this._confirmer;
			}
			set
			{
				if ((this._confirmer != value))
				{
					this.OnconfirmerChanging(value);
					this.SendPropertyChanging();
					this._confirmer = value;
					this.SendPropertyChanged("confirmer");
					this.OnconfirmerChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_receiver", DbType="NVarChar(MAX)")]
		public string receiver
		{
			get
			{
				return this._receiver;
			}
			set
			{
				if ((this._receiver != value))
				{
					this.OnreceiverChanging(value);
					this.SendPropertyChanging();
					this._receiver = value;
					this.SendPropertyChanged("receiver");
					this.OnreceiverChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CustomerPays")]
	public partial class CustomerPays : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customerId;
		
		private System.Nullable<double> _cash;
		
		private System.Nullable<double> _bank;
		
		private System.DateTime _date;
		
		private string _payEmployee;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerIdChanging(int value);
    partial void OncustomerIdChanged();
    partial void OncashChanging(System.Nullable<double> value);
    partial void OncashChanged();
    partial void OnbankChanging(System.Nullable<double> value);
    partial void OnbankChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public CustomerPays()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_customerId", DbType="Int NOT NULL")]
		public int customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[Column(Storage="_cash", DbType="Float")]
		public System.Nullable<double> cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[Column(Storage="_bank", DbType="Float")]
		public System.Nullable<double> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX)")]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _cardId;
		
		private string _gender;
		
		private System.DateTime _birthday;
		
		private int _jobId;
		
		private bool _onDuty;
		
		private string _salary;
		
		private string _password;
		
		private string _phone;
		
		private string _address;
		
		private string _email;
		
		private System.DateTime _entryDate;
		
		private string _idCard;
		
		private string _note;
		
		private string _status;
		
		private System.Nullable<bool> _OrderClock;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<int> _serverTime;
		
		private string _techStatus;
		
		private string _room;
		
		private string _seat;
		
		private string _techMenu;
		
		private System.Nullable<int> _msgId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncardIdChanging(string value);
    partial void OncardIdChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    partial void OnjobIdChanging(int value);
    partial void OnjobIdChanged();
    partial void OnonDutyChanging(bool value);
    partial void OnonDutyChanged();
    partial void OnsalaryChanging(string value);
    partial void OnsalaryChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnentryDateChanging(System.DateTime value);
    partial void OnentryDateChanged();
    partial void OnidCardChanging(string value);
    partial void OnidCardChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnOrderClockChanging(System.Nullable<bool> value);
    partial void OnOrderClockChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OnserverTimeChanging(System.Nullable<int> value);
    partial void OnserverTimeChanged();
    partial void OntechStatusChanging(string value);
    partial void OntechStatusChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OntechMenuChanging(string value);
    partial void OntechMenuChanged();
    partial void OnmsgIdChanging(System.Nullable<int> value);
    partial void OnmsgIdChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_cardId", DbType="NVarChar(MAX)")]
		public string cardId
		{
			get
			{
				return this._cardId;
			}
			set
			{
				if ((this._cardId != value))
				{
					this.OncardIdChanging(value);
					this.SendPropertyChanging();
					this._cardId = value;
					this.SendPropertyChanged("cardId");
					this.OncardIdChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[Column(Storage="_birthday", DbType="DateTime NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_jobId", DbType="Int NOT NULL")]
		public int jobId
		{
			get
			{
				return this._jobId;
			}
			set
			{
				if ((this._jobId != value))
				{
					this.OnjobIdChanging(value);
					this.SendPropertyChanging();
					this._jobId = value;
					this.SendPropertyChanged("jobId");
					this.OnjobIdChanged();
				}
			}
		}
		
		[Column(Storage="_onDuty", DbType="Bit NOT NULL")]
		public bool onDuty
		{
			get
			{
				return this._onDuty;
			}
			set
			{
				if ((this._onDuty != value))
				{
					this.OnonDutyChanging(value);
					this.SendPropertyChanging();
					this._onDuty = value;
					this.SendPropertyChanged("onDuty");
					this.OnonDutyChanged();
				}
			}
		}
		
		[Column(Storage="_salary", DbType="NVarChar(MAX)")]
		public string salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[Column(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="NVarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_entryDate", DbType="DateTime NOT NULL")]
		public System.DateTime entryDate
		{
			get
			{
				return this._entryDate;
			}
			set
			{
				if ((this._entryDate != value))
				{
					this.OnentryDateChanging(value);
					this.SendPropertyChanging();
					this._entryDate = value;
					this.SendPropertyChanged("entryDate");
					this.OnentryDateChanged();
				}
			}
		}
		
		[Column(Storage="_idCard", DbType="NVarChar(MAX)")]
		public string idCard
		{
			get
			{
				return this._idCard;
			}
			set
			{
				if ((this._idCard != value))
				{
					this.OnidCardChanging(value);
					this.SendPropertyChanging();
					this._idCard = value;
					this.SendPropertyChanged("idCard");
					this.OnidCardChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="NVarChar(MAX)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_OrderClock", DbType="Bit")]
		public System.Nullable<bool> OrderClock
		{
			get
			{
				return this._OrderClock;
			}
			set
			{
				if ((this._OrderClock != value))
				{
					this.OnOrderClockChanging(value);
					this.SendPropertyChanging();
					this._OrderClock = value;
					this.SendPropertyChanged("OrderClock");
					this.OnOrderClockChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_serverTime", DbType="Int")]
		public System.Nullable<int> serverTime
		{
			get
			{
				return this._serverTime;
			}
			set
			{
				if ((this._serverTime != value))
				{
					this.OnserverTimeChanging(value);
					this.SendPropertyChanging();
					this._serverTime = value;
					this.SendPropertyChanged("serverTime");
					this.OnserverTimeChanged();
				}
			}
		}
		
		[Column(Storage="_techStatus", DbType="NVarChar(MAX)")]
		public string techStatus
		{
			get
			{
				return this._techStatus;
			}
			set
			{
				if ((this._techStatus != value))
				{
					this.OntechStatusChanging(value);
					this.SendPropertyChanging();
					this._techStatus = value;
					this.SendPropertyChanged("techStatus");
					this.OntechStatusChanged();
				}
			}
		}
		
		[Column(Storage="_room", DbType="NVarChar(MAX)")]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_techMenu", DbType="NVarChar(MAX)")]
		public string techMenu
		{
			get
			{
				return this._techMenu;
			}
			set
			{
				if ((this._techMenu != value))
				{
					this.OntechMenuChanging(value);
					this.SendPropertyChanging();
					this._techMenu = value;
					this.SendPropertyChanged("techMenu");
					this.OntechMenuChanged();
				}
			}
		}
		
		[Column(Storage="_msgId", DbType="Int")]
		public System.Nullable<int> msgId
		{
			get
			{
				return this._msgId;
			}
			set
			{
				if ((this._msgId != value))
				{
					this.OnmsgIdChanging(value);
					this.SendPropertyChanging();
					this._msgId = value;
					this.SendPropertyChanged("msgId");
					this.OnmsgIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TechMsg")]
	public partial class TechMsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _room;
		
		private string _type;
		
		private string _techType;
		
		private System.Nullable<int> _number;
		
		private string _techId;
		
		private System.DateTime _time;
		
		private System.Nullable<bool> _printed;
		
		private bool _read;
		
		private string _seat;
		
		private string _menu;
		
		private string _gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OntechTypeChanging(string value);
    partial void OntechTypeChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    partial void OntechIdChanging(string value);
    partial void OntechIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnprintedChanging(System.Nullable<bool> value);
    partial void OnprintedChanged();
    partial void OnreadChanging(bool value);
    partial void OnreadChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    #endregion
		
		public TechMsg()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_room", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		[Column(Storage="_type", DbType="NVarChar(MAX)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[Column(Storage="_techType", DbType="NVarChar(MAX)")]
		public string techType
		{
			get
			{
				return this._techType;
			}
			set
			{
				if ((this._techType != value))
				{
					this.OntechTypeChanging(value);
					this.SendPropertyChanging();
					this._techType = value;
					this.SendPropertyChanged("techType");
					this.OntechTypeChanged();
				}
			}
		}
		
		[Column(Storage="_number", DbType="Int")]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[Column(Storage="_techId", DbType="NVarChar(MAX)")]
		public string techId
		{
			get
			{
				return this._techId;
			}
			set
			{
				if ((this._techId != value))
				{
					this.OntechIdChanging(value);
					this.SendPropertyChanging();
					this._techId = value;
					this.SendPropertyChanged("techId");
					this.OntechIdChanged();
				}
			}
		}
		
		[Column(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[Column(Storage="_printed", DbType="Bit")]
		public System.Nullable<bool> printed
		{
			get
			{
				return this._printed;
			}
			set
			{
				if ((this._printed != value))
				{
					this.OnprintedChanging(value);
					this.SendPropertyChanging();
					this._printed = value;
					this.SendPropertyChanged("printed");
					this.OnprintedChanged();
				}
			}
		}
		
		[Column(Name="[read]", Storage="_read", DbType="Bit NOT NULL")]
		public bool read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="NVarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public Department()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _note;
		
		private string _ip;
		
		private System.Nullable<int> _leaderId;
		
		private System.Nullable<int> _departId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnleaderIdChanging(System.Nullable<int> value);
    partial void OnleaderIdChanged();
    partial void OndepartIdChanging(System.Nullable<int> value);
    partial void OndepartIdChanged();
    #endregion
		
		public Job()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_ip", DbType="NVarChar(MAX)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[Column(Storage="_leaderId", DbType="Int")]
		public System.Nullable<int> leaderId
		{
			get
			{
				return this._leaderId;
			}
			set
			{
				if ((this._leaderId != value))
				{
					this.OnleaderIdChanging(value);
					this.SendPropertyChanging();
					this._leaderId = value;
					this.SendPropertyChanged("leaderId");
					this.OnleaderIdChanged();
				}
			}
		}
		
		[Column(Storage="_departId", DbType="Int")]
		public System.Nullable<int> departId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this.OndepartIdChanging(value);
					this.SendPropertyChanging();
					this._departId = value;
					this.SendPropertyChanged("departId");
					this.OndepartIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.StockIn")]
	public partial class StockIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _cost;
		
		private System.Nullable<double> _amount;
		
		private string _unit;
		
		private int _stockId;
		
		private string _note;
		
		private System.DateTime _date;
		
		private string _transactor;
		
		private string _checker;
		
		private System.Nullable<double> _money;
		
		private System.Nullable<int> _providerId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncostChanging(System.Nullable<double> value);
    partial void OncostChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnstockIdChanging(int value);
    partial void OnstockIdChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OntransactorChanging(string value);
    partial void OntransactorChanged();
    partial void OncheckerChanging(string value);
    partial void OncheckerChanged();
    partial void OnmoneyChanging(System.Nullable<double> value);
    partial void OnmoneyChanged();
    partial void OnproviderIdChanging(System.Nullable<int> value);
    partial void OnproviderIdChanged();
    #endregion
		
		public StockIn()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Float")]
		public System.Nullable<double> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[Column(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[Column(Storage="_unit", DbType="NVarChar(MAX)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[Column(Storage="_stockId", DbType="Int NOT NULL")]
		public int stockId
		{
			get
			{
				return this._stockId;
			}
			set
			{
				if ((this._stockId != value))
				{
					this.OnstockIdChanging(value);
					this.SendPropertyChanging();
					this._stockId = value;
					this.SendPropertyChanged("stockId");
					this.OnstockIdChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_transactor", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string transactor
		{
			get
			{
				return this._transactor;
			}
			set
			{
				if ((this._transactor != value))
				{
					this.OntransactorChanging(value);
					this.SendPropertyChanging();
					this._transactor = value;
					this.SendPropertyChanged("transactor");
					this.OntransactorChanged();
				}
			}
		}
		
		[Column(Storage="_checker", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string checker
		{
			get
			{
				return this._checker;
			}
			set
			{
				if ((this._checker != value))
				{
					this.OncheckerChanging(value);
					this.SendPropertyChanging();
					this._checker = value;
					this.SendPropertyChanged("checker");
					this.OncheckerChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float")]
		public System.Nullable<double> money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_providerId", DbType="Int")]
		public System.Nullable<int> providerId
		{
			get
			{
				return this._providerId;
			}
			set
			{
				if ((this._providerId != value))
				{
					this.OnproviderIdChanging(value);
					this.SendPropertyChanging();
					this._providerId = value;
					this.SendPropertyChanged("providerId");
					this.OnproviderIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.StockOut")]
	public partial class StockOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _amount;
		
		private string _unit;
		
		private System.Nullable<int> _stockId;
		
		private System.Nullable<int> _toStockId;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _receiver;
		
		private string _transactor;
		
		private string _checker;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnstockIdChanging(System.Nullable<int> value);
    partial void OnstockIdChanged();
    partial void OntoStockIdChanging(System.Nullable<int> value);
    partial void OntoStockIdChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnreceiverChanging(string value);
    partial void OnreceiverChanged();
    partial void OntransactorChanging(string value);
    partial void OntransactorChanged();
    partial void OncheckerChanging(string value);
    partial void OncheckerChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public StockOut()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[Column(Storage="_unit", DbType="NVarChar(MAX)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[Column(Storage="_stockId", DbType="Int")]
		public System.Nullable<int> stockId
		{
			get
			{
				return this._stockId;
			}
			set
			{
				if ((this._stockId != value))
				{
					this.OnstockIdChanging(value);
					this.SendPropertyChanging();
					this._stockId = value;
					this.SendPropertyChanged("stockId");
					this.OnstockIdChanged();
				}
			}
		}
		
		[Column(Storage="_toStockId", DbType="Int")]
		public System.Nullable<int> toStockId
		{
			get
			{
				return this._toStockId;
			}
			set
			{
				if ((this._toStockId != value))
				{
					this.OntoStockIdChanging(value);
					this.SendPropertyChanging();
					this._toStockId = value;
					this.SendPropertyChanged("toStockId");
					this.OntoStockIdChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_receiver", DbType="NVarChar(MAX)")]
		public string receiver
		{
			get
			{
				return this._receiver;
			}
			set
			{
				if ((this._receiver != value))
				{
					this.OnreceiverChanging(value);
					this.SendPropertyChanging();
					this._receiver = value;
					this.SendPropertyChanged("receiver");
					this.OnreceiverChanged();
				}
			}
		}
		
		[Column(Storage="_transactor", DbType="NVarChar(MAX)")]
		public string transactor
		{
			get
			{
				return this._transactor;
			}
			set
			{
				if ((this._transactor != value))
				{
					this.OntransactorChanging(value);
					this.SendPropertyChanging();
					this._transactor = value;
					this.SendPropertyChanged("transactor");
					this.OntransactorChanged();
				}
			}
		}
		
		[Column(Storage="_checker", DbType="NVarChar(MAX)")]
		public string checker
		{
			get
			{
				return this._checker;
			}
			set
			{
				if ((this._checker != value))
				{
					this.OncheckerChanging(value);
					this.SendPropertyChanging();
					this._checker = value;
					this.SendPropertyChanged("checker");
					this.OncheckerChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.StorageList")]
	public partial class StorageList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _cost;
		
		private System.Nullable<int> _amountLastMonth;
		
		private System.Nullable<int> _amountThisMonth;
		
		private System.Nullable<double> _minAmount;
		
		private string _unit;
		
		private System.Nullable<int> _stockId;
		
		private string _note;
		
		private System.Nullable<int> _goodsCatId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncostChanging(System.Nullable<double> value);
    partial void OncostChanged();
    partial void OnamountLastMonthChanging(System.Nullable<int> value);
    partial void OnamountLastMonthChanged();
    partial void OnamountThisMonthChanging(System.Nullable<int> value);
    partial void OnamountThisMonthChanged();
    partial void OnminAmountChanging(System.Nullable<double> value);
    partial void OnminAmountChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnstockIdChanging(System.Nullable<int> value);
    partial void OnstockIdChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OngoodsCatIdChanging(System.Nullable<int> value);
    partial void OngoodsCatIdChanged();
    #endregion
		
		public StorageList()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_cost", DbType="Float")]
		public System.Nullable<double> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[Column(Storage="_amountLastMonth", DbType="Int")]
		public System.Nullable<int> amountLastMonth
		{
			get
			{
				return this._amountLastMonth;
			}
			set
			{
				if ((this._amountLastMonth != value))
				{
					this.OnamountLastMonthChanging(value);
					this.SendPropertyChanging();
					this._amountLastMonth = value;
					this.SendPropertyChanged("amountLastMonth");
					this.OnamountLastMonthChanged();
				}
			}
		}
		
		[Column(Storage="_amountThisMonth", DbType="Int")]
		public System.Nullable<int> amountThisMonth
		{
			get
			{
				return this._amountThisMonth;
			}
			set
			{
				if ((this._amountThisMonth != value))
				{
					this.OnamountThisMonthChanging(value);
					this.SendPropertyChanging();
					this._amountThisMonth = value;
					this.SendPropertyChanged("amountThisMonth");
					this.OnamountThisMonthChanged();
				}
			}
		}
		
		[Column(Storage="_minAmount", DbType="Float")]
		public System.Nullable<double> minAmount
		{
			get
			{
				return this._minAmount;
			}
			set
			{
				if ((this._minAmount != value))
				{
					this.OnminAmountChanging(value);
					this.SendPropertyChanging();
					this._minAmount = value;
					this.SendPropertyChanged("minAmount");
					this.OnminAmountChanged();
				}
			}
		}
		
		[Column(Storage="_unit", DbType="NVarChar(MAX)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[Column(Storage="_stockId", DbType="Int")]
		public System.Nullable<int> stockId
		{
			get
			{
				return this._stockId;
			}
			set
			{
				if ((this._stockId != value))
				{
					this.OnstockIdChanging(value);
					this.SendPropertyChanging();
					this._stockId = value;
					this.SendPropertyChanged("stockId");
					this.OnstockIdChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_goodsCatId", DbType="Int")]
		public System.Nullable<int> goodsCatId
		{
			get
			{
				return this._goodsCatId;
			}
			set
			{
				if ((this._goodsCatId != value))
				{
					this.OngoodsCatIdChanging(value);
					this.SendPropertyChanging();
					this._goodsCatId = value;
					this.SendPropertyChanged("goodsCatId");
					this.OngoodsCatIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DepartmentLog")]
	public partial class DepartmentLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _departId;
		
		private string _sender;
		
		private string _msg;
		
		private System.Data.Linq.Binary _img;
		
		private string _imgUrl;
		
		private System.Data.Linq.Binary _img2;
		
		private string _img2Url;
		
		private System.Data.Linq.Binary _img3;
		
		private string _img3Url;
		
		private System.Nullable<bool> _urgent;
		
		private System.Nullable<bool> _done;
		
		private System.Nullable<System.DateTime> _dueTime;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _urgentDate;
		
		private System.Nullable<System.DateTime> _doneDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndepartIdChanging(System.Nullable<int> value);
    partial void OndepartIdChanged();
    partial void OnsenderChanging(string value);
    partial void OnsenderChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnimgChanging(System.Data.Linq.Binary value);
    partial void OnimgChanged();
    partial void OnimgUrlChanging(string value);
    partial void OnimgUrlChanged();
    partial void Onimg2Changing(System.Data.Linq.Binary value);
    partial void Onimg2Changed();
    partial void Onimg2UrlChanging(string value);
    partial void Onimg2UrlChanged();
    partial void Onimg3Changing(System.Data.Linq.Binary value);
    partial void Onimg3Changed();
    partial void Onimg3UrlChanging(string value);
    partial void Onimg3UrlChanged();
    partial void OnurgentChanging(System.Nullable<bool> value);
    partial void OnurgentChanged();
    partial void OndoneChanging(System.Nullable<bool> value);
    partial void OndoneChanged();
    partial void OndueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndueTimeChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnurgentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnurgentDateChanged();
    partial void OndoneDateChanging(System.Nullable<System.DateTime> value);
    partial void OndoneDateChanged();
    #endregion
		
		public DepartmentLog()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_departId", DbType="Int")]
		public System.Nullable<int> departId
		{
			get
			{
				return this._departId;
			}
			set
			{
				if ((this._departId != value))
				{
					this.OndepartIdChanging(value);
					this.SendPropertyChanging();
					this._departId = value;
					this.SendPropertyChanged("departId");
					this.OndepartIdChanged();
				}
			}
		}
		
		[Column(Storage="_sender", DbType="NVarChar(MAX)")]
		public string sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[Column(Storage="_msg", DbType="NVarChar(MAX)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[Column(Storage="_img", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[Column(Storage="_imgUrl", DbType="NVarChar(MAX)")]
		public string imgUrl
		{
			get
			{
				return this._imgUrl;
			}
			set
			{
				if ((this._imgUrl != value))
				{
					this.OnimgUrlChanging(value);
					this.SendPropertyChanging();
					this._imgUrl = value;
					this.SendPropertyChanged("imgUrl");
					this.OnimgUrlChanged();
				}
			}
		}
		
		[Column(Storage="_img2", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img2
		{
			get
			{
				return this._img2;
			}
			set
			{
				if ((this._img2 != value))
				{
					this.Onimg2Changing(value);
					this.SendPropertyChanging();
					this._img2 = value;
					this.SendPropertyChanged("img2");
					this.Onimg2Changed();
				}
			}
		}
		
		[Column(Storage="_img2Url", DbType="NVarChar(MAX)")]
		public string img2Url
		{
			get
			{
				return this._img2Url;
			}
			set
			{
				if ((this._img2Url != value))
				{
					this.Onimg2UrlChanging(value);
					this.SendPropertyChanging();
					this._img2Url = value;
					this.SendPropertyChanged("img2Url");
					this.Onimg2UrlChanged();
				}
			}
		}
		
		[Column(Storage="_img3", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img3
		{
			get
			{
				return this._img3;
			}
			set
			{
				if ((this._img3 != value))
				{
					this.Onimg3Changing(value);
					this.SendPropertyChanging();
					this._img3 = value;
					this.SendPropertyChanged("img3");
					this.Onimg3Changed();
				}
			}
		}
		
		[Column(Storage="_img3Url", DbType="NVarChar(MAX)")]
		public string img3Url
		{
			get
			{
				return this._img3Url;
			}
			set
			{
				if ((this._img3Url != value))
				{
					this.Onimg3UrlChanging(value);
					this.SendPropertyChanging();
					this._img3Url = value;
					this.SendPropertyChanged("img3Url");
					this.Onimg3UrlChanged();
				}
			}
		}
		
		[Column(Storage="_urgent", DbType="Bit")]
		public System.Nullable<bool> urgent
		{
			get
			{
				return this._urgent;
			}
			set
			{
				if ((this._urgent != value))
				{
					this.OnurgentChanging(value);
					this.SendPropertyChanging();
					this._urgent = value;
					this.SendPropertyChanged("urgent");
					this.OnurgentChanged();
				}
			}
		}
		
		[Column(Storage="_done", DbType="Bit")]
		public System.Nullable<bool> done
		{
			get
			{
				return this._done;
			}
			set
			{
				if ((this._done != value))
				{
					this.OndoneChanging(value);
					this.SendPropertyChanging();
					this._done = value;
					this.SendPropertyChanged("done");
					this.OndoneChanged();
				}
			}
		}
		
		[Column(Storage="_dueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> dueTime
		{
			get
			{
				return this._dueTime;
			}
			set
			{
				if ((this._dueTime != value))
				{
					this.OndueTimeChanging(value);
					this.SendPropertyChanging();
					this._dueTime = value;
					this.SendPropertyChanged("dueTime");
					this.OndueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[Column(Storage="_urgentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> urgentDate
		{
			get
			{
				return this._urgentDate;
			}
			set
			{
				if ((this._urgentDate != value))
				{
					this.OnurgentDateChanging(value);
					this.SendPropertyChanging();
					this._urgentDate = value;
					this.SendPropertyChanged("urgentDate");
					this.OnurgentDateChanged();
				}
			}
		}
		
		[Column(Storage="_doneDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> doneDate
		{
			get
			{
				return this._doneDate;
			}
			set
			{
				if ((this._doneDate != value))
				{
					this.OndoneDateChanging(value);
					this.SendPropertyChanging();
					this._doneDate = value;
					this.SendPropertyChanged("doneDate");
					this.OndoneDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TechIndex")]
	public partial class TechIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _dutyid;
		
		private string _ids;
		
		private string _gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndutyidChanging(System.Nullable<int> value);
    partial void OndutyidChanged();
    partial void OnidsChanging(string value);
    partial void OnidsChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    #endregion
		
		public TechIndex()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_dutyid", DbType="Int")]
		public System.Nullable<int> dutyid
		{
			get
			{
				return this._dutyid;
			}
			set
			{
				if ((this._dutyid != value))
				{
					this.OndutyidChanging(value);
					this.SendPropertyChanging();
					this._dutyid = value;
					this.SendPropertyChanged("dutyid");
					this.OndutyidChanged();
				}
			}
		}
		
		[Column(Storage="_ids", DbType="NVarChar(MAX)")]
		public string ids
		{
			get
			{
				return this._ids;
			}
			set
			{
				if ((this._ids != value))
				{
					this.OnidsChanging(value);
					this.SendPropertyChanging();
					this._ids = value;
					this.SendPropertyChanged("ids");
					this.OnidsChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="NVarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Seat")]
	public partial class Seat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _oId;
		
		private string _text;
		
		private int _typeId;
		
		private string _systemId;
		
		private string _name;
		
		private System.Nullable<int> _population;
		
		private System.Nullable<System.DateTime> _openTime;
		
		private string _openEmployee;
		
		private System.Nullable<System.DateTime> _payTime;
		
		private string _payEmployee;
		
		private string _phone;
		
		private string _discountEmployee;
		
		private System.Nullable<double> _discount;
		
		private System.Nullable<bool> _memberDiscount;
		
		private string _memberPromotionId;
		
		private string _freeEmployee;
		
		private string _chainId;
		
		private int _status;
		
		private System.Nullable<bool> _ordering;
		
		private System.Nullable<bool> _paying;
		
		private string _note;
		
		private string _unwarn;
		
		private string _roomStatus;
		
		private System.Nullable<int> _deposit;
		
		private System.Nullable<System.DateTime> _dueTime;
		
		private System.Nullable<int> _depositBank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoIdChanging(string value);
    partial void OnoIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OntypeIdChanging(int value);
    partial void OntypeIdChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpopulationChanging(System.Nullable<int> value);
    partial void OnpopulationChanged();
    partial void OnopenTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnopenTimeChanged();
    partial void OnopenEmployeeChanging(string value);
    partial void OnopenEmployeeChanged();
    partial void OnpayTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnpayTimeChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndiscountEmployeeChanging(string value);
    partial void OndiscountEmployeeChanged();
    partial void OndiscountChanging(System.Nullable<double> value);
    partial void OndiscountChanged();
    partial void OnmemberDiscountChanging(System.Nullable<bool> value);
    partial void OnmemberDiscountChanged();
    partial void OnmemberPromotionIdChanging(string value);
    partial void OnmemberPromotionIdChanged();
    partial void OnfreeEmployeeChanging(string value);
    partial void OnfreeEmployeeChanged();
    partial void OnchainIdChanging(string value);
    partial void OnchainIdChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnorderingChanging(System.Nullable<bool> value);
    partial void OnorderingChanged();
    partial void OnpayingChanging(System.Nullable<bool> value);
    partial void OnpayingChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnunwarnChanging(string value);
    partial void OnunwarnChanged();
    partial void OnroomStatusChanging(string value);
    partial void OnroomStatusChanged();
    partial void OndepositChanging(System.Nullable<int> value);
    partial void OndepositChanged();
    partial void OndueTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndueTimeChanged();
    partial void OndepositBankChanging(System.Nullable<int> value);
    partial void OndepositBankChanged();
    #endregion
		
		public Seat()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_oId", DbType="NVarChar(MAX)")]
		public string oId
		{
			get
			{
				return this._oId;
			}
			set
			{
				if ((this._oId != value))
				{
					this.OnoIdChanging(value);
					this.SendPropertyChanging();
					this._oId = value;
					this.SendPropertyChanged("oId");
					this.OnoIdChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_typeId", DbType="Int NOT NULL")]
		public int typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX)")]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_population", DbType="Int")]
		public System.Nullable<int> population
		{
			get
			{
				return this._population;
			}
			set
			{
				if ((this._population != value))
				{
					this.OnpopulationChanging(value);
					this.SendPropertyChanging();
					this._population = value;
					this.SendPropertyChanged("population");
					this.OnpopulationChanged();
				}
			}
		}
		
		[Column(Storage="_openTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> openTime
		{
			get
			{
				return this._openTime;
			}
			set
			{
				if ((this._openTime != value))
				{
					this.OnopenTimeChanging(value);
					this.SendPropertyChanging();
					this._openTime = value;
					this.SendPropertyChanged("openTime");
					this.OnopenTimeChanged();
				}
			}
		}
		
		[Column(Storage="_openEmployee", DbType="NVarChar(MAX)")]
		public string openEmployee
		{
			get
			{
				return this._openEmployee;
			}
			set
			{
				if ((this._openEmployee != value))
				{
					this.OnopenEmployeeChanging(value);
					this.SendPropertyChanging();
					this._openEmployee = value;
					this.SendPropertyChanged("openEmployee");
					this.OnopenEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> payTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnpayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("payTime");
					this.OnpayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX)")]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_phone", DbType="NVarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[Column(Storage="_discountEmployee", DbType="NVarChar(MAX)")]
		public string discountEmployee
		{
			get
			{
				return this._discountEmployee;
			}
			set
			{
				if ((this._discountEmployee != value))
				{
					this.OndiscountEmployeeChanging(value);
					this.SendPropertyChanging();
					this._discountEmployee = value;
					this.SendPropertyChanged("discountEmployee");
					this.OndiscountEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_discount", DbType="Float")]
		public System.Nullable<double> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[Column(Storage="_memberDiscount", DbType="Bit")]
		public System.Nullable<bool> memberDiscount
		{
			get
			{
				return this._memberDiscount;
			}
			set
			{
				if ((this._memberDiscount != value))
				{
					this.OnmemberDiscountChanging(value);
					this.SendPropertyChanging();
					this._memberDiscount = value;
					this.SendPropertyChanged("memberDiscount");
					this.OnmemberDiscountChanged();
				}
			}
		}
		
		[Column(Storage="_memberPromotionId", DbType="NVarChar(MAX)")]
		public string memberPromotionId
		{
			get
			{
				return this._memberPromotionId;
			}
			set
			{
				if ((this._memberPromotionId != value))
				{
					this.OnmemberPromotionIdChanging(value);
					this.SendPropertyChanging();
					this._memberPromotionId = value;
					this.SendPropertyChanged("memberPromotionId");
					this.OnmemberPromotionIdChanged();
				}
			}
		}
		
		[Column(Storage="_freeEmployee", DbType="NVarChar(MAX)")]
		public string freeEmployee
		{
			get
			{
				return this._freeEmployee;
			}
			set
			{
				if ((this._freeEmployee != value))
				{
					this.OnfreeEmployeeChanging(value);
					this.SendPropertyChanging();
					this._freeEmployee = value;
					this.SendPropertyChanged("freeEmployee");
					this.OnfreeEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_chainId", DbType="NVarChar(MAX)")]
		public string chainId
		{
			get
			{
				return this._chainId;
			}
			set
			{
				if ((this._chainId != value))
				{
					this.OnchainIdChanging(value);
					this.SendPropertyChanging();
					this._chainId = value;
					this.SendPropertyChanged("chainId");
					this.OnchainIdChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_ordering", DbType="Bit")]
		public System.Nullable<bool> ordering
		{
			get
			{
				return this._ordering;
			}
			set
			{
				if ((this._ordering != value))
				{
					this.OnorderingChanging(value);
					this.SendPropertyChanging();
					this._ordering = value;
					this.SendPropertyChanged("ordering");
					this.OnorderingChanged();
				}
			}
		}
		
		[Column(Storage="_paying", DbType="Bit")]
		public System.Nullable<bool> paying
		{
			get
			{
				return this._paying;
			}
			set
			{
				if ((this._paying != value))
				{
					this.OnpayingChanging(value);
					this.SendPropertyChanging();
					this._paying = value;
					this.SendPropertyChanged("paying");
					this.OnpayingChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_unwarn", DbType="NVarChar(MAX)")]
		public string unwarn
		{
			get
			{
				return this._unwarn;
			}
			set
			{
				if ((this._unwarn != value))
				{
					this.OnunwarnChanging(value);
					this.SendPropertyChanging();
					this._unwarn = value;
					this.SendPropertyChanged("unwarn");
					this.OnunwarnChanged();
				}
			}
		}
		
		[Column(Storage="_roomStatus", DbType="NVarChar(MAX)")]
		public string roomStatus
		{
			get
			{
				return this._roomStatus;
			}
			set
			{
				if ((this._roomStatus != value))
				{
					this.OnroomStatusChanging(value);
					this.SendPropertyChanging();
					this._roomStatus = value;
					this.SendPropertyChanged("roomStatus");
					this.OnroomStatusChanged();
				}
			}
		}
		
		[Column(Storage="_deposit", DbType="Int")]
		public System.Nullable<int> deposit
		{
			get
			{
				return this._deposit;
			}
			set
			{
				if ((this._deposit != value))
				{
					this.OndepositChanging(value);
					this.SendPropertyChanging();
					this._deposit = value;
					this.SendPropertyChanged("deposit");
					this.OndepositChanged();
				}
			}
		}
		
		[Column(Storage="_dueTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> dueTime
		{
			get
			{
				return this._dueTime;
			}
			set
			{
				if ((this._dueTime != value))
				{
					this.OndueTimeChanging(value);
					this.SendPropertyChanging();
					this._dueTime = value;
					this.SendPropertyChanged("dueTime");
					this.OndueTimeChanged();
				}
			}
		}
		
		[Column(Storage="_depositBank", DbType="Int")]
		public System.Nullable<int> depositBank
		{
			get
			{
				return this._depositBank;
			}
			set
			{
				if ((this._depositBank != value))
				{
					this.OndepositBankChanging(value);
					this.SendPropertyChanging();
					this._depositBank = value;
					this.SendPropertyChanged("depositBank");
					this.OndepositBankChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CardSale")]
	public partial class CardSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _memberId;
		
		private System.Nullable<double> _balance;
		
		private System.Nullable<double> _cash;
		
		private System.Nullable<double> _bankUnion;
		
		private System.Nullable<System.DateTime> _payTime;
		
		private string _payEmployee;
		
		private string _note;
		
		private string _macAddress;
		
		private string _seat;
		
		private string _explain;
		
		private System.Nullable<double> _server;
		
		private string _serverEmployee;
		
		private string _abandon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmemberIdChanging(string value);
    partial void OnmemberIdChanged();
    partial void OnbalanceChanging(System.Nullable<double> value);
    partial void OnbalanceChanged();
    partial void OncashChanging(System.Nullable<double> value);
    partial void OncashChanged();
    partial void OnbankUnionChanging(System.Nullable<double> value);
    partial void OnbankUnionChanged();
    partial void OnpayTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnpayTimeChanged();
    partial void OnpayEmployeeChanging(string value);
    partial void OnpayEmployeeChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnmacAddressChanging(string value);
    partial void OnmacAddressChanged();
    partial void OnseatChanging(string value);
    partial void OnseatChanged();
    partial void OnexplainChanging(string value);
    partial void OnexplainChanged();
    partial void OnserverChanging(System.Nullable<double> value);
    partial void OnserverChanged();
    partial void OnserverEmployeeChanging(string value);
    partial void OnserverEmployeeChanged();
    partial void OnabandonChanging(string value);
    partial void OnabandonChanged();
    #endregion
		
		public CardSale()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_memberId", DbType="NVarChar(MAX)")]
		public string memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[Column(Storage="_balance", DbType="Float")]
		public System.Nullable<double> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[Column(Storage="_cash", DbType="Float")]
		public System.Nullable<double> cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[Column(Storage="_bankUnion", DbType="Float")]
		public System.Nullable<double> bankUnion
		{
			get
			{
				return this._bankUnion;
			}
			set
			{
				if ((this._bankUnion != value))
				{
					this.OnbankUnionChanging(value);
					this.SendPropertyChanging();
					this._bankUnion = value;
					this.SendPropertyChanged("bankUnion");
					this.OnbankUnionChanged();
				}
			}
		}
		
		[Column(Storage="_payTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> payTime
		{
			get
			{
				return this._payTime;
			}
			set
			{
				if ((this._payTime != value))
				{
					this.OnpayTimeChanging(value);
					this.SendPropertyChanging();
					this._payTime = value;
					this.SendPropertyChanged("payTime");
					this.OnpayTimeChanged();
				}
			}
		}
		
		[Column(Storage="_payEmployee", DbType="NVarChar(MAX)")]
		public string payEmployee
		{
			get
			{
				return this._payEmployee;
			}
			set
			{
				if ((this._payEmployee != value))
				{
					this.OnpayEmployeeChanging(value);
					this.SendPropertyChanging();
					this._payEmployee = value;
					this.SendPropertyChanged("payEmployee");
					this.OnpayEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[Column(Storage="_macAddress", DbType="NVarChar(MAX)")]
		public string macAddress
		{
			get
			{
				return this._macAddress;
			}
			set
			{
				if ((this._macAddress != value))
				{
					this.OnmacAddressChanging(value);
					this.SendPropertyChanging();
					this._macAddress = value;
					this.SendPropertyChanged("macAddress");
					this.OnmacAddressChanged();
				}
			}
		}
		
		[Column(Storage="_seat", DbType="NVarChar(MAX)")]
		public string seat
		{
			get
			{
				return this._seat;
			}
			set
			{
				if ((this._seat != value))
				{
					this.OnseatChanging(value);
					this.SendPropertyChanging();
					this._seat = value;
					this.SendPropertyChanged("seat");
					this.OnseatChanged();
				}
			}
		}
		
		[Column(Storage="_explain", DbType="NVarChar(MAX)")]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this.OnexplainChanging(value);
					this.SendPropertyChanging();
					this._explain = value;
					this.SendPropertyChanged("explain");
					this.OnexplainChanged();
				}
			}
		}
		
		[Column(Storage="_server", DbType="Float")]
		public System.Nullable<double> server
		{
			get
			{
				return this._server;
			}
			set
			{
				if ((this._server != value))
				{
					this.OnserverChanging(value);
					this.SendPropertyChanging();
					this._server = value;
					this.SendPropertyChanged("server");
					this.OnserverChanged();
				}
			}
		}
		
		[Column(Storage="_serverEmployee", DbType="NVarChar(MAX)")]
		public string serverEmployee
		{
			get
			{
				return this._serverEmployee;
			}
			set
			{
				if ((this._serverEmployee != value))
				{
					this.OnserverEmployeeChanging(value);
					this.SendPropertyChanging();
					this._serverEmployee = value;
					this.SendPropertyChanged("serverEmployee");
					this.OnserverEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_abandon", DbType="NVarChar(MAX)")]
		public string abandon
		{
			get
			{
				return this._abandon;
			}
			set
			{
				if ((this._abandon != value))
				{
					this.OnabandonChanging(value);
					this.SendPropertyChanging();
					this._abandon = value;
					this.SendPropertyChanged("abandon");
					this.OnabandonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _menu;
		
		private string _text;
		
		private string _systemId;
		
		private double _number;
		
		private string _priceType;
		
		private double _money;
		
		private string _technician;
		
		private string _techType;
		
		private System.DateTime _inputTime;
		
		private string _inputEmployee;
		
		private string _deleteEmployee;
		
		private string _donorEmployee;
		
		private System.Nullable<int> _comboId;
		
		private bool _paid;
		
		private System.Nullable<int> _accountId;
		
		private string _billId;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<bool> _stopTiming;
		
		private System.Nullable<int> _departmentId;
		
		private string _deleteExplain;
		
		private System.Nullable<System.DateTime> _deleteTime;
		
		private string _roomId;
		
		private string _donorExplain;
		
		private System.Nullable<System.DateTime> _donorTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnnumberChanging(double value);
    partial void OnnumberChanged();
    partial void OnpriceTypeChanging(string value);
    partial void OnpriceTypeChanged();
    partial void OnmoneyChanging(double value);
    partial void OnmoneyChanged();
    partial void OntechnicianChanging(string value);
    partial void OntechnicianChanged();
    partial void OntechTypeChanging(string value);
    partial void OntechTypeChanged();
    partial void OninputTimeChanging(System.DateTime value);
    partial void OninputTimeChanged();
    partial void OninputEmployeeChanging(string value);
    partial void OninputEmployeeChanged();
    partial void OndeleteEmployeeChanging(string value);
    partial void OndeleteEmployeeChanged();
    partial void OndonorEmployeeChanging(string value);
    partial void OndonorEmployeeChanged();
    partial void OncomboIdChanging(System.Nullable<int> value);
    partial void OncomboIdChanged();
    partial void OnpaidChanging(bool value);
    partial void OnpaidChanged();
    partial void OnaccountIdChanging(System.Nullable<int> value);
    partial void OnaccountIdChanged();
    partial void OnbillIdChanging(string value);
    partial void OnbillIdChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OnstopTimingChanging(System.Nullable<bool> value);
    partial void OnstopTimingChanged();
    partial void OndepartmentIdChanging(System.Nullable<int> value);
    partial void OndepartmentIdChanged();
    partial void OndeleteExplainChanging(string value);
    partial void OndeleteExplainChanged();
    partial void OndeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndeleteTimeChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OndonorExplainChanging(string value);
    partial void OndonorExplainChanged();
    partial void OndonorTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndonorTimeChanged();
    #endregion
		
		public Orders()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_number", DbType="Float NOT NULL")]
		public double number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[Column(Storage="_priceType", DbType="NVarChar(MAX)")]
		public string priceType
		{
			get
			{
				return this._priceType;
			}
			set
			{
				if ((this._priceType != value))
				{
					this.OnpriceTypeChanging(value);
					this.SendPropertyChanging();
					this._priceType = value;
					this.SendPropertyChanged("priceType");
					this.OnpriceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float NOT NULL")]
		public double money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_technician", DbType="NVarChar(MAX)")]
		public string technician
		{
			get
			{
				return this._technician;
			}
			set
			{
				if ((this._technician != value))
				{
					this.OntechnicianChanging(value);
					this.SendPropertyChanging();
					this._technician = value;
					this.SendPropertyChanged("technician");
					this.OntechnicianChanged();
				}
			}
		}
		
		[Column(Storage="_techType", DbType="NVarChar(MAX)")]
		public string techType
		{
			get
			{
				return this._techType;
			}
			set
			{
				if ((this._techType != value))
				{
					this.OntechTypeChanging(value);
					this.SendPropertyChanging();
					this._techType = value;
					this.SendPropertyChanged("techType");
					this.OntechTypeChanged();
				}
			}
		}
		
		[Column(Storage="_inputTime", DbType="DateTime NOT NULL")]
		public System.DateTime inputTime
		{
			get
			{
				return this._inputTime;
			}
			set
			{
				if ((this._inputTime != value))
				{
					this.OninputTimeChanging(value);
					this.SendPropertyChanging();
					this._inputTime = value;
					this.SendPropertyChanged("inputTime");
					this.OninputTimeChanged();
				}
			}
		}
		
		[Column(Storage="_inputEmployee", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string inputEmployee
		{
			get
			{
				return this._inputEmployee;
			}
			set
			{
				if ((this._inputEmployee != value))
				{
					this.OninputEmployeeChanging(value);
					this.SendPropertyChanging();
					this._inputEmployee = value;
					this.SendPropertyChanged("inputEmployee");
					this.OninputEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_deleteEmployee", DbType="NVarChar(MAX)")]
		public string deleteEmployee
		{
			get
			{
				return this._deleteEmployee;
			}
			set
			{
				if ((this._deleteEmployee != value))
				{
					this.OndeleteEmployeeChanging(value);
					this.SendPropertyChanging();
					this._deleteEmployee = value;
					this.SendPropertyChanged("deleteEmployee");
					this.OndeleteEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_donorEmployee", DbType="NVarChar(MAX)")]
		public string donorEmployee
		{
			get
			{
				return this._donorEmployee;
			}
			set
			{
				if ((this._donorEmployee != value))
				{
					this.OndonorEmployeeChanging(value);
					this.SendPropertyChanging();
					this._donorEmployee = value;
					this.SendPropertyChanged("donorEmployee");
					this.OndonorEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_comboId", DbType="Int")]
		public System.Nullable<int> comboId
		{
			get
			{
				return this._comboId;
			}
			set
			{
				if ((this._comboId != value))
				{
					this.OncomboIdChanging(value);
					this.SendPropertyChanging();
					this._comboId = value;
					this.SendPropertyChanged("comboId");
					this.OncomboIdChanged();
				}
			}
		}
		
		[Column(Storage="_paid", DbType="Bit NOT NULL")]
		public bool paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[Column(Storage="_accountId", DbType="Int")]
		public System.Nullable<int> accountId
		{
			get
			{
				return this._accountId;
			}
			set
			{
				if ((this._accountId != value))
				{
					this.OnaccountIdChanging(value);
					this.SendPropertyChanging();
					this._accountId = value;
					this.SendPropertyChanged("accountId");
					this.OnaccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_billId", DbType="NVarChar(MAX)")]
		public string billId
		{
			get
			{
				return this._billId;
			}
			set
			{
				if ((this._billId != value))
				{
					this.OnbillIdChanging(value);
					this.SendPropertyChanging();
					this._billId = value;
					this.SendPropertyChanged("billId");
					this.OnbillIdChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_stopTiming", DbType="Bit")]
		public System.Nullable<bool> stopTiming
		{
			get
			{
				return this._stopTiming;
			}
			set
			{
				if ((this._stopTiming != value))
				{
					this.OnstopTimingChanging(value);
					this.SendPropertyChanging();
					this._stopTiming = value;
					this.SendPropertyChanged("stopTiming");
					this.OnstopTimingChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="Int")]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OndepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("departmentId");
					this.OndepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_deleteExplain", DbType="NVarChar(MAX)")]
		public string deleteExplain
		{
			get
			{
				return this._deleteExplain;
			}
			set
			{
				if ((this._deleteExplain != value))
				{
					this.OndeleteExplainChanging(value);
					this.SendPropertyChanging();
					this._deleteExplain = value;
					this.SendPropertyChanged("deleteExplain");
					this.OndeleteExplainChanged();
				}
			}
		}
		
		[Column(Storage="_deleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleteTime
		{
			get
			{
				return this._deleteTime;
			}
			set
			{
				if ((this._deleteTime != value))
				{
					this.OndeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._deleteTime = value;
					this.SendPropertyChanged("deleteTime");
					this.OndeleteTimeChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_donorExplain", DbType="NVarChar(MAX)")]
		public string donorExplain
		{
			get
			{
				return this._donorExplain;
			}
			set
			{
				if ((this._donorExplain != value))
				{
					this.OndonorExplainChanging(value);
					this.SendPropertyChanging();
					this._donorExplain = value;
					this.SendPropertyChanged("donorExplain");
					this.OndonorExplainChanged();
				}
			}
		}
		
		[Column(Storage="_donorTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> donorTime
		{
			get
			{
				return this._donorTime;
			}
			set
			{
				if ((this._donorTime != value))
				{
					this.OndonorTimeChanging(value);
					this.SendPropertyChanging();
					this._donorTime = value;
					this.SendPropertyChanged("donorTime");
					this.OndonorTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HisOrders")]
	public partial class HisOrders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _menu;
		
		private string _text;
		
		private string _systemId;
		
		private double _number;
		
		private string _priceType;
		
		private double _money;
		
		private string _technician;
		
		private string _techType;
		
		private System.DateTime _inputTime;
		
		private string _inputEmployee;
		
		private string _deleteEmployee;
		
		private string _donorEmployee;
		
		private System.Nullable<int> _comboId;
		
		private bool _paid;
		
		private System.Nullable<int> _accountId;
		
		private string _billId;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<int> _departmentId;
		
		private string _deleteExplain;
		
		private System.Nullable<System.DateTime> _deleteTime;
		
		private string _roomId;
		
		private string _donorExplain;
		
		private System.Nullable<System.DateTime> _donorTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmenuChanging(string value);
    partial void OnmenuChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnsystemIdChanging(string value);
    partial void OnsystemIdChanged();
    partial void OnnumberChanging(double value);
    partial void OnnumberChanged();
    partial void OnpriceTypeChanging(string value);
    partial void OnpriceTypeChanged();
    partial void OnmoneyChanging(double value);
    partial void OnmoneyChanged();
    partial void OntechnicianChanging(string value);
    partial void OntechnicianChanged();
    partial void OntechTypeChanging(string value);
    partial void OntechTypeChanged();
    partial void OninputTimeChanging(System.DateTime value);
    partial void OninputTimeChanged();
    partial void OninputEmployeeChanging(string value);
    partial void OninputEmployeeChanged();
    partial void OndeleteEmployeeChanging(string value);
    partial void OndeleteEmployeeChanged();
    partial void OndonorEmployeeChanging(string value);
    partial void OndonorEmployeeChanged();
    partial void OncomboIdChanging(System.Nullable<int> value);
    partial void OncomboIdChanged();
    partial void OnpaidChanging(bool value);
    partial void OnpaidChanged();
    partial void OnaccountIdChanging(System.Nullable<int> value);
    partial void OnaccountIdChanged();
    partial void OnbillIdChanging(string value);
    partial void OnbillIdChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OndepartmentIdChanging(System.Nullable<int> value);
    partial void OndepartmentIdChanged();
    partial void OndeleteExplainChanging(string value);
    partial void OndeleteExplainChanged();
    partial void OndeleteTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndeleteTimeChanged();
    partial void OnroomIdChanging(string value);
    partial void OnroomIdChanged();
    partial void OndonorExplainChanging(string value);
    partial void OndonorExplainChanged();
    partial void OndonorTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndonorTimeChanged();
    #endregion
		
		public HisOrders()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_menu", DbType="NVarChar(MAX)")]
		public string menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_systemId", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string systemId
		{
			get
			{
				return this._systemId;
			}
			set
			{
				if ((this._systemId != value))
				{
					this.OnsystemIdChanging(value);
					this.SendPropertyChanging();
					this._systemId = value;
					this.SendPropertyChanged("systemId");
					this.OnsystemIdChanged();
				}
			}
		}
		
		[Column(Storage="_number", DbType="Float NOT NULL")]
		public double number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[Column(Storage="_priceType", DbType="NVarChar(MAX)")]
		public string priceType
		{
			get
			{
				return this._priceType;
			}
			set
			{
				if ((this._priceType != value))
				{
					this.OnpriceTypeChanging(value);
					this.SendPropertyChanging();
					this._priceType = value;
					this.SendPropertyChanged("priceType");
					this.OnpriceTypeChanged();
				}
			}
		}
		
		[Column(Storage="_money", DbType="Float NOT NULL")]
		public double money
		{
			get
			{
				return this._money;
			}
			set
			{
				if ((this._money != value))
				{
					this.OnmoneyChanging(value);
					this.SendPropertyChanging();
					this._money = value;
					this.SendPropertyChanged("money");
					this.OnmoneyChanged();
				}
			}
		}
		
		[Column(Storage="_technician", DbType="NVarChar(MAX)")]
		public string technician
		{
			get
			{
				return this._technician;
			}
			set
			{
				if ((this._technician != value))
				{
					this.OntechnicianChanging(value);
					this.SendPropertyChanging();
					this._technician = value;
					this.SendPropertyChanged("technician");
					this.OntechnicianChanged();
				}
			}
		}
		
		[Column(Storage="_techType", DbType="NVarChar(MAX)")]
		public string techType
		{
			get
			{
				return this._techType;
			}
			set
			{
				if ((this._techType != value))
				{
					this.OntechTypeChanging(value);
					this.SendPropertyChanging();
					this._techType = value;
					this.SendPropertyChanged("techType");
					this.OntechTypeChanged();
				}
			}
		}
		
		[Column(Storage="_inputTime", DbType="DateTime NOT NULL")]
		public System.DateTime inputTime
		{
			get
			{
				return this._inputTime;
			}
			set
			{
				if ((this._inputTime != value))
				{
					this.OninputTimeChanging(value);
					this.SendPropertyChanging();
					this._inputTime = value;
					this.SendPropertyChanged("inputTime");
					this.OninputTimeChanged();
				}
			}
		}
		
		[Column(Storage="_inputEmployee", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string inputEmployee
		{
			get
			{
				return this._inputEmployee;
			}
			set
			{
				if ((this._inputEmployee != value))
				{
					this.OninputEmployeeChanging(value);
					this.SendPropertyChanging();
					this._inputEmployee = value;
					this.SendPropertyChanged("inputEmployee");
					this.OninputEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_deleteEmployee", DbType="NVarChar(MAX)")]
		public string deleteEmployee
		{
			get
			{
				return this._deleteEmployee;
			}
			set
			{
				if ((this._deleteEmployee != value))
				{
					this.OndeleteEmployeeChanging(value);
					this.SendPropertyChanging();
					this._deleteEmployee = value;
					this.SendPropertyChanged("deleteEmployee");
					this.OndeleteEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_donorEmployee", DbType="NVarChar(MAX)")]
		public string donorEmployee
		{
			get
			{
				return this._donorEmployee;
			}
			set
			{
				if ((this._donorEmployee != value))
				{
					this.OndonorEmployeeChanging(value);
					this.SendPropertyChanging();
					this._donorEmployee = value;
					this.SendPropertyChanged("donorEmployee");
					this.OndonorEmployeeChanged();
				}
			}
		}
		
		[Column(Storage="_comboId", DbType="Int")]
		public System.Nullable<int> comboId
		{
			get
			{
				return this._comboId;
			}
			set
			{
				if ((this._comboId != value))
				{
					this.OncomboIdChanging(value);
					this.SendPropertyChanging();
					this._comboId = value;
					this.SendPropertyChanged("comboId");
					this.OncomboIdChanged();
				}
			}
		}
		
		[Column(Storage="_paid", DbType="Bit NOT NULL")]
		public bool paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[Column(Storage="_accountId", DbType="Int")]
		public System.Nullable<int> accountId
		{
			get
			{
				return this._accountId;
			}
			set
			{
				if ((this._accountId != value))
				{
					this.OnaccountIdChanging(value);
					this.SendPropertyChanging();
					this._accountId = value;
					this.SendPropertyChanged("accountId");
					this.OnaccountIdChanged();
				}
			}
		}
		
		[Column(Storage="_billId", DbType="NVarChar(MAX)")]
		public string billId
		{
			get
			{
				return this._billId;
			}
			set
			{
				if ((this._billId != value))
				{
					this.OnbillIdChanging(value);
					this.SendPropertyChanging();
					this._billId = value;
					this.SendPropertyChanged("billId");
					this.OnbillIdChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_departmentId", DbType="Int")]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this.OndepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("departmentId");
					this.OndepartmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_deleteExplain", DbType="NVarChar(MAX)")]
		public string deleteExplain
		{
			get
			{
				return this._deleteExplain;
			}
			set
			{
				if ((this._deleteExplain != value))
				{
					this.OndeleteExplainChanging(value);
					this.SendPropertyChanging();
					this._deleteExplain = value;
					this.SendPropertyChanged("deleteExplain");
					this.OndeleteExplainChanged();
				}
			}
		}
		
		[Column(Storage="_deleteTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleteTime
		{
			get
			{
				return this._deleteTime;
			}
			set
			{
				if ((this._deleteTime != value))
				{
					this.OndeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._deleteTime = value;
					this.SendPropertyChanged("deleteTime");
					this.OndeleteTimeChanged();
				}
			}
		}
		
		[Column(Storage="_roomId", DbType="NVarChar(MAX)")]
		public string roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[Column(Storage="_donorExplain", DbType="NVarChar(MAX)")]
		public string donorExplain
		{
			get
			{
				return this._donorExplain;
			}
			set
			{
				if ((this._donorExplain != value))
				{
					this.OndonorExplainChanging(value);
					this.SendPropertyChanging();
					this._donorExplain = value;
					this.SendPropertyChanged("donorExplain");
					this.OndonorExplainChanged();
				}
			}
		}
		
		[Column(Storage="_donorTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> donorTime
		{
			get
			{
				return this._donorTime;
			}
			set
			{
				if ((this._donorTime != value))
				{
					this.OndonorTimeChanging(value);
					this.SendPropertyChanging();
					this._donorTime = value;
					this.SendPropertyChanged("donorTime");
					this.OndonorTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.BigCombo")]
	public partial class BigCombo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _menuid;
		
		private System.Nullable<double> _price;
		
		private string _substmenuid;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmenuidChanging(int value);
    partial void OnmenuidChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnsubstmenuidChanging(string value);
    partial void OnsubstmenuidChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public BigCombo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_menuid", DbType="Int NOT NULL")]
		public int menuid
		{
			get
			{
				return this._menuid;
			}
			set
			{
				if ((this._menuid != value))
				{
					this.OnmenuidChanging(value);
					this.SendPropertyChanging();
					this._menuid = value;
					this.SendPropertyChanged("menuid");
					this.OnmenuidChanged();
				}
			}
		}
		
		[Column(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[Column(Storage="_substmenuid", DbType="NVarChar(MAX)")]
		public string substmenuid
		{
			get
			{
				return this._substmenuid;
			}
			set
			{
				if ((this._substmenuid != value))
				{
					this.OnsubstmenuidChanging(value);
					this.SendPropertyChanging();
					this._substmenuid = value;
					this.SendPropertyChanged("substmenuid");
					this.OnsubstmenuidChanged();
				}
			}
		}
		
		[Column(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Options")]
	public partial class Options : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _companyName;
		
		private string _companyCode;
		
		private string _companyPhone;
		
		private string _companyAddress;
		
		private System.Nullable<int> _取消开牌时限;
		
		private System.Nullable<int> _取消开房时限;
		
		private System.Nullable<int> _删除支出时限;
		
		private System.Nullable<int> _退钟时限;
		
		private System.Nullable<int> _技师条数;
		
		private System.Nullable<bool> _启用鞋部;
		
		private System.Nullable<int> _鞋部条数;
		
		private System.Nullable<bool> _启用会员卡密码;
		
		private System.Nullable<bool> _启用结账监控;
		
		private string _结账视频长度;
		
		private System.Nullable<bool> _启用手牌锁;
		
		private System.Nullable<int> _开业时间;
		
		private System.Nullable<bool> _启用客房面板;
		
		private System.Nullable<int> _包房等待时限;
		
		private System.Nullable<int> _下钟提醒;
		
		private System.Nullable<bool> _启用ID手牌锁;
		
		private System.Nullable<bool> _允许手工输入手牌号开牌;
		
		private System.Nullable<bool> _允许手工输入手牌号结账;
		
		private System.Nullable<bool> _录单输入单据编号;
		
		private System.Nullable<bool> _结账未打单锁定手牌;
		
		private System.Nullable<int> _营业报表格式;
		
		private System.Nullable<bool> _结账打印结账单;
		
		private System.Nullable<bool> _结账打印存根单;
		
		private System.Nullable<bool> _结账打印取鞋小票;
		
		private System.Nullable<int> _抹零限制;
		
		private string _手牌锁类型;
		
		private System.Nullable<bool> _自动加收过夜费;
		
		private string _过夜费起点;
		
		private string _过夜费终点;
		
		private System.Nullable<bool> _启用分单结账;
		
		private System.Nullable<bool> _启用员工服务卡;
		
		private System.Nullable<int> _提成报表格式;
		
		private System.Nullable<bool> _台位类型分页显示;
		
		private System.Nullable<bool> _自动感应手牌;
		
		private System.Nullable<bool> _录单区分点钟轮钟;
		
		private System.Nullable<bool> _打印技师派遣单;
		
		private string _会员卡密码类型;
		
		private string _company_Code;
		
		private System.Nullable<bool> _启用大项拆分;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OncompanyPhoneChanging(string value);
    partial void OncompanyPhoneChanged();
    partial void OncompanyAddressChanging(string value);
    partial void OncompanyAddressChanged();
    partial void On取消开牌时限Changing(System.Nullable<int> value);
    partial void On取消开牌时限Changed();
    partial void On取消开房时限Changing(System.Nullable<int> value);
    partial void On取消开房时限Changed();
    partial void On删除支出时限Changing(System.Nullable<int> value);
    partial void On删除支出时限Changed();
    partial void On退钟时限Changing(System.Nullable<int> value);
    partial void On退钟时限Changed();
    partial void On技师条数Changing(System.Nullable<int> value);
    partial void On技师条数Changed();
    partial void On启用鞋部Changing(System.Nullable<bool> value);
    partial void On启用鞋部Changed();
    partial void On鞋部条数Changing(System.Nullable<int> value);
    partial void On鞋部条数Changed();
    partial void On启用会员卡密码Changing(System.Nullable<bool> value);
    partial void On启用会员卡密码Changed();
    partial void On启用结账监控Changing(System.Nullable<bool> value);
    partial void On启用结账监控Changed();
    partial void On结账视频长度Changing(string value);
    partial void On结账视频长度Changed();
    partial void On启用手牌锁Changing(System.Nullable<bool> value);
    partial void On启用手牌锁Changed();
    partial void On开业时间Changing(System.Nullable<int> value);
    partial void On开业时间Changed();
    partial void On启用客房面板Changing(System.Nullable<bool> value);
    partial void On启用客房面板Changed();
    partial void On包房等待时限Changing(System.Nullable<int> value);
    partial void On包房等待时限Changed();
    partial void On下钟提醒Changing(System.Nullable<int> value);
    partial void On下钟提醒Changed();
    partial void On启用ID手牌锁Changing(System.Nullable<bool> value);
    partial void On启用ID手牌锁Changed();
    partial void On允许手工输入手牌号开牌Changing(System.Nullable<bool> value);
    partial void On允许手工输入手牌号开牌Changed();
    partial void On允许手工输入手牌号结账Changing(System.Nullable<bool> value);
    partial void On允许手工输入手牌号结账Changed();
    partial void On录单输入单据编号Changing(System.Nullable<bool> value);
    partial void On录单输入单据编号Changed();
    partial void On结账未打单锁定手牌Changing(System.Nullable<bool> value);
    partial void On结账未打单锁定手牌Changed();
    partial void On营业报表格式Changing(System.Nullable<int> value);
    partial void On营业报表格式Changed();
    partial void On结账打印结账单Changing(System.Nullable<bool> value);
    partial void On结账打印结账单Changed();
    partial void On结账打印存根单Changing(System.Nullable<bool> value);
    partial void On结账打印存根单Changed();
    partial void On结账打印取鞋小票Changing(System.Nullable<bool> value);
    partial void On结账打印取鞋小票Changed();
    partial void On抹零限制Changing(System.Nullable<int> value);
    partial void On抹零限制Changed();
    partial void On手牌锁类型Changing(string value);
    partial void On手牌锁类型Changed();
    partial void On自动加收过夜费Changing(System.Nullable<bool> value);
    partial void On自动加收过夜费Changed();
    partial void On过夜费起点Changing(string value);
    partial void On过夜费起点Changed();
    partial void On过夜费终点Changing(string value);
    partial void On过夜费终点Changed();
    partial void On启用分单结账Changing(System.Nullable<bool> value);
    partial void On启用分单结账Changed();
    partial void On启用员工服务卡Changing(System.Nullable<bool> value);
    partial void On启用员工服务卡Changed();
    partial void On提成报表格式Changing(System.Nullable<int> value);
    partial void On提成报表格式Changed();
    partial void On台位类型分页显示Changing(System.Nullable<bool> value);
    partial void On台位类型分页显示Changed();
    partial void On自动感应手牌Changing(System.Nullable<bool> value);
    partial void On自动感应手牌Changed();
    partial void On录单区分点钟轮钟Changing(System.Nullable<bool> value);
    partial void On录单区分点钟轮钟Changed();
    partial void On打印技师派遣单Changing(System.Nullable<bool> value);
    partial void On打印技师派遣单Changed();
    partial void On会员卡密码类型Changing(string value);
    partial void On会员卡密码类型Changed();
    partial void Oncompany_CodeChanging(string value);
    partial void Oncompany_CodeChanged();
    partial void On启用大项拆分Changing(System.Nullable<bool> value);
    partial void On启用大项拆分Changed();
    #endregion
		
		public Options()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_companyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_companyCode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[Column(Storage="_companyPhone", DbType="NVarChar(MAX)")]
		public string companyPhone
		{
			get
			{
				return this._companyPhone;
			}
			set
			{
				if ((this._companyPhone != value))
				{
					this.OncompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._companyPhone = value;
					this.SendPropertyChanged("companyPhone");
					this.OncompanyPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_companyAddress", DbType="NVarChar(MAX)")]
		public string companyAddress
		{
			get
			{
				return this._companyAddress;
			}
			set
			{
				if ((this._companyAddress != value))
				{
					this.OncompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._companyAddress = value;
					this.SendPropertyChanged("companyAddress");
					this.OncompanyAddressChanged();
				}
			}
		}
		
		[Column(Storage="_取消开牌时限", DbType="Int")]
		public System.Nullable<int> 取消开牌时限
		{
			get
			{
				return this._取消开牌时限;
			}
			set
			{
				if ((this._取消开牌时限 != value))
				{
					this.On取消开牌时限Changing(value);
					this.SendPropertyChanging();
					this._取消开牌时限 = value;
					this.SendPropertyChanged("取消开牌时限");
					this.On取消开牌时限Changed();
				}
			}
		}
		
		[Column(Storage="_取消开房时限", DbType="Int")]
		public System.Nullable<int> 取消开房时限
		{
			get
			{
				return this._取消开房时限;
			}
			set
			{
				if ((this._取消开房时限 != value))
				{
					this.On取消开房时限Changing(value);
					this.SendPropertyChanging();
					this._取消开房时限 = value;
					this.SendPropertyChanged("取消开房时限");
					this.On取消开房时限Changed();
				}
			}
		}
		
		[Column(Storage="_删除支出时限", DbType="Int")]
		public System.Nullable<int> 删除支出时限
		{
			get
			{
				return this._删除支出时限;
			}
			set
			{
				if ((this._删除支出时限 != value))
				{
					this.On删除支出时限Changing(value);
					this.SendPropertyChanging();
					this._删除支出时限 = value;
					this.SendPropertyChanged("删除支出时限");
					this.On删除支出时限Changed();
				}
			}
		}
		
		[Column(Storage="_退钟时限", DbType="Int")]
		public System.Nullable<int> 退钟时限
		{
			get
			{
				return this._退钟时限;
			}
			set
			{
				if ((this._退钟时限 != value))
				{
					this.On退钟时限Changing(value);
					this.SendPropertyChanging();
					this._退钟时限 = value;
					this.SendPropertyChanged("退钟时限");
					this.On退钟时限Changed();
				}
			}
		}
		
		[Column(Storage="_技师条数", DbType="Int")]
		public System.Nullable<int> 技师条数
		{
			get
			{
				return this._技师条数;
			}
			set
			{
				if ((this._技师条数 != value))
				{
					this.On技师条数Changing(value);
					this.SendPropertyChanging();
					this._技师条数 = value;
					this.SendPropertyChanged("技师条数");
					this.On技师条数Changed();
				}
			}
		}
		
		[Column(Storage="_启用鞋部", DbType="Bit")]
		public System.Nullable<bool> 启用鞋部
		{
			get
			{
				return this._启用鞋部;
			}
			set
			{
				if ((this._启用鞋部 != value))
				{
					this.On启用鞋部Changing(value);
					this.SendPropertyChanging();
					this._启用鞋部 = value;
					this.SendPropertyChanged("启用鞋部");
					this.On启用鞋部Changed();
				}
			}
		}
		
		[Column(Storage="_鞋部条数", DbType="Int")]
		public System.Nullable<int> 鞋部条数
		{
			get
			{
				return this._鞋部条数;
			}
			set
			{
				if ((this._鞋部条数 != value))
				{
					this.On鞋部条数Changing(value);
					this.SendPropertyChanging();
					this._鞋部条数 = value;
					this.SendPropertyChanged("鞋部条数");
					this.On鞋部条数Changed();
				}
			}
		}
		
		[Column(Storage="_启用会员卡密码", DbType="Bit")]
		public System.Nullable<bool> 启用会员卡密码
		{
			get
			{
				return this._启用会员卡密码;
			}
			set
			{
				if ((this._启用会员卡密码 != value))
				{
					this.On启用会员卡密码Changing(value);
					this.SendPropertyChanging();
					this._启用会员卡密码 = value;
					this.SendPropertyChanged("启用会员卡密码");
					this.On启用会员卡密码Changed();
				}
			}
		}
		
		[Column(Storage="_启用结账监控", DbType="Bit")]
		public System.Nullable<bool> 启用结账监控
		{
			get
			{
				return this._启用结账监控;
			}
			set
			{
				if ((this._启用结账监控 != value))
				{
					this.On启用结账监控Changing(value);
					this.SendPropertyChanging();
					this._启用结账监控 = value;
					this.SendPropertyChanged("启用结账监控");
					this.On启用结账监控Changed();
				}
			}
		}
		
		[Column(Storage="_结账视频长度", DbType="NVarChar(MAX)")]
		public string 结账视频长度
		{
			get
			{
				return this._结账视频长度;
			}
			set
			{
				if ((this._结账视频长度 != value))
				{
					this.On结账视频长度Changing(value);
					this.SendPropertyChanging();
					this._结账视频长度 = value;
					this.SendPropertyChanged("结账视频长度");
					this.On结账视频长度Changed();
				}
			}
		}
		
		[Column(Storage="_启用手牌锁", DbType="Bit")]
		public System.Nullable<bool> 启用手牌锁
		{
			get
			{
				return this._启用手牌锁;
			}
			set
			{
				if ((this._启用手牌锁 != value))
				{
					this.On启用手牌锁Changing(value);
					this.SendPropertyChanging();
					this._启用手牌锁 = value;
					this.SendPropertyChanged("启用手牌锁");
					this.On启用手牌锁Changed();
				}
			}
		}
		
		[Column(Storage="_开业时间", DbType="Int")]
		public System.Nullable<int> 开业时间
		{
			get
			{
				return this._开业时间;
			}
			set
			{
				if ((this._开业时间 != value))
				{
					this.On开业时间Changing(value);
					this.SendPropertyChanging();
					this._开业时间 = value;
					this.SendPropertyChanged("开业时间");
					this.On开业时间Changed();
				}
			}
		}
		
		[Column(Storage="_启用客房面板", DbType="Bit")]
		public System.Nullable<bool> 启用客房面板
		{
			get
			{
				return this._启用客房面板;
			}
			set
			{
				if ((this._启用客房面板 != value))
				{
					this.On启用客房面板Changing(value);
					this.SendPropertyChanging();
					this._启用客房面板 = value;
					this.SendPropertyChanged("启用客房面板");
					this.On启用客房面板Changed();
				}
			}
		}
		
		[Column(Storage="_包房等待时限", DbType="Int")]
		public System.Nullable<int> 包房等待时限
		{
			get
			{
				return this._包房等待时限;
			}
			set
			{
				if ((this._包房等待时限 != value))
				{
					this.On包房等待时限Changing(value);
					this.SendPropertyChanging();
					this._包房等待时限 = value;
					this.SendPropertyChanged("包房等待时限");
					this.On包房等待时限Changed();
				}
			}
		}
		
		[Column(Storage="_下钟提醒", DbType="Int")]
		public System.Nullable<int> 下钟提醒
		{
			get
			{
				return this._下钟提醒;
			}
			set
			{
				if ((this._下钟提醒 != value))
				{
					this.On下钟提醒Changing(value);
					this.SendPropertyChanging();
					this._下钟提醒 = value;
					this.SendPropertyChanged("下钟提醒");
					this.On下钟提醒Changed();
				}
			}
		}
		
		[Column(Storage="_启用ID手牌锁", DbType="Bit")]
		public System.Nullable<bool> 启用ID手牌锁
		{
			get
			{
				return this._启用ID手牌锁;
			}
			set
			{
				if ((this._启用ID手牌锁 != value))
				{
					this.On启用ID手牌锁Changing(value);
					this.SendPropertyChanging();
					this._启用ID手牌锁 = value;
					this.SendPropertyChanged("启用ID手牌锁");
					this.On启用ID手牌锁Changed();
				}
			}
		}
		
		[Column(Storage="_允许手工输入手牌号开牌", DbType="Bit")]
		public System.Nullable<bool> 允许手工输入手牌号开牌
		{
			get
			{
				return this._允许手工输入手牌号开牌;
			}
			set
			{
				if ((this._允许手工输入手牌号开牌 != value))
				{
					this.On允许手工输入手牌号开牌Changing(value);
					this.SendPropertyChanging();
					this._允许手工输入手牌号开牌 = value;
					this.SendPropertyChanged("允许手工输入手牌号开牌");
					this.On允许手工输入手牌号开牌Changed();
				}
			}
		}
		
		[Column(Storage="_允许手工输入手牌号结账", DbType="Bit")]
		public System.Nullable<bool> 允许手工输入手牌号结账
		{
			get
			{
				return this._允许手工输入手牌号结账;
			}
			set
			{
				if ((this._允许手工输入手牌号结账 != value))
				{
					this.On允许手工输入手牌号结账Changing(value);
					this.SendPropertyChanging();
					this._允许手工输入手牌号结账 = value;
					this.SendPropertyChanged("允许手工输入手牌号结账");
					this.On允许手工输入手牌号结账Changed();
				}
			}
		}
		
		[Column(Storage="_录单输入单据编号", DbType="Bit")]
		public System.Nullable<bool> 录单输入单据编号
		{
			get
			{
				return this._录单输入单据编号;
			}
			set
			{
				if ((this._录单输入单据编号 != value))
				{
					this.On录单输入单据编号Changing(value);
					this.SendPropertyChanging();
					this._录单输入单据编号 = value;
					this.SendPropertyChanged("录单输入单据编号");
					this.On录单输入单据编号Changed();
				}
			}
		}
		
		[Column(Storage="_结账未打单锁定手牌", DbType="Bit")]
		public System.Nullable<bool> 结账未打单锁定手牌
		{
			get
			{
				return this._结账未打单锁定手牌;
			}
			set
			{
				if ((this._结账未打单锁定手牌 != value))
				{
					this.On结账未打单锁定手牌Changing(value);
					this.SendPropertyChanging();
					this._结账未打单锁定手牌 = value;
					this.SendPropertyChanged("结账未打单锁定手牌");
					this.On结账未打单锁定手牌Changed();
				}
			}
		}
		
		[Column(Storage="_营业报表格式", DbType="Int")]
		public System.Nullable<int> 营业报表格式
		{
			get
			{
				return this._营业报表格式;
			}
			set
			{
				if ((this._营业报表格式 != value))
				{
					this.On营业报表格式Changing(value);
					this.SendPropertyChanging();
					this._营业报表格式 = value;
					this.SendPropertyChanged("营业报表格式");
					this.On营业报表格式Changed();
				}
			}
		}
		
		[Column(Storage="_结账打印结账单", DbType="Bit")]
		public System.Nullable<bool> 结账打印结账单
		{
			get
			{
				return this._结账打印结账单;
			}
			set
			{
				if ((this._结账打印结账单 != value))
				{
					this.On结账打印结账单Changing(value);
					this.SendPropertyChanging();
					this._结账打印结账单 = value;
					this.SendPropertyChanged("结账打印结账单");
					this.On结账打印结账单Changed();
				}
			}
		}
		
		[Column(Storage="_结账打印存根单", DbType="Bit")]
		public System.Nullable<bool> 结账打印存根单
		{
			get
			{
				return this._结账打印存根单;
			}
			set
			{
				if ((this._结账打印存根单 != value))
				{
					this.On结账打印存根单Changing(value);
					this.SendPropertyChanging();
					this._结账打印存根单 = value;
					this.SendPropertyChanged("结账打印存根单");
					this.On结账打印存根单Changed();
				}
			}
		}
		
		[Column(Storage="_结账打印取鞋小票", DbType="Bit")]
		public System.Nullable<bool> 结账打印取鞋小票
		{
			get
			{
				return this._结账打印取鞋小票;
			}
			set
			{
				if ((this._结账打印取鞋小票 != value))
				{
					this.On结账打印取鞋小票Changing(value);
					this.SendPropertyChanging();
					this._结账打印取鞋小票 = value;
					this.SendPropertyChanged("结账打印取鞋小票");
					this.On结账打印取鞋小票Changed();
				}
			}
		}
		
		[Column(Storage="_抹零限制", DbType="Int")]
		public System.Nullable<int> 抹零限制
		{
			get
			{
				return this._抹零限制;
			}
			set
			{
				if ((this._抹零限制 != value))
				{
					this.On抹零限制Changing(value);
					this.SendPropertyChanging();
					this._抹零限制 = value;
					this.SendPropertyChanged("抹零限制");
					this.On抹零限制Changed();
				}
			}
		}
		
		[Column(Storage="_手牌锁类型", DbType="NVarChar(MAX)")]
		public string 手牌锁类型
		{
			get
			{
				return this._手牌锁类型;
			}
			set
			{
				if ((this._手牌锁类型 != value))
				{
					this.On手牌锁类型Changing(value);
					this.SendPropertyChanging();
					this._手牌锁类型 = value;
					this.SendPropertyChanged("手牌锁类型");
					this.On手牌锁类型Changed();
				}
			}
		}
		
		[Column(Storage="_自动加收过夜费", DbType="Bit")]
		public System.Nullable<bool> 自动加收过夜费
		{
			get
			{
				return this._自动加收过夜费;
			}
			set
			{
				if ((this._自动加收过夜费 != value))
				{
					this.On自动加收过夜费Changing(value);
					this.SendPropertyChanging();
					this._自动加收过夜费 = value;
					this.SendPropertyChanged("自动加收过夜费");
					this.On自动加收过夜费Changed();
				}
			}
		}
		
		[Column(Storage="_过夜费起点", DbType="NVarChar(MAX)")]
		public string 过夜费起点
		{
			get
			{
				return this._过夜费起点;
			}
			set
			{
				if ((this._过夜费起点 != value))
				{
					this.On过夜费起点Changing(value);
					this.SendPropertyChanging();
					this._过夜费起点 = value;
					this.SendPropertyChanged("过夜费起点");
					this.On过夜费起点Changed();
				}
			}
		}
		
		[Column(Storage="_过夜费终点", DbType="NVarChar(MAX)")]
		public string 过夜费终点
		{
			get
			{
				return this._过夜费终点;
			}
			set
			{
				if ((this._过夜费终点 != value))
				{
					this.On过夜费终点Changing(value);
					this.SendPropertyChanging();
					this._过夜费终点 = value;
					this.SendPropertyChanged("过夜费终点");
					this.On过夜费终点Changed();
				}
			}
		}
		
		[Column(Storage="_启用分单结账", DbType="Bit")]
		public System.Nullable<bool> 启用分单结账
		{
			get
			{
				return this._启用分单结账;
			}
			set
			{
				if ((this._启用分单结账 != value))
				{
					this.On启用分单结账Changing(value);
					this.SendPropertyChanging();
					this._启用分单结账 = value;
					this.SendPropertyChanged("启用分单结账");
					this.On启用分单结账Changed();
				}
			}
		}
		
		[Column(Storage="_启用员工服务卡", DbType="Bit")]
		public System.Nullable<bool> 启用员工服务卡
		{
			get
			{
				return this._启用员工服务卡;
			}
			set
			{
				if ((this._启用员工服务卡 != value))
				{
					this.On启用员工服务卡Changing(value);
					this.SendPropertyChanging();
					this._启用员工服务卡 = value;
					this.SendPropertyChanged("启用员工服务卡");
					this.On启用员工服务卡Changed();
				}
			}
		}
		
		[Column(Storage="_提成报表格式", DbType="Int")]
		public System.Nullable<int> 提成报表格式
		{
			get
			{
				return this._提成报表格式;
			}
			set
			{
				if ((this._提成报表格式 != value))
				{
					this.On提成报表格式Changing(value);
					this.SendPropertyChanging();
					this._提成报表格式 = value;
					this.SendPropertyChanged("提成报表格式");
					this.On提成报表格式Changed();
				}
			}
		}
		
		[Column(Storage="_台位类型分页显示", DbType="Bit")]
		public System.Nullable<bool> 台位类型分页显示
		{
			get
			{
				return this._台位类型分页显示;
			}
			set
			{
				if ((this._台位类型分页显示 != value))
				{
					this.On台位类型分页显示Changing(value);
					this.SendPropertyChanging();
					this._台位类型分页显示 = value;
					this.SendPropertyChanged("台位类型分页显示");
					this.On台位类型分页显示Changed();
				}
			}
		}
		
		[Column(Storage="_自动感应手牌", DbType="Bit")]
		public System.Nullable<bool> 自动感应手牌
		{
			get
			{
				return this._自动感应手牌;
			}
			set
			{
				if ((this._自动感应手牌 != value))
				{
					this.On自动感应手牌Changing(value);
					this.SendPropertyChanging();
					this._自动感应手牌 = value;
					this.SendPropertyChanged("自动感应手牌");
					this.On自动感应手牌Changed();
				}
			}
		}
		
		[Column(Storage="_录单区分点钟轮钟", DbType="Bit")]
		public System.Nullable<bool> 录单区分点钟轮钟
		{
			get
			{
				return this._录单区分点钟轮钟;
			}
			set
			{
				if ((this._录单区分点钟轮钟 != value))
				{
					this.On录单区分点钟轮钟Changing(value);
					this.SendPropertyChanging();
					this._录单区分点钟轮钟 = value;
					this.SendPropertyChanged("录单区分点钟轮钟");
					this.On录单区分点钟轮钟Changed();
				}
			}
		}
		
		[Column(Storage="_打印技师派遣单", DbType="Bit")]
		public System.Nullable<bool> 打印技师派遣单
		{
			get
			{
				return this._打印技师派遣单;
			}
			set
			{
				if ((this._打印技师派遣单 != value))
				{
					this.On打印技师派遣单Changing(value);
					this.SendPropertyChanging();
					this._打印技师派遣单 = value;
					this.SendPropertyChanged("打印技师派遣单");
					this.On打印技师派遣单Changed();
				}
			}
		}
		
		[Column(Storage="_会员卡密码类型", DbType="NVarChar(MAX)")]
		public string 会员卡密码类型
		{
			get
			{
				return this._会员卡密码类型;
			}
			set
			{
				if ((this._会员卡密码类型 != value))
				{
					this.On会员卡密码类型Changing(value);
					this.SendPropertyChanging();
					this._会员卡密码类型 = value;
					this.SendPropertyChanged("会员卡密码类型");
					this.On会员卡密码类型Changed();
				}
			}
		}
		
		[Column(Storage="_company_Code", DbType="NVarChar(MAX)")]
		public string company_Code
		{
			get
			{
				return this._company_Code;
			}
			set
			{
				if ((this._company_Code != value))
				{
					this.Oncompany_CodeChanging(value);
					this.SendPropertyChanging();
					this._company_Code = value;
					this.SendPropertyChanged("company_Code");
					this.Oncompany_CodeChanged();
				}
			}
		}
		
		[Column(Storage="_启用大项拆分", DbType="Bit")]
		public System.Nullable<bool> 启用大项拆分
		{
			get
			{
				return this._启用大项拆分;
			}
			set
			{
				if ((this._启用大项拆分 != value))
				{
					this.On启用大项拆分Changing(value);
					this.SendPropertyChanging();
					this._启用大项拆分 = value;
					this.SendPropertyChanged("启用大项拆分");
					this.On启用大项拆分Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.GroupBuyPromotion")]
	public partial class GroupBuyPromotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _menuIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmenuIdsChanging(string value);
    partial void OnmenuIdsChanged();
    #endregion
		
		public GroupBuyPromotion()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_menuIds", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string menuIds
		{
			get
			{
				return this._menuIds;
			}
			set
			{
				if ((this._menuIds != value))
				{
					this.OnmenuIdsChanging(value);
					this.SendPropertyChanging();
					this._menuIds = value;
					this.SendPropertyChanged("menuIds");
					this.OnmenuIdsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Authority")]
	public partial class Authority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _emplyeeId;
		
		private System.Nullable<int> _jobId;
		
		private System.Nullable<bool> _开牌;
		
		private System.Nullable<bool> _取消开牌;
		
		private System.Nullable<bool> _更换手牌;
		
		private System.Nullable<bool> _锁定解锁;
		
		private System.Nullable<bool> _解除警告;
		
		private System.Nullable<bool> _停用启用;
		
		private System.Nullable<bool> _添加备注;
		
		private System.Nullable<bool> _挂失手牌;
		
		private System.Nullable<bool> _完整点单;
		
		private System.Nullable<bool> _可见本人点单;
		
		private System.Nullable<bool> _退单;
		
		private System.Nullable<bool> _手工打折;
		
		private System.Nullable<bool> _签字免单;
		
		private System.Nullable<bool> _转账;
		
		private System.Nullable<bool> _重新结账;
		
		private System.Nullable<bool> _结账;
		
		private System.Nullable<bool> _技师管理;
		
		private System.Nullable<bool> _收银汇总统计;
		
		private System.Nullable<bool> _包房管理;
		
		private System.Nullable<bool> _收银单据查询;
		
		private System.Nullable<bool> _录单汇总;
		
		private System.Nullable<bool> _营业信息查看;
		
		private System.Nullable<bool> _售卡;
		
		private System.Nullable<bool> _充值;
		
		private System.Nullable<bool> _挂失;
		
		private System.Nullable<bool> _补卡;
		
		private System.Nullable<bool> _读卡;
		
		private System.Nullable<bool> _扣卡;
		
		private System.Nullable<bool> _卡入库;
		
		private System.Nullable<bool> _异常状况统计;
		
		private System.Nullable<bool> _提成统计;
		
		private System.Nullable<bool> _手工打折汇总;
		
		private System.Nullable<bool> _项目报表;
		
		private System.Nullable<bool> _信用卡统计;
		
		private System.Nullable<bool> _营业报表;
		
		private System.Nullable<bool> _退免单汇总;
		
		private System.Nullable<bool> _支出统计;
		
		private System.Nullable<bool> _收银员收款统计;
		
		private System.Nullable<bool> _月报表;
		
		private System.Nullable<bool> _往来单位账目;
		
		private System.Nullable<bool> _会员积分设置;
		
		private System.Nullable<bool> _优惠方案;
		
		private System.Nullable<bool> _会员分析;
		
		private System.Nullable<bool> _会员管理;
		
		private System.Nullable<bool> _会员消费统计;
		
		private System.Nullable<bool> _会员售卡及充值统计;
		
		private System.Nullable<bool> _手牌管理;
		
		private System.Nullable<bool> _券类管理;
		
		private System.Nullable<bool> _客户管理;
		
		private System.Nullable<bool> _项目档案管理;
		
		private System.Nullable<bool> _客房管理;
		
		private System.Nullable<bool> _员工管理;
		
		private System.Nullable<bool> _权限管理;
		
		private System.Nullable<bool> _套餐管理;
		
		private System.Nullable<bool> _库存参数;
		
		private System.Nullable<bool> _仓库设定;
		
		private System.Nullable<bool> _供应商管理;
		
		private System.Nullable<bool> _进货入库;
		
		private System.Nullable<bool> _现有库存;
		
		private System.Nullable<bool> _调货补货;
		
		private System.Nullable<bool> _盘点清册;
		
		private System.Nullable<bool> _盘点调整;
		
		private System.Nullable<bool> _应付账款;
		
		private System.Nullable<bool> _系统设置;
		
		private System.Nullable<bool> _数据优化;
		
		private System.Nullable<bool> _收银报表;
		
		private System.Nullable<bool> _微信赠送;
		
		private System.Nullable<bool> _团购打折;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemplyeeIdChanging(string value);
    partial void OnemplyeeIdChanged();
    partial void OnjobIdChanging(System.Nullable<int> value);
    partial void OnjobIdChanged();
    partial void On开牌Changing(System.Nullable<bool> value);
    partial void On开牌Changed();
    partial void On取消开牌Changing(System.Nullable<bool> value);
    partial void On取消开牌Changed();
    partial void On更换手牌Changing(System.Nullable<bool> value);
    partial void On更换手牌Changed();
    partial void On锁定解锁Changing(System.Nullable<bool> value);
    partial void On锁定解锁Changed();
    partial void On解除警告Changing(System.Nullable<bool> value);
    partial void On解除警告Changed();
    partial void On停用启用Changing(System.Nullable<bool> value);
    partial void On停用启用Changed();
    partial void On添加备注Changing(System.Nullable<bool> value);
    partial void On添加备注Changed();
    partial void On挂失手牌Changing(System.Nullable<bool> value);
    partial void On挂失手牌Changed();
    partial void On完整点单Changing(System.Nullable<bool> value);
    partial void On完整点单Changed();
    partial void On可见本人点单Changing(System.Nullable<bool> value);
    partial void On可见本人点单Changed();
    partial void On退单Changing(System.Nullable<bool> value);
    partial void On退单Changed();
    partial void On手工打折Changing(System.Nullable<bool> value);
    partial void On手工打折Changed();
    partial void On签字免单Changing(System.Nullable<bool> value);
    partial void On签字免单Changed();
    partial void On转账Changing(System.Nullable<bool> value);
    partial void On转账Changed();
    partial void On重新结账Changing(System.Nullable<bool> value);
    partial void On重新结账Changed();
    partial void On结账Changing(System.Nullable<bool> value);
    partial void On结账Changed();
    partial void On技师管理Changing(System.Nullable<bool> value);
    partial void On技师管理Changed();
    partial void On收银汇总统计Changing(System.Nullable<bool> value);
    partial void On收银汇总统计Changed();
    partial void On包房管理Changing(System.Nullable<bool> value);
    partial void On包房管理Changed();
    partial void On收银单据查询Changing(System.Nullable<bool> value);
    partial void On收银单据查询Changed();
    partial void On录单汇总Changing(System.Nullable<bool> value);
    partial void On录单汇总Changed();
    partial void On营业信息查看Changing(System.Nullable<bool> value);
    partial void On营业信息查看Changed();
    partial void On售卡Changing(System.Nullable<bool> value);
    partial void On售卡Changed();
    partial void On充值Changing(System.Nullable<bool> value);
    partial void On充值Changed();
    partial void On挂失Changing(System.Nullable<bool> value);
    partial void On挂失Changed();
    partial void On补卡Changing(System.Nullable<bool> value);
    partial void On补卡Changed();
    partial void On读卡Changing(System.Nullable<bool> value);
    partial void On读卡Changed();
    partial void On扣卡Changing(System.Nullable<bool> value);
    partial void On扣卡Changed();
    partial void On卡入库Changing(System.Nullable<bool> value);
    partial void On卡入库Changed();
    partial void On异常状况统计Changing(System.Nullable<bool> value);
    partial void On异常状况统计Changed();
    partial void On提成统计Changing(System.Nullable<bool> value);
    partial void On提成统计Changed();
    partial void On手工打折汇总Changing(System.Nullable<bool> value);
    partial void On手工打折汇总Changed();
    partial void On项目报表Changing(System.Nullable<bool> value);
    partial void On项目报表Changed();
    partial void On信用卡统计Changing(System.Nullable<bool> value);
    partial void On信用卡统计Changed();
    partial void On营业报表Changing(System.Nullable<bool> value);
    partial void On营业报表Changed();
    partial void On退免单汇总Changing(System.Nullable<bool> value);
    partial void On退免单汇总Changed();
    partial void On支出统计Changing(System.Nullable<bool> value);
    partial void On支出统计Changed();
    partial void On收银员收款统计Changing(System.Nullable<bool> value);
    partial void On收银员收款统计Changed();
    partial void On月报表Changing(System.Nullable<bool> value);
    partial void On月报表Changed();
    partial void On往来单位账目Changing(System.Nullable<bool> value);
    partial void On往来单位账目Changed();
    partial void On会员积分设置Changing(System.Nullable<bool> value);
    partial void On会员积分设置Changed();
    partial void On优惠方案Changing(System.Nullable<bool> value);
    partial void On优惠方案Changed();
    partial void On会员分析Changing(System.Nullable<bool> value);
    partial void On会员分析Changed();
    partial void On会员管理Changing(System.Nullable<bool> value);
    partial void On会员管理Changed();
    partial void On会员消费统计Changing(System.Nullable<bool> value);
    partial void On会员消费统计Changed();
    partial void On会员售卡及充值统计Changing(System.Nullable<bool> value);
    partial void On会员售卡及充值统计Changed();
    partial void On手牌管理Changing(System.Nullable<bool> value);
    partial void On手牌管理Changed();
    partial void On券类管理Changing(System.Nullable<bool> value);
    partial void On券类管理Changed();
    partial void On客户管理Changing(System.Nullable<bool> value);
    partial void On客户管理Changed();
    partial void On项目档案管理Changing(System.Nullable<bool> value);
    partial void On项目档案管理Changed();
    partial void On客房管理Changing(System.Nullable<bool> value);
    partial void On客房管理Changed();
    partial void On员工管理Changing(System.Nullable<bool> value);
    partial void On员工管理Changed();
    partial void On权限管理Changing(System.Nullable<bool> value);
    partial void On权限管理Changed();
    partial void On套餐管理Changing(System.Nullable<bool> value);
    partial void On套餐管理Changed();
    partial void On库存参数Changing(System.Nullable<bool> value);
    partial void On库存参数Changed();
    partial void On仓库设定Changing(System.Nullable<bool> value);
    partial void On仓库设定Changed();
    partial void On供应商管理Changing(System.Nullable<bool> value);
    partial void On供应商管理Changed();
    partial void On进货入库Changing(System.Nullable<bool> value);
    partial void On进货入库Changed();
    partial void On现有库存Changing(System.Nullable<bool> value);
    partial void On现有库存Changed();
    partial void On调货补货Changing(System.Nullable<bool> value);
    partial void On调货补货Changed();
    partial void On盘点清册Changing(System.Nullable<bool> value);
    partial void On盘点清册Changed();
    partial void On盘点调整Changing(System.Nullable<bool> value);
    partial void On盘点调整Changed();
    partial void On应付账款Changing(System.Nullable<bool> value);
    partial void On应付账款Changed();
    partial void On系统设置Changing(System.Nullable<bool> value);
    partial void On系统设置Changed();
    partial void On数据优化Changing(System.Nullable<bool> value);
    partial void On数据优化Changed();
    partial void On收银报表Changing(System.Nullable<bool> value);
    partial void On收银报表Changed();
    partial void On微信赠送Changing(System.Nullable<bool> value);
    partial void On微信赠送Changed();
    partial void On团购打折Changing(System.Nullable<bool> value);
    partial void On团购打折Changed();
    #endregion
		
		public Authority()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_emplyeeId", DbType="VarChar(10)")]
		public string emplyeeId
		{
			get
			{
				return this._emplyeeId;
			}
			set
			{
				if ((this._emplyeeId != value))
				{
					this.OnemplyeeIdChanging(value);
					this.SendPropertyChanging();
					this._emplyeeId = value;
					this.SendPropertyChanged("emplyeeId");
					this.OnemplyeeIdChanged();
				}
			}
		}
		
		[Column(Storage="_jobId", DbType="Int")]
		public System.Nullable<int> jobId
		{
			get
			{
				return this._jobId;
			}
			set
			{
				if ((this._jobId != value))
				{
					this.OnjobIdChanging(value);
					this.SendPropertyChanging();
					this._jobId = value;
					this.SendPropertyChanged("jobId");
					this.OnjobIdChanged();
				}
			}
		}
		
		[Column(Storage="_开牌", DbType="Bit")]
		public System.Nullable<bool> 开牌
		{
			get
			{
				return this._开牌;
			}
			set
			{
				if ((this._开牌 != value))
				{
					this.On开牌Changing(value);
					this.SendPropertyChanging();
					this._开牌 = value;
					this.SendPropertyChanged("开牌");
					this.On开牌Changed();
				}
			}
		}
		
		[Column(Storage="_取消开牌", DbType="Bit")]
		public System.Nullable<bool> 取消开牌
		{
			get
			{
				return this._取消开牌;
			}
			set
			{
				if ((this._取消开牌 != value))
				{
					this.On取消开牌Changing(value);
					this.SendPropertyChanging();
					this._取消开牌 = value;
					this.SendPropertyChanged("取消开牌");
					this.On取消开牌Changed();
				}
			}
		}
		
		[Column(Storage="_更换手牌", DbType="Bit")]
		public System.Nullable<bool> 更换手牌
		{
			get
			{
				return this._更换手牌;
			}
			set
			{
				if ((this._更换手牌 != value))
				{
					this.On更换手牌Changing(value);
					this.SendPropertyChanging();
					this._更换手牌 = value;
					this.SendPropertyChanged("更换手牌");
					this.On更换手牌Changed();
				}
			}
		}
		
		[Column(Storage="_锁定解锁", DbType="Bit")]
		public System.Nullable<bool> 锁定解锁
		{
			get
			{
				return this._锁定解锁;
			}
			set
			{
				if ((this._锁定解锁 != value))
				{
					this.On锁定解锁Changing(value);
					this.SendPropertyChanging();
					this._锁定解锁 = value;
					this.SendPropertyChanged("锁定解锁");
					this.On锁定解锁Changed();
				}
			}
		}
		
		[Column(Storage="_解除警告", DbType="Bit")]
		public System.Nullable<bool> 解除警告
		{
			get
			{
				return this._解除警告;
			}
			set
			{
				if ((this._解除警告 != value))
				{
					this.On解除警告Changing(value);
					this.SendPropertyChanging();
					this._解除警告 = value;
					this.SendPropertyChanged("解除警告");
					this.On解除警告Changed();
				}
			}
		}
		
		[Column(Storage="_停用启用", DbType="Bit")]
		public System.Nullable<bool> 停用启用
		{
			get
			{
				return this._停用启用;
			}
			set
			{
				if ((this._停用启用 != value))
				{
					this.On停用启用Changing(value);
					this.SendPropertyChanging();
					this._停用启用 = value;
					this.SendPropertyChanged("停用启用");
					this.On停用启用Changed();
				}
			}
		}
		
		[Column(Storage="_添加备注", DbType="Bit")]
		public System.Nullable<bool> 添加备注
		{
			get
			{
				return this._添加备注;
			}
			set
			{
				if ((this._添加备注 != value))
				{
					this.On添加备注Changing(value);
					this.SendPropertyChanging();
					this._添加备注 = value;
					this.SendPropertyChanged("添加备注");
					this.On添加备注Changed();
				}
			}
		}
		
		[Column(Storage="_挂失手牌", DbType="Bit")]
		public System.Nullable<bool> 挂失手牌
		{
			get
			{
				return this._挂失手牌;
			}
			set
			{
				if ((this._挂失手牌 != value))
				{
					this.On挂失手牌Changing(value);
					this.SendPropertyChanging();
					this._挂失手牌 = value;
					this.SendPropertyChanged("挂失手牌");
					this.On挂失手牌Changed();
				}
			}
		}
		
		[Column(Storage="_完整点单", DbType="Bit")]
		public System.Nullable<bool> 完整点单
		{
			get
			{
				return this._完整点单;
			}
			set
			{
				if ((this._完整点单 != value))
				{
					this.On完整点单Changing(value);
					this.SendPropertyChanging();
					this._完整点单 = value;
					this.SendPropertyChanged("完整点单");
					this.On完整点单Changed();
				}
			}
		}
		
		[Column(Storage="_可见本人点单", DbType="Bit")]
		public System.Nullable<bool> 可见本人点单
		{
			get
			{
				return this._可见本人点单;
			}
			set
			{
				if ((this._可见本人点单 != value))
				{
					this.On可见本人点单Changing(value);
					this.SendPropertyChanging();
					this._可见本人点单 = value;
					this.SendPropertyChanged("可见本人点单");
					this.On可见本人点单Changed();
				}
			}
		}
		
		[Column(Storage="_退单", DbType="Bit")]
		public System.Nullable<bool> 退单
		{
			get
			{
				return this._退单;
			}
			set
			{
				if ((this._退单 != value))
				{
					this.On退单Changing(value);
					this.SendPropertyChanging();
					this._退单 = value;
					this.SendPropertyChanged("退单");
					this.On退单Changed();
				}
			}
		}
		
		[Column(Storage="_手工打折", DbType="Bit")]
		public System.Nullable<bool> 手工打折
		{
			get
			{
				return this._手工打折;
			}
			set
			{
				if ((this._手工打折 != value))
				{
					this.On手工打折Changing(value);
					this.SendPropertyChanging();
					this._手工打折 = value;
					this.SendPropertyChanged("手工打折");
					this.On手工打折Changed();
				}
			}
		}
		
		[Column(Storage="_签字免单", DbType="Bit")]
		public System.Nullable<bool> 签字免单
		{
			get
			{
				return this._签字免单;
			}
			set
			{
				if ((this._签字免单 != value))
				{
					this.On签字免单Changing(value);
					this.SendPropertyChanging();
					this._签字免单 = value;
					this.SendPropertyChanged("签字免单");
					this.On签字免单Changed();
				}
			}
		}
		
		[Column(Storage="_转账", DbType="Bit")]
		public System.Nullable<bool> 转账
		{
			get
			{
				return this._转账;
			}
			set
			{
				if ((this._转账 != value))
				{
					this.On转账Changing(value);
					this.SendPropertyChanging();
					this._转账 = value;
					this.SendPropertyChanged("转账");
					this.On转账Changed();
				}
			}
		}
		
		[Column(Storage="_重新结账", DbType="Bit")]
		public System.Nullable<bool> 重新结账
		{
			get
			{
				return this._重新结账;
			}
			set
			{
				if ((this._重新结账 != value))
				{
					this.On重新结账Changing(value);
					this.SendPropertyChanging();
					this._重新结账 = value;
					this.SendPropertyChanged("重新结账");
					this.On重新结账Changed();
				}
			}
		}
		
		[Column(Storage="_结账", DbType="Bit")]
		public System.Nullable<bool> 结账
		{
			get
			{
				return this._结账;
			}
			set
			{
				if ((this._结账 != value))
				{
					this.On结账Changing(value);
					this.SendPropertyChanging();
					this._结账 = value;
					this.SendPropertyChanged("结账");
					this.On结账Changed();
				}
			}
		}
		
		[Column(Storage="_技师管理", DbType="Bit")]
		public System.Nullable<bool> 技师管理
		{
			get
			{
				return this._技师管理;
			}
			set
			{
				if ((this._技师管理 != value))
				{
					this.On技师管理Changing(value);
					this.SendPropertyChanging();
					this._技师管理 = value;
					this.SendPropertyChanged("技师管理");
					this.On技师管理Changed();
				}
			}
		}
		
		[Column(Storage="_收银汇总统计", DbType="Bit")]
		public System.Nullable<bool> 收银汇总统计
		{
			get
			{
				return this._收银汇总统计;
			}
			set
			{
				if ((this._收银汇总统计 != value))
				{
					this.On收银汇总统计Changing(value);
					this.SendPropertyChanging();
					this._收银汇总统计 = value;
					this.SendPropertyChanged("收银汇总统计");
					this.On收银汇总统计Changed();
				}
			}
		}
		
		[Column(Storage="_包房管理", DbType="Bit")]
		public System.Nullable<bool> 包房管理
		{
			get
			{
				return this._包房管理;
			}
			set
			{
				if ((this._包房管理 != value))
				{
					this.On包房管理Changing(value);
					this.SendPropertyChanging();
					this._包房管理 = value;
					this.SendPropertyChanged("包房管理");
					this.On包房管理Changed();
				}
			}
		}
		
		[Column(Storage="_收银单据查询", DbType="Bit")]
		public System.Nullable<bool> 收银单据查询
		{
			get
			{
				return this._收银单据查询;
			}
			set
			{
				if ((this._收银单据查询 != value))
				{
					this.On收银单据查询Changing(value);
					this.SendPropertyChanging();
					this._收银单据查询 = value;
					this.SendPropertyChanged("收银单据查询");
					this.On收银单据查询Changed();
				}
			}
		}
		
		[Column(Storage="_录单汇总", DbType="Bit")]
		public System.Nullable<bool> 录单汇总
		{
			get
			{
				return this._录单汇总;
			}
			set
			{
				if ((this._录单汇总 != value))
				{
					this.On录单汇总Changing(value);
					this.SendPropertyChanging();
					this._录单汇总 = value;
					this.SendPropertyChanged("录单汇总");
					this.On录单汇总Changed();
				}
			}
		}
		
		[Column(Storage="_营业信息查看", DbType="Bit")]
		public System.Nullable<bool> 营业信息查看
		{
			get
			{
				return this._营业信息查看;
			}
			set
			{
				if ((this._营业信息查看 != value))
				{
					this.On营业信息查看Changing(value);
					this.SendPropertyChanging();
					this._营业信息查看 = value;
					this.SendPropertyChanged("营业信息查看");
					this.On营业信息查看Changed();
				}
			}
		}
		
		[Column(Storage="_售卡", DbType="Bit")]
		public System.Nullable<bool> 售卡
		{
			get
			{
				return this._售卡;
			}
			set
			{
				if ((this._售卡 != value))
				{
					this.On售卡Changing(value);
					this.SendPropertyChanging();
					this._售卡 = value;
					this.SendPropertyChanged("售卡");
					this.On售卡Changed();
				}
			}
		}
		
		[Column(Storage="_充值", DbType="Bit")]
		public System.Nullable<bool> 充值
		{
			get
			{
				return this._充值;
			}
			set
			{
				if ((this._充值 != value))
				{
					this.On充值Changing(value);
					this.SendPropertyChanging();
					this._充值 = value;
					this.SendPropertyChanged("充值");
					this.On充值Changed();
				}
			}
		}
		
		[Column(Storage="_挂失", DbType="Bit")]
		public System.Nullable<bool> 挂失
		{
			get
			{
				return this._挂失;
			}
			set
			{
				if ((this._挂失 != value))
				{
					this.On挂失Changing(value);
					this.SendPropertyChanging();
					this._挂失 = value;
					this.SendPropertyChanged("挂失");
					this.On挂失Changed();
				}
			}
		}
		
		[Column(Storage="_补卡", DbType="Bit")]
		public System.Nullable<bool> 补卡
		{
			get
			{
				return this._补卡;
			}
			set
			{
				if ((this._补卡 != value))
				{
					this.On补卡Changing(value);
					this.SendPropertyChanging();
					this._补卡 = value;
					this.SendPropertyChanged("补卡");
					this.On补卡Changed();
				}
			}
		}
		
		[Column(Storage="_读卡", DbType="Bit")]
		public System.Nullable<bool> 读卡
		{
			get
			{
				return this._读卡;
			}
			set
			{
				if ((this._读卡 != value))
				{
					this.On读卡Changing(value);
					this.SendPropertyChanging();
					this._读卡 = value;
					this.SendPropertyChanged("读卡");
					this.On读卡Changed();
				}
			}
		}
		
		[Column(Storage="_扣卡", DbType="Bit")]
		public System.Nullable<bool> 扣卡
		{
			get
			{
				return this._扣卡;
			}
			set
			{
				if ((this._扣卡 != value))
				{
					this.On扣卡Changing(value);
					this.SendPropertyChanging();
					this._扣卡 = value;
					this.SendPropertyChanged("扣卡");
					this.On扣卡Changed();
				}
			}
		}
		
		[Column(Storage="_卡入库", DbType="Bit")]
		public System.Nullable<bool> 卡入库
		{
			get
			{
				return this._卡入库;
			}
			set
			{
				if ((this._卡入库 != value))
				{
					this.On卡入库Changing(value);
					this.SendPropertyChanging();
					this._卡入库 = value;
					this.SendPropertyChanged("卡入库");
					this.On卡入库Changed();
				}
			}
		}
		
		[Column(Storage="_异常状况统计", DbType="Bit")]
		public System.Nullable<bool> 异常状况统计
		{
			get
			{
				return this._异常状况统计;
			}
			set
			{
				if ((this._异常状况统计 != value))
				{
					this.On异常状况统计Changing(value);
					this.SendPropertyChanging();
					this._异常状况统计 = value;
					this.SendPropertyChanged("异常状况统计");
					this.On异常状况统计Changed();
				}
			}
		}
		
		[Column(Storage="_提成统计", DbType="Bit")]
		public System.Nullable<bool> 提成统计
		{
			get
			{
				return this._提成统计;
			}
			set
			{
				if ((this._提成统计 != value))
				{
					this.On提成统计Changing(value);
					this.SendPropertyChanging();
					this._提成统计 = value;
					this.SendPropertyChanged("提成统计");
					this.On提成统计Changed();
				}
			}
		}
		
		[Column(Storage="_手工打折汇总", DbType="Bit")]
		public System.Nullable<bool> 手工打折汇总
		{
			get
			{
				return this._手工打折汇总;
			}
			set
			{
				if ((this._手工打折汇总 != value))
				{
					this.On手工打折汇总Changing(value);
					this.SendPropertyChanging();
					this._手工打折汇总 = value;
					this.SendPropertyChanged("手工打折汇总");
					this.On手工打折汇总Changed();
				}
			}
		}
		
		[Column(Storage="_项目报表", DbType="Bit")]
		public System.Nullable<bool> 项目报表
		{
			get
			{
				return this._项目报表;
			}
			set
			{
				if ((this._项目报表 != value))
				{
					this.On项目报表Changing(value);
					this.SendPropertyChanging();
					this._项目报表 = value;
					this.SendPropertyChanged("项目报表");
					this.On项目报表Changed();
				}
			}
		}
		
		[Column(Storage="_信用卡统计", DbType="Bit")]
		public System.Nullable<bool> 信用卡统计
		{
			get
			{
				return this._信用卡统计;
			}
			set
			{
				if ((this._信用卡统计 != value))
				{
					this.On信用卡统计Changing(value);
					this.SendPropertyChanging();
					this._信用卡统计 = value;
					this.SendPropertyChanged("信用卡统计");
					this.On信用卡统计Changed();
				}
			}
		}
		
		[Column(Storage="_营业报表", DbType="Bit")]
		public System.Nullable<bool> 营业报表
		{
			get
			{
				return this._营业报表;
			}
			set
			{
				if ((this._营业报表 != value))
				{
					this.On营业报表Changing(value);
					this.SendPropertyChanging();
					this._营业报表 = value;
					this.SendPropertyChanged("营业报表");
					this.On营业报表Changed();
				}
			}
		}
		
		[Column(Storage="_退免单汇总", DbType="Bit")]
		public System.Nullable<bool> 退免单汇总
		{
			get
			{
				return this._退免单汇总;
			}
			set
			{
				if ((this._退免单汇总 != value))
				{
					this.On退免单汇总Changing(value);
					this.SendPropertyChanging();
					this._退免单汇总 = value;
					this.SendPropertyChanged("退免单汇总");
					this.On退免单汇总Changed();
				}
			}
		}
		
		[Column(Storage="_支出统计", DbType="Bit")]
		public System.Nullable<bool> 支出统计
		{
			get
			{
				return this._支出统计;
			}
			set
			{
				if ((this._支出统计 != value))
				{
					this.On支出统计Changing(value);
					this.SendPropertyChanging();
					this._支出统计 = value;
					this.SendPropertyChanged("支出统计");
					this.On支出统计Changed();
				}
			}
		}
		
		[Column(Storage="_收银员收款统计", DbType="Bit")]
		public System.Nullable<bool> 收银员收款统计
		{
			get
			{
				return this._收银员收款统计;
			}
			set
			{
				if ((this._收银员收款统计 != value))
				{
					this.On收银员收款统计Changing(value);
					this.SendPropertyChanging();
					this._收银员收款统计 = value;
					this.SendPropertyChanged("收银员收款统计");
					this.On收银员收款统计Changed();
				}
			}
		}
		
		[Column(Storage="_月报表", DbType="Bit")]
		public System.Nullable<bool> 月报表
		{
			get
			{
				return this._月报表;
			}
			set
			{
				if ((this._月报表 != value))
				{
					this.On月报表Changing(value);
					this.SendPropertyChanging();
					this._月报表 = value;
					this.SendPropertyChanged("月报表");
					this.On月报表Changed();
				}
			}
		}
		
		[Column(Storage="_往来单位账目", DbType="Bit")]
		public System.Nullable<bool> 往来单位账目
		{
			get
			{
				return this._往来单位账目;
			}
			set
			{
				if ((this._往来单位账目 != value))
				{
					this.On往来单位账目Changing(value);
					this.SendPropertyChanging();
					this._往来单位账目 = value;
					this.SendPropertyChanged("往来单位账目");
					this.On往来单位账目Changed();
				}
			}
		}
		
		[Column(Storage="_会员积分设置", DbType="Bit")]
		public System.Nullable<bool> 会员积分设置
		{
			get
			{
				return this._会员积分设置;
			}
			set
			{
				if ((this._会员积分设置 != value))
				{
					this.On会员积分设置Changing(value);
					this.SendPropertyChanging();
					this._会员积分设置 = value;
					this.SendPropertyChanged("会员积分设置");
					this.On会员积分设置Changed();
				}
			}
		}
		
		[Column(Storage="_优惠方案", DbType="Bit")]
		public System.Nullable<bool> 优惠方案
		{
			get
			{
				return this._优惠方案;
			}
			set
			{
				if ((this._优惠方案 != value))
				{
					this.On优惠方案Changing(value);
					this.SendPropertyChanging();
					this._优惠方案 = value;
					this.SendPropertyChanged("优惠方案");
					this.On优惠方案Changed();
				}
			}
		}
		
		[Column(Storage="_会员分析", DbType="Bit")]
		public System.Nullable<bool> 会员分析
		{
			get
			{
				return this._会员分析;
			}
			set
			{
				if ((this._会员分析 != value))
				{
					this.On会员分析Changing(value);
					this.SendPropertyChanging();
					this._会员分析 = value;
					this.SendPropertyChanged("会员分析");
					this.On会员分析Changed();
				}
			}
		}
		
		[Column(Storage="_会员管理", DbType="Bit")]
		public System.Nullable<bool> 会员管理
		{
			get
			{
				return this._会员管理;
			}
			set
			{
				if ((this._会员管理 != value))
				{
					this.On会员管理Changing(value);
					this.SendPropertyChanging();
					this._会员管理 = value;
					this.SendPropertyChanged("会员管理");
					this.On会员管理Changed();
				}
			}
		}
		
		[Column(Storage="_会员消费统计", DbType="Bit")]
		public System.Nullable<bool> 会员消费统计
		{
			get
			{
				return this._会员消费统计;
			}
			set
			{
				if ((this._会员消费统计 != value))
				{
					this.On会员消费统计Changing(value);
					this.SendPropertyChanging();
					this._会员消费统计 = value;
					this.SendPropertyChanged("会员消费统计");
					this.On会员消费统计Changed();
				}
			}
		}
		
		[Column(Storage="_会员售卡及充值统计", DbType="Bit")]
		public System.Nullable<bool> 会员售卡及充值统计
		{
			get
			{
				return this._会员售卡及充值统计;
			}
			set
			{
				if ((this._会员售卡及充值统计 != value))
				{
					this.On会员售卡及充值统计Changing(value);
					this.SendPropertyChanging();
					this._会员售卡及充值统计 = value;
					this.SendPropertyChanged("会员售卡及充值统计");
					this.On会员售卡及充值统计Changed();
				}
			}
		}
		
		[Column(Storage="_手牌管理", DbType="Bit")]
		public System.Nullable<bool> 手牌管理
		{
			get
			{
				return this._手牌管理;
			}
			set
			{
				if ((this._手牌管理 != value))
				{
					this.On手牌管理Changing(value);
					this.SendPropertyChanging();
					this._手牌管理 = value;
					this.SendPropertyChanged("手牌管理");
					this.On手牌管理Changed();
				}
			}
		}
		
		[Column(Storage="_券类管理", DbType="Bit")]
		public System.Nullable<bool> 券类管理
		{
			get
			{
				return this._券类管理;
			}
			set
			{
				if ((this._券类管理 != value))
				{
					this.On券类管理Changing(value);
					this.SendPropertyChanging();
					this._券类管理 = value;
					this.SendPropertyChanged("券类管理");
					this.On券类管理Changed();
				}
			}
		}
		
		[Column(Storage="_客户管理", DbType="Bit")]
		public System.Nullable<bool> 客户管理
		{
			get
			{
				return this._客户管理;
			}
			set
			{
				if ((this._客户管理 != value))
				{
					this.On客户管理Changing(value);
					this.SendPropertyChanging();
					this._客户管理 = value;
					this.SendPropertyChanged("客户管理");
					this.On客户管理Changed();
				}
			}
		}
		
		[Column(Storage="_项目档案管理", DbType="Bit")]
		public System.Nullable<bool> 项目档案管理
		{
			get
			{
				return this._项目档案管理;
			}
			set
			{
				if ((this._项目档案管理 != value))
				{
					this.On项目档案管理Changing(value);
					this.SendPropertyChanging();
					this._项目档案管理 = value;
					this.SendPropertyChanged("项目档案管理");
					this.On项目档案管理Changed();
				}
			}
		}
		
		[Column(Storage="_客房管理", DbType="Bit")]
		public System.Nullable<bool> 客房管理
		{
			get
			{
				return this._客房管理;
			}
			set
			{
				if ((this._客房管理 != value))
				{
					this.On客房管理Changing(value);
					this.SendPropertyChanging();
					this._客房管理 = value;
					this.SendPropertyChanged("客房管理");
					this.On客房管理Changed();
				}
			}
		}
		
		[Column(Storage="_员工管理", DbType="Bit")]
		public System.Nullable<bool> 员工管理
		{
			get
			{
				return this._员工管理;
			}
			set
			{
				if ((this._员工管理 != value))
				{
					this.On员工管理Changing(value);
					this.SendPropertyChanging();
					this._员工管理 = value;
					this.SendPropertyChanged("员工管理");
					this.On员工管理Changed();
				}
			}
		}
		
		[Column(Storage="_权限管理", DbType="Bit")]
		public System.Nullable<bool> 权限管理
		{
			get
			{
				return this._权限管理;
			}
			set
			{
				if ((this._权限管理 != value))
				{
					this.On权限管理Changing(value);
					this.SendPropertyChanging();
					this._权限管理 = value;
					this.SendPropertyChanged("权限管理");
					this.On权限管理Changed();
				}
			}
		}
		
		[Column(Storage="_套餐管理", DbType="Bit")]
		public System.Nullable<bool> 套餐管理
		{
			get
			{
				return this._套餐管理;
			}
			set
			{
				if ((this._套餐管理 != value))
				{
					this.On套餐管理Changing(value);
					this.SendPropertyChanging();
					this._套餐管理 = value;
					this.SendPropertyChanged("套餐管理");
					this.On套餐管理Changed();
				}
			}
		}
		
		[Column(Storage="_库存参数", DbType="Bit")]
		public System.Nullable<bool> 库存参数
		{
			get
			{
				return this._库存参数;
			}
			set
			{
				if ((this._库存参数 != value))
				{
					this.On库存参数Changing(value);
					this.SendPropertyChanging();
					this._库存参数 = value;
					this.SendPropertyChanged("库存参数");
					this.On库存参数Changed();
				}
			}
		}
		
		[Column(Storage="_仓库设定", DbType="Bit")]
		public System.Nullable<bool> 仓库设定
		{
			get
			{
				return this._仓库设定;
			}
			set
			{
				if ((this._仓库设定 != value))
				{
					this.On仓库设定Changing(value);
					this.SendPropertyChanging();
					this._仓库设定 = value;
					this.SendPropertyChanged("仓库设定");
					this.On仓库设定Changed();
				}
			}
		}
		
		[Column(Storage="_供应商管理", DbType="Bit")]
		public System.Nullable<bool> 供应商管理
		{
			get
			{
				return this._供应商管理;
			}
			set
			{
				if ((this._供应商管理 != value))
				{
					this.On供应商管理Changing(value);
					this.SendPropertyChanging();
					this._供应商管理 = value;
					this.SendPropertyChanged("供应商管理");
					this.On供应商管理Changed();
				}
			}
		}
		
		[Column(Storage="_进货入库", DbType="Bit")]
		public System.Nullable<bool> 进货入库
		{
			get
			{
				return this._进货入库;
			}
			set
			{
				if ((this._进货入库 != value))
				{
					this.On进货入库Changing(value);
					this.SendPropertyChanging();
					this._进货入库 = value;
					this.SendPropertyChanged("进货入库");
					this.On进货入库Changed();
				}
			}
		}
		
		[Column(Storage="_现有库存", DbType="Bit")]
		public System.Nullable<bool> 现有库存
		{
			get
			{
				return this._现有库存;
			}
			set
			{
				if ((this._现有库存 != value))
				{
					this.On现有库存Changing(value);
					this.SendPropertyChanging();
					this._现有库存 = value;
					this.SendPropertyChanged("现有库存");
					this.On现有库存Changed();
				}
			}
		}
		
		[Column(Storage="_调货补货", DbType="Bit")]
		public System.Nullable<bool> 调货补货
		{
			get
			{
				return this._调货补货;
			}
			set
			{
				if ((this._调货补货 != value))
				{
					this.On调货补货Changing(value);
					this.SendPropertyChanging();
					this._调货补货 = value;
					this.SendPropertyChanged("调货补货");
					this.On调货补货Changed();
				}
			}
		}
		
		[Column(Storage="_盘点清册", DbType="Bit")]
		public System.Nullable<bool> 盘点清册
		{
			get
			{
				return this._盘点清册;
			}
			set
			{
				if ((this._盘点清册 != value))
				{
					this.On盘点清册Changing(value);
					this.SendPropertyChanging();
					this._盘点清册 = value;
					this.SendPropertyChanged("盘点清册");
					this.On盘点清册Changed();
				}
			}
		}
		
		[Column(Storage="_盘点调整", DbType="Bit")]
		public System.Nullable<bool> 盘点调整
		{
			get
			{
				return this._盘点调整;
			}
			set
			{
				if ((this._盘点调整 != value))
				{
					this.On盘点调整Changing(value);
					this.SendPropertyChanging();
					this._盘点调整 = value;
					this.SendPropertyChanged("盘点调整");
					this.On盘点调整Changed();
				}
			}
		}
		
		[Column(Storage="_应付账款", DbType="Bit")]
		public System.Nullable<bool> 应付账款
		{
			get
			{
				return this._应付账款;
			}
			set
			{
				if ((this._应付账款 != value))
				{
					this.On应付账款Changing(value);
					this.SendPropertyChanging();
					this._应付账款 = value;
					this.SendPropertyChanged("应付账款");
					this.On应付账款Changed();
				}
			}
		}
		
		[Column(Storage="_系统设置", DbType="Bit")]
		public System.Nullable<bool> 系统设置
		{
			get
			{
				return this._系统设置;
			}
			set
			{
				if ((this._系统设置 != value))
				{
					this.On系统设置Changing(value);
					this.SendPropertyChanging();
					this._系统设置 = value;
					this.SendPropertyChanged("系统设置");
					this.On系统设置Changed();
				}
			}
		}
		
		[Column(Storage="_数据优化", DbType="Bit")]
		public System.Nullable<bool> 数据优化
		{
			get
			{
				return this._数据优化;
			}
			set
			{
				if ((this._数据优化 != value))
				{
					this.On数据优化Changing(value);
					this.SendPropertyChanging();
					this._数据优化 = value;
					this.SendPropertyChanged("数据优化");
					this.On数据优化Changed();
				}
			}
		}
		
		[Column(Storage="_收银报表", DbType="Bit")]
		public System.Nullable<bool> 收银报表
		{
			get
			{
				return this._收银报表;
			}
			set
			{
				if ((this._收银报表 != value))
				{
					this.On收银报表Changing(value);
					this.SendPropertyChanging();
					this._收银报表 = value;
					this.SendPropertyChanged("收银报表");
					this.On收银报表Changed();
				}
			}
		}
		
		[Column(Storage="_微信赠送", DbType="Bit")]
		public System.Nullable<bool> 微信赠送
		{
			get
			{
				return this._微信赠送;
			}
			set
			{
				if ((this._微信赠送 != value))
				{
					this.On微信赠送Changing(value);
					this.SendPropertyChanging();
					this._微信赠送 = value;
					this.SendPropertyChanged("微信赠送");
					this.On微信赠送Changed();
				}
			}
		}
		
		[Column(Storage="_团购打折", DbType="Bit")]
		public System.Nullable<bool> 团购打折
		{
			get
			{
				return this._团购打折;
			}
			set
			{
				if ((this._团购打折 != value))
				{
					this.On团购打折Changing(value);
					this.SendPropertyChanging();
					this._团购打折 = value;
					this.SendPropertyChanged("团购打折");
					this.On团购打折Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
